"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[5489],{26633:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var s=r(74848),a=r(28453);const t={},i="Java Wrapper Classes - Complete Cheatsheet",l={id:"Java/Java Wrapper Classes - Complete Cheatsheet",title:"Java Wrapper Classes - Complete Cheatsheet",description:"A comprehensive guide to Java's wrapper classes with practical code snippets and their use cases.",source:"@site/docs/Java/Java Wrapper Classes - Complete Cheatsheet.mdx",sourceDirName:"Java",slug:"/Java/Java Wrapper Classes - Complete Cheatsheet",permalink:"/docs/Java/Java Wrapper Classes - Complete Cheatsheet",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/Java/Java Wrapper Classes - Complete Cheatsheet.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Java Primitive Data Types - Complete Cheatsheet",permalink:"/docs/Java/Java Primitive Data Types - Complete Cheatsheet"},next:{title:"Java Beginner's Guide",permalink:"/docs/Java/JavaBeginner'sGuide"}},o={},c=[{value:"\ud83d\udccb Quick Navigation",id:"-quick-navigation",level:2},{value:"\ud83d\udd39 <code>Integer</code> (for <code>int</code>)",id:"-integer-for-int",level:2},{value:"Parsing &amp; Conversion",id:"parsing--conversion",level:3},{value:"Math Operations",id:"math-operations",level:3},{value:"Bit Operations",id:"bit-operations",level:3},{value:"Constants",id:"constants",level:3},{value:"\ud83d\udd39 <code>Long</code> (for <code>long</code>)",id:"-long-for-long",level:2},{value:"Parsing &amp; Conversion",id:"parsing--conversion-1",level:3},{value:"Math Operations",id:"math-operations-1",level:3},{value:"Bit Operations",id:"bit-operations-1",level:3},{value:"Constants",id:"constants-1",level:3},{value:"\ud83d\udd39 <code>Character</code> (for <code>char</code>)",id:"-character-for-char",level:2},{value:"Character Type Checking",id:"character-type-checking",level:3},{value:"Case Conversion",id:"case-conversion",level:3},{value:"Numeric &amp; Special",id:"numeric--special",level:3},{value:"Constants",id:"constants-2",level:3},{value:"\ud83d\udd39 <code>Boolean</code> (for <code>boolean</code>)",id:"-boolean-for-boolean",level:2},{value:"Parsing &amp; Conversion",id:"parsing--conversion-2",level:3},{value:"Logical Operations",id:"logical-operations",level:3},{value:"Constants",id:"constants-3",level:3},{value:"\ud83d\udd39 <code>Double</code> (for <code>double</code>)",id:"-double-for-double",level:2},{value:"Parsing &amp; Conversion",id:"parsing--conversion-3",level:3},{value:"Special Value Checking",id:"special-value-checking",level:3},{value:"Math Operations",id:"math-operations-2",level:3},{value:"Constants",id:"constants-4",level:3},{value:"\ud83d\udd39 <code>Float</code> (for <code>float</code>)",id:"-float-for-float",level:2},{value:"Parsing &amp; Conversion",id:"parsing--conversion-4",level:3},{value:"Special Value Checking",id:"special-value-checking-1",level:3},{value:"Constants",id:"constants-5",level:3},{value:"\ud83d\udd39 <code>Byte</code> &amp; <code>Short</code>",id:"-byte--short",level:2},{value:"Byte Operations",id:"byte-operations",level:3},{value:"Short Operations",id:"short-operations",level:3},{value:"\ud83d\udd39 <code>String</code> (Special Reference Type)",id:"-string-special-reference-type",level:2},{value:"Length &amp; Checking",id:"length--checking",level:3},{value:"Content Checking",id:"content-checking",level:3},{value:"Manipulation",id:"manipulation",level:3},{value:"Splitting &amp; Joining",id:"splitting--joining",level:3},{value:"Indexing &amp; Searching",id:"indexing--searching",level:3},{value:"Conversion",id:"conversion",level:3},{value:"\ud83d\ude80 <strong>Quick Reference Summary</strong>",id:"-quick-reference-summary",level:2},{value:"\ud83c\udfaf <strong>Best Practices</strong>",id:"-best-practices",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"java-wrapper-classes---complete-cheatsheet",children:"Java Wrapper Classes - Complete Cheatsheet"})}),"\n",(0,s.jsx)(n.p,{children:"A comprehensive guide to Java's wrapper classes with practical code snippets and their use cases."}),"\n",(0,s.jsx)(n.h2,{id:"-quick-navigation",children:"\ud83d\udccb Quick Navigation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-integer-for-int",children:"Integer"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-long-for-long",children:"Long"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-character-for-char",children:"Character"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-boolean-for-boolean",children:"Boolean"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-double-for-double",children:"Double"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-float-for-float",children:"Float"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-byte--short",children:"Byte & Short"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-string-special-reference-type",children:"String"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-quick-reference-summary",children:"Quick Reference Summary"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-best-practices",children:"Best Practices"})}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"-integer-for-int",children:["\ud83d\udd39 ",(0,s.jsx)(n.code,{children:"Integer"})," (for ",(0,s.jsx)(n.code,{children:"int"}),")"]}),"\n",(0,s.jsx)(n.h3,{id:"parsing--conversion",children:"Parsing & Conversion"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// String to int/Integer\nInteger.parseInt("123");           // Returns: 123 (primitive int)\nInteger.valueOf("123");            // Returns: Integer object\nInteger.valueOf("1010", 2);        // Binary to int: 10\nInteger.decode("0x1A");            // Hex to int: 26\n\n// int to String\nInteger.toString(42);              // Returns: "42"\nInteger.toString(10, 2);           // Binary: "1010"\nInteger.toString(255, 16);         // Hex: "ff"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"math-operations",children:"Math Operations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Integer.max(10, 20);               // Returns: 20\nInteger.min(10, 20);               // Returns: 10\nInteger.sum(10, 20);               // Returns: 30\nInteger.compare(5, 7);             // Returns: -1 (since 5 < 7)\nMath.abs(-15);                     // Returns: 15\n"})}),"\n",(0,s.jsx)(n.h3,{id:"bit-operations",children:"Bit Operations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'Integer.bitCount(7);               // Number of 1-bits: 3\nInteger.toBinaryString(10);        // Returns: "1010"\nInteger.toHexString(255);          // Returns: "ff"\nInteger.toOctalString(8);          // Returns: "10"\nInteger.highestOneBit(12);         // Returns: 8 (1000 in binary)\nInteger.numberOfLeadingZeros(8);   // Returns: 28\nInteger.reverse(0b1100);           // Reverses bits\n'})}),"\n",(0,s.jsx)(n.h3,{id:"constants",children:"Constants"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Integer.MAX_VALUE;                 // 2,147,483,647\nInteger.MIN_VALUE;                 // -2,147,483,648\nInteger.SIZE;                      // 32 (bits)\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"-long-for-long",children:["\ud83d\udd39 ",(0,s.jsx)(n.code,{children:"Long"})," (for ",(0,s.jsx)(n.code,{children:"long"}),")"]}),"\n",(0,s.jsx)(n.h3,{id:"parsing--conversion-1",children:"Parsing & Conversion"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// String to long\nLong.parseLong("123456789");       // Returns: 123456789L\nLong.valueOf("123456789");         // Returns: Long object\nLong.decode("0x1FFFFFFFFL");       // Hex to long\n\n// long to String\nLong.toString(12345L);             // Returns: "12345"\nLong.toString(1024L, 2);           // Binary: "10000000000"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"math-operations-1",children:"Math Operations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Long.max(100L, 200L);              // Returns: 200L\nLong.min(100L, 200L);              // Returns: 100L\nLong.sum(100L, 200L);              // Returns: 300L\nLong.compare(5L, 7L);              // Returns: -1\n"})}),"\n",(0,s.jsx)(n.h3,{id:"bit-operations-1",children:"Bit Operations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'Long.bitCount(15L);                // Number of 1-bits: 4\nLong.toBinaryString(10L);          // Returns: "1010"\nLong.toHexString(255L);            // Returns: "ff"\nLong.numberOfLeadingZeros(16L);    // Returns: 59\nLong.highestOneBit(12L);           // Returns: 8L\n'})}),"\n",(0,s.jsx)(n.h3,{id:"constants-1",children:"Constants"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Long.MAX_VALUE;                    // 9,223,372,036,854,775,807\nLong.MIN_VALUE;                    // -9,223,372,036,854,775,808\nLong.SIZE;                         // 64 (bits)\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"-character-for-char",children:["\ud83d\udd39 ",(0,s.jsx)(n.code,{children:"Character"})," (for ",(0,s.jsx)(n.code,{children:"char"}),")"]}),"\n",(0,s.jsx)(n.h3,{id:"character-type-checking",children:"Character Type Checking"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Character.isDigit('5');            // true\nCharacter.isLetter('A');           // true\nCharacter.isLetterOrDigit('7');    // true\nCharacter.isUpperCase('A');        // true\nCharacter.isLowerCase('a');        // true\nCharacter.isWhitespace(' ');       // true\nCharacter.isAlphabetic('\u03b1');       // true (Unicode letters)\nCharacter.isDefined('\u20ac');          // true (valid Unicode)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"case-conversion",children:"Case Conversion"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Character.toUpperCase('a');        // Returns: 'A'\nCharacter.toLowerCase('B');        // Returns: 'b'\nCharacter.toTitleCase('a');        // Returns: 'A'\n"})}),"\n",(0,s.jsx)(n.h3,{id:"numeric--special",children:"Numeric & Special"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Character.getNumericValue('9');    // Returns: 9\nCharacter.getNumericValue('A');    // Returns: 10 (hex)\nCharacter.toString('x');           // Returns: \"x\"\nCharacter.compare('a', 'b');       // Returns: -1\n"})}),"\n",(0,s.jsx)(n.h3,{id:"constants-2",children:"Constants"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Character.MAX_VALUE;               // '\\uffff' (65535)\nCharacter.MIN_VALUE;               // '\\u0000' (0)\nCharacter.SIZE;                    // 16 (bits)\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"-boolean-for-boolean",children:["\ud83d\udd39 ",(0,s.jsx)(n.code,{children:"Boolean"})," (for ",(0,s.jsx)(n.code,{children:"boolean"}),")"]}),"\n",(0,s.jsx)(n.h3,{id:"parsing--conversion-2",children:"Parsing & Conversion"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'Boolean.parseBoolean("true");      // Returns: true\nBoolean.parseBoolean("TRUE");      // Returns: true\nBoolean.parseBoolean("yes");       // Returns: false (only "true" works)\nBoolean.valueOf("false");          // Returns: Boolean.FALSE\nBoolean.toString(true);            // Returns: "true"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"logical-operations",children:"Logical Operations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Boolean.logicalAnd(true, false);   // Returns: false\nBoolean.logicalOr(true, false);    // Returns: true\nBoolean.logicalXor(true, true);    // Returns: false\nBoolean.compare(true, false);      // Returns: 1\n"})}),"\n",(0,s.jsx)(n.h3,{id:"constants-3",children:"Constants"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Boolean.TRUE;                      // Boolean object for true\nBoolean.FALSE;                     // Boolean object for false\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"-double-for-double",children:["\ud83d\udd39 ",(0,s.jsx)(n.code,{children:"Double"})," (for ",(0,s.jsx)(n.code,{children:"double"}),")"]}),"\n",(0,s.jsx)(n.h3,{id:"parsing--conversion-3",children:"Parsing & Conversion"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'Double.parseDouble("3.14159");     // Returns: 3.14159\nDouble.valueOf("2.718");           // Returns: Double object\nDouble.toString(3.14);             // Returns: "3.14"\nDouble.toHexString(1.0);           // Returns: "0x1.0p0"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"special-value-checking",children:"Special Value Checking"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Double.isNaN(Math.sqrt(-1));       // true (Not a Number)\nDouble.isInfinite(1.0 / 0.0);      // true\nDouble.isFinite(3.14);             // true\nDouble.compare(3.5, 4.5);          // Returns: -1\n"})}),"\n",(0,s.jsx)(n.h3,{id:"math-operations-2",children:"Math Operations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Double.max(3.5, 4.5);              // Returns: 4.5\nDouble.min(3.5, 4.5);              // Returns: 3.5\nDouble.sum(2.5, 3.5);              // Returns: 6.0\nMath.abs(-3.14);                   // Returns: 3.14\n"})}),"\n",(0,s.jsx)(n.h3,{id:"constants-4",children:"Constants"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Double.MAX_VALUE;                  // 1.7976931348623157E308\nDouble.MIN_VALUE;                  // 4.9E-324 (smallest positive)\nDouble.POSITIVE_INFINITY;          // Positive infinity\nDouble.NEGATIVE_INFINITY;          // Negative infinity\nDouble.NaN;                        // Not a Number\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"-float-for-float",children:["\ud83d\udd39 ",(0,s.jsx)(n.code,{children:"Float"})," (for ",(0,s.jsx)(n.code,{children:"float"}),")"]}),"\n",(0,s.jsx)(n.h3,{id:"parsing--conversion-4",children:"Parsing & Conversion"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'Float.parseFloat("3.14f");         // Returns: 3.14f\nFloat.valueOf("2.718f");           // Returns: Float object\nFloat.toString(3.14f);             // Returns: "3.14"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"special-value-checking-1",children:"Special Value Checking"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Float.isNaN(0.0f / 0.0f);          // true\nFloat.isInfinite(1.0f / 0.0f);     // true\nFloat.isFinite(3.14f);             // true\nFloat.compare(3.5f, 4.5f);         // Returns: -1\n"})}),"\n",(0,s.jsx)(n.h3,{id:"constants-5",children:"Constants"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Float.MAX_VALUE;                   // 3.4028235E38\nFloat.MIN_VALUE;                   // 1.4E-45\nFloat.POSITIVE_INFINITY;           // Positive infinity\nFloat.NEGATIVE_INFINITY;           // Negative infinity\nFloat.NaN;                         // Not a Number\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"-byte--short",children:["\ud83d\udd39 ",(0,s.jsx)(n.code,{children:"Byte"})," & ",(0,s.jsx)(n.code,{children:"Short"})]}),"\n",(0,s.jsx)(n.h3,{id:"byte-operations",children:"Byte Operations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'Byte.parseByte("127");             // Returns: 127 (byte)\nByte.toString((byte) 65);          // Returns: "65"\nByte.valueOf("42");                // Returns: Byte object\nByte.compare((byte) 5, (byte) 7);  // Returns: -1\n\n// Constants\nByte.MAX_VALUE;                    // 127\nByte.MIN_VALUE;                    // -128\n'})}),"\n",(0,s.jsx)(n.h3,{id:"short-operations",children:"Short Operations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'Short.parseShort("32767");         // Returns: 32767 (short)\nShort.toString((short) 1000);      // Returns: "1000"\nShort.valueOf("500");              // Returns: Short object\nShort.compare((short) 5, (short) 7); // Returns: -1\n\n// Constants\nShort.MAX_VALUE;                   // 32767\nShort.MIN_VALUE;                   // -32768\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"-string-special-reference-type",children:["\ud83d\udd39 ",(0,s.jsx)(n.code,{children:"String"})," (Special Reference Type)"]}),"\n",(0,s.jsx)(n.h3,{id:"length--checking",children:"Length & Checking"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'String s = "  Hello World  ";\ns.length();                        // Returns: 15\ns.isEmpty();                       // Returns: false\n"".isEmpty();                      // Returns: true\ns.isBlank();                       // Returns: false (Java 11+)\n"   ".isBlank();                   // Returns: true (Java 11+)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"content-checking",children:"Content Checking"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'s.contains("Hello");               // Returns: true\ns.startsWith("  He");              // Returns: true\ns.endsWith("ld  ");                // Returns: true\ns.equals("  Hello World  ");       // Returns: true\ns.equalsIgnoreCase("  HELLO world  "); // Returns: true\n'})}),"\n",(0,s.jsx)(n.h3,{id:"manipulation",children:"Manipulation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'s.trim();                          // Returns: "Hello World"\ns.strip();                         // Returns: "Hello World" (Java 11+)\ns.toUpperCase();                   // Returns: "  HELLO WORLD  "\ns.toLowerCase();                   // Returns: "  hello world  "\ns.replace("World", "Java");        // Returns: "  Hello Java  "\ns.replaceAll("\\\\s+", " ");         // Regex: replace multiple spaces with single space\ns.substring(2, 7);                 // Returns: "Hello"\ns.repeat(3);                       // Returns: "  Hello World    Hello World    Hello World  " (Java 11+)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"splitting--joining",children:"Splitting & Joining"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'s.split(" ");                      // Returns: ["", "", "Hello", "World", "", ""]\ns.split("\\\\s+");                   // Split on any whitespace: ["", "Hello", "World", ""]\nString.join(", ", "A", "B", "C");  // Returns: "A, B, C"\nString.join("-", Arrays.asList("X", "Y", "Z")); // Returns: "X-Y-Z"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"indexing--searching",children:"Indexing & Searching"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'s.charAt(4);                       // Returns: \'l\'\ns.indexOf("o");                    // Returns: 4 (first occurrence)\ns.lastIndexOf("o");                // Returns: 7 (last occurrence)\ns.indexOf("World", 5);             // Search starting from index 5\n'})}),"\n",(0,s.jsx)(n.h3,{id:"conversion",children:"Conversion"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'String.valueOf(123);               // Returns: "123"\nString.valueOf(3.14);              // Returns: "3.14"\nString.valueOf(true);              // Returns: "true"\nString.valueOf(new char[]{\'A\', \'B\'}); // Returns: "AB"\n"42".getBytes();                   // Returns: byte array\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"-quick-reference-summary",children:["\ud83d\ude80 ",(0,s.jsx)(n.strong,{children:"Quick Reference Summary"})]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.strong,{children:"Class"})}),(0,s.jsx)(n.th,{children:(0,s.jsx)(n.strong,{children:"Key Methods"})}),(0,s.jsx)(n.th,{children:(0,s.jsx)(n.strong,{children:"Primary Use Cases"})})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Integer"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"parseInt()"}),", ",(0,s.jsx)(n.code,{children:"valueOf()"}),", ",(0,s.jsx)(n.code,{children:"toString()"}),", ",(0,s.jsx)(n.code,{children:"max()"}),", ",(0,s.jsx)(n.code,{children:"min()"}),", ",(0,s.jsx)(n.code,{children:"bitCount()"})]}),(0,s.jsx)(n.td,{children:"String conversion, math ops, bit manipulation"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Long"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"parseLong()"}),", ",(0,s.jsx)(n.code,{children:"valueOf()"}),", ",(0,s.jsx)(n.code,{children:"toString()"}),", ",(0,s.jsx)(n.code,{children:"max()"}),", ",(0,s.jsx)(n.code,{children:"min()"})]}),(0,s.jsx)(n.td,{children:"Large number operations, bit manipulation"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Character"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"isDigit()"}),", ",(0,s.jsx)(n.code,{children:"isLetter()"}),", ",(0,s.jsx)(n.code,{children:"toUpperCase()"}),", ",(0,s.jsx)(n.code,{children:"toLowerCase()"})]}),(0,s.jsx)(n.td,{children:"Character validation and transformation"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Boolean"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"parseBoolean()"}),", ",(0,s.jsx)(n.code,{children:"valueOf()"}),", ",(0,s.jsx)(n.code,{children:"logicalAnd()"}),", ",(0,s.jsx)(n.code,{children:"logicalOr()"})]}),(0,s.jsx)(n.td,{children:"Boolean parsing and logical operations"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Double/Float"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"parseDouble()"}),", ",(0,s.jsx)(n.code,{children:"isNaN()"}),", ",(0,s.jsx)(n.code,{children:"isInfinite()"}),", ",(0,s.jsx)(n.code,{children:"compare()"})]}),(0,s.jsx)(n.td,{children:"Decimal number operations, special value checking"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"String"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"trim()"}),", ",(0,s.jsx)(n.code,{children:"split()"}),", ",(0,s.jsx)(n.code,{children:"contains()"}),", ",(0,s.jsx)(n.code,{children:"substring()"}),", ",(0,s.jsx)(n.code,{children:"replace()"})]}),(0,s.jsx)(n.td,{children:"Text manipulation, searching, formatting"})]})]})]}),"\n",(0,s.jsxs)(n.h2,{id:"-best-practices",children:["\ud83c\udfaf ",(0,s.jsx)(n.strong,{children:"Best Practices"})]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Prefer ",(0,s.jsx)(n.code,{children:"valueOf()"})," over constructors"]})," - Uses cached instances for small numbers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Handle ",(0,s.jsx)(n.code,{children:"NumberFormatException"})]})," - Always catch when parsing strings"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Use ",(0,s.jsx)(n.code,{children:"equals()"})," for object comparison"]})," - Don't use ",(0,s.jsx)(n.code,{children:"=="})," with wrapper objects"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consider autoboxing/unboxing overhead"})," - Be mindful in performance-critical code"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Null-safe operations"})," - Wrapper objects can be null, primitives cannot"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Good practices\nInteger num = Integer.valueOf("123"); // Uses cache\nif (Objects.equals(num1, num2)) { }   // Null-safe comparison\n\n// Avoid\nInteger num = new Integer("123");     // Deprecated, creates new instance\nif (num1 == num2) { }                 // Unsafe reference comparison\n'})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var s=r(96540);const a={},t=s.createContext(a);function i(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);