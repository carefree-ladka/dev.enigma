"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6165],{84:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>t,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=r(4848),a=r(8453);const o={},t="JavaScript Execution in Browser",l={id:"WebDev/JavaScript/JSExecution",title:"JavaScript Execution in Browser",description:"1. Loading Phase",source:"@site/docs/WebDev/JavaScript/JSExecution.mdx",sourceDirName:"WebDev/JavaScript",slug:"/WebDev/JavaScript/JSExecution",permalink:"/js.enigma/docs/WebDev/JavaScript/JSExecution",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/WebDev/JavaScript/JSExecution.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Canceling an API Call",permalink:"/js.enigma/docs/WebDev/JavaScript/HowToCancelAPICalls"},next:{title:"Memoization",permalink:"/js.enigma/docs/WebDev/JavaScript/Memoization"}},s={},c=[{value:"1. Loading Phase",id:"1-loading-phase",level:2},{value:"HTML Parsing",id:"html-parsing",level:3},{value:"Loading Sequence",id:"loading-sequence",level:3},{value:"2. Compilation Phase",id:"2-compilation-phase",level:2},{value:"Just-In-Time (JIT) Compilation",id:"just-in-time-jit-compilation",level:3},{value:"3. Creation Phase (Memory Allocation)",id:"3-creation-phase-memory-allocation",level:2},{value:"Global Execution Context Creation",id:"global-execution-context-creation",level:3},{value:"Scope Chain Creation",id:"scope-chain-creation",level:3},{value:"4. Execution Phase",id:"4-execution-phase",level:2},{value:"Call Stack Operations",id:"call-stack-operations",level:3},{value:"Event Loop and Task Queues",id:"event-loop-and-task-queues",level:3},{value:"5. Memory Management",id:"5-memory-management",level:2},{value:"Garbage Collection",id:"garbage-collection",level:3},{value:"Memory Leaks",id:"memory-leaks",level:3},{value:"6. Error Handling",id:"6-error-handling",level:2},{value:"Error Propagation",id:"error-propagation",level:3},{value:"7. Browser APIs and Web APIs",id:"7-browser-apis-and-web-apis",level:2},{value:"DOM Manipulation",id:"dom-manipulation",level:3},{value:"Event Handling",id:"event-handling",level:3},{value:"8. Performance Optimization",id:"8-performance-optimization",level:2},{value:"Critical Rendering Path",id:"critical-rendering-path",level:3},{value:"Code Splitting",id:"code-splitting",level:3},{value:"9. Debugging Tips",id:"9-debugging-tips",level:2},{value:"Console Methods",id:"console-methods",level:3},{value:"Source Maps",id:"source-maps",level:3},{value:"10. Common Pitfalls and Solutions",id:"10-common-pitfalls-and-solutions",level:2},{value:"Performance Issues",id:"performance-issues",level:3},{value:"Memory Management",id:"memory-management",level:3},{value:"1. Engine Components",id:"1-engine-components",level:2},{value:"Main Components",id:"main-components",level:3},{value:"2. Parsing Phase",id:"2-parsing-phase",level:2},{value:"Lexical Analysis (Tokenization)",id:"lexical-analysis-tokenization",level:3},{value:"Abstract Syntax Tree (AST)",id:"abstract-syntax-tree-ast",level:3},{value:"3. Compilation Pipeline",id:"3-compilation-pipeline",level:2},{value:"Interpreter (Ignition in V8)",id:"interpreter-ignition-in-v8",level:3},{value:"JIT Compilation (TurboFan in V8)",id:"jit-compilation-turbofan-in-v8",level:3},{value:"4. Memory Management",id:"4-memory-management",level:2},{value:"Memory Spaces",id:"memory-spaces",level:3},{value:"Garbage Collection Process",id:"garbage-collection-process",level:3},{value:"5. Execution Context",id:"5-execution-context",level:2},{value:"Context Creation",id:"context-creation",level:3},{value:"Scope Chain",id:"scope-chain",level:3},{value:"6. Optimization Techniques",id:"6-optimization-techniques",level:2},{value:"Inline Caching",id:"inline-caching",level:3},{value:"Hidden Classes",id:"hidden-classes",level:3},{value:"7. Performance Monitoring",id:"7-performance-monitoring",level:2},{value:"Profiling",id:"profiling",level:3},{value:"8. Common Optimizations",id:"8-common-optimizations",level:2},{value:"Function Inlining",id:"function-inlining",level:3},{value:"Deoptimization",id:"deoptimization",level:3},{value:"9. Engine-specific Features (V8)",id:"9-engine-specific-features-v8",level:2},{value:"Turbofan Optimizations",id:"turbofan-optimizations",level:3},{value:"Orinoco Garbage Collector",id:"orinoco-garbage-collector",level:3}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",pre:"pre",ul:"ul",...(0,a.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"javascript-execution-in-browser",children:"JavaScript Execution in Browser"})}),"\n",(0,i.jsx)(e.h2,{id:"1-loading-phase",children:"1. Loading Phase"}),"\n",(0,i.jsx)(e.h3,{id:"html-parsing",children:"HTML Parsing"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:'// Regular script loading - blocks parsing\r\n<script src="app.js"><\/script>\r\n\r\n// Async loading - doesn\'t block parsing\r\n<script async src="app.js"><\/script>\r\n\r\n// Defer loading - executes after HTML parsing\r\n<script defer src="app.js"><\/script>\n'})}),"\n",(0,i.jsx)(e.h3,{id:"loading-sequence",children:"Loading Sequence"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:"Browser receives HTML"}),"\n",(0,i.jsx)(e.li,{children:"HTML parser starts parsing HTML document"}),"\n",(0,i.jsx)(e.li,{children:"Creates DOM (Document Object Model)"}),"\n",(0,i.jsxs)(e.li,{children:["Encounters ",(0,i.jsx)(e.code,{children:"<script>"})," tag","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Without async/defer: Stops parsing, downloads, executes"}),"\n",(0,i.jsx)(e.li,{children:"With async: Downloads in parallel, executes when ready"}),"\n",(0,i.jsx)(e.li,{children:"With defer: Downloads in parallel, executes after parsing"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"2-compilation-phase",children:"2. Compilation Phase"}),"\n",(0,i.jsx)(e.h3,{id:"just-in-time-jit-compilation",children:"Just-In-Time (JIT) Compilation"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:'// V8 Engine Phases:\r\n// 1. Source Code\r\nfunction add(a, b) {\r\n    return a + b;\r\n}\r\n\r\n// 2. Abstract Syntax Tree (AST)\r\n{\r\n    "type": "FunctionDeclaration",\r\n    "id": { "type": "Identifier", "name": "add" },\r\n    "params": [\r\n        { "type": "Identifier", "name": "a" },\r\n        { "type": "Identifier", "name": "b" }\r\n    ],\r\n    // ... more AST nodes\r\n}\r\n\r\n// 3. Bytecode\r\n// 4. Machine Code (for hot functions)\n'})}),"\n",(0,i.jsx)(e.h2,{id:"3-creation-phase-memory-allocation",children:"3. Creation Phase (Memory Allocation)"}),"\n",(0,i.jsx)(e.h3,{id:"global-execution-context-creation",children:"Global Execution Context Creation"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:'// 1. Global Object Creation\r\nwindow; // or global in Node.js\r\n\r\n// 2. this Binding\r\nthis === window; // true in browser\'s global scope\r\n\r\n// 3. Variable Hoisting\r\nconsole.log(name); // undefined\r\nvar name = "John";\r\n\r\n// 4. Function Hoisting\r\nsayHello(); // "Hello"\r\nfunction sayHello() {\r\n    console.log("Hello");\r\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"scope-chain-creation",children:"Scope Chain Creation"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:'// Lexical Scope Example\r\nconst global = "I\'m global";\r\n\r\nfunction outer() {\r\n    const outer = "I\'m outer";\r\n    \r\n    function inner() {\r\n        const inner = "I\'m inner";\r\n        console.log(global, outer, inner);\r\n    }\r\n    \r\n    inner();\r\n}\r\n\r\n// Scope Chain: inner -> outer -> global\n'})}),"\n",(0,i.jsx)(e.h2,{id:"4-execution-phase",children:"4. Execution Phase"}),"\n",(0,i.jsx)(e.h3,{id:"call-stack-operations",children:"Call Stack Operations"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"function first() {\r\n    console.log('First');\r\n    second();\r\n}\r\n\r\nfunction second() {\r\n    console.log('Second');\r\n    third();\r\n}\r\n\r\nfunction third() {\r\n    console.log('Third');\r\n}\r\n\r\nfirst();\r\n\r\n// Call Stack Sequence:\r\n// 1. main()\r\n// 2. first()\r\n// 3. second()\r\n// 4. third()\r\n// Then unwinding...\n"})}),"\n",(0,i.jsx)(e.h3,{id:"event-loop-and-task-queues",children:"Event Loop and Task Queues"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// 1. Synchronous Code\r\nconsole.log('Start');\r\n\r\n// 2. Macrotask (setTimeout)\r\nsetTimeout(() => {\r\n    console.log('Timeout');\r\n}, 0);\r\n\r\n// 3. Microtask (Promise)\r\nPromise.resolve()\r\n    .then(() => console.log('Promise'));\r\n\r\nconsole.log('End');\r\n\r\n// Output:\r\n// Start\r\n// End\r\n// Promise\r\n// Timeout\n"})}),"\n",(0,i.jsx)(e.h2,{id:"5-memory-management",children:"5. Memory Management"}),"\n",(0,i.jsx)(e.h3,{id:"garbage-collection",children:"Garbage Collection"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:'// Reference Counting\r\nlet obj = { data: "some data" };\r\nobj = null; // Object becomes eligible for GC\r\n\r\n// Mark and Sweep\r\nfunction process() {\r\n    const temp = { x: 123 };\r\n    // temp is only reachable within this function\r\n} // temp becomes eligible for GC\n'})}),"\n",(0,i.jsx)(e.h3,{id:"memory-leaks",children:"Memory Leaks"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// 1. Global Variables\r\nwindow.globalData = { /* large data */ };\r\n\r\n// 2. Forgotten Timers\r\nsetInterval(() => {\r\n    const data = { /* large data */ };\r\n}, 1000);\r\n\r\n// 3. Closures\r\nfunction createLeak() {\r\n    const largeData = { /* large data */ };\r\n    return () => console.log(largeData);\r\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"6-error-handling",children:"6. Error Handling"}),"\n",(0,i.jsx)(e.h3,{id:"error-propagation",children:"Error Propagation"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"try {\r\n    throw new Error('Something went wrong');\r\n} catch (error) {\r\n    console.error(error);\r\n} finally {\r\n    console.log('Cleanup');\r\n}\r\n\r\n// Async Error Handling\r\nasync function fetchData() {\r\n    try {\r\n        const response = await fetch('api/data');\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Fetch error:', error);\r\n    }\r\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"7-browser-apis-and-web-apis",children:"7. Browser APIs and Web APIs"}),"\n",(0,i.jsx)(e.h3,{id:"dom-manipulation",children:"DOM Manipulation"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Batched DOM Updates\r\nrequestAnimationFrame(() => {\r\n    element.style.transform = 'translateX(100px)';\r\n});\r\n\r\n// MutationObserver\r\nconst observer = new MutationObserver(mutations => {\r\n    console.log('DOM changed');\r\n});\r\n\r\nobserver.observe(document.body, {\r\n    childList: true,\r\n    subtree: true\r\n});\n"})}),"\n",(0,i.jsx)(e.h3,{id:"event-handling",children:"Event Handling"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Event Bubbling\r\ndocument.body.addEventListener('click', function(event) {\r\n    console.log('Body clicked');\r\n}, false);\r\n\r\n// Event Capturing\r\ndocument.body.addEventListener('click', function(event) {\r\n    console.log('Capture phase');\r\n}, true);\n"})}),"\n",(0,i.jsx)(e.h2,{id:"8-performance-optimization",children:"8. Performance Optimization"}),"\n",(0,i.jsx)(e.h3,{id:"critical-rendering-path",children:"Critical Rendering Path"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Optimize loading\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    // DOM is ready\r\n});\r\n\r\nwindow.addEventListener('load', () => {\r\n    // Everything is loaded\r\n});\r\n\r\n// Avoid layout thrashing\r\nconst height = element.offsetHeight; // Read\r\nelement.style.height = height + 100 + 'px'; // Write\n"})}),"\n",(0,i.jsx)(e.h3,{id:"code-splitting",children:"Code Splitting"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Dynamic Import\r\nbutton.addEventListener('click', async () => {\r\n    const module = await import('./feature.js');\r\n    module.doSomething();\r\n});\n"})}),"\n",(0,i.jsx)(e.h2,{id:"9-debugging-tips",children:"9. Debugging Tips"}),"\n",(0,i.jsx)(e.h3,{id:"console-methods",children:"Console Methods"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Performance Measurement\r\nconsole.time('operation');\r\n// ... some operations\r\nconsole.timeEnd('operation');\r\n\r\n// Stack Trace\r\nconsole.trace('Trace message');\r\n\r\n// Memory Snapshot\r\nconsole.memory\n"})}),"\n",(0,i.jsx)(e.h3,{id:"source-maps",children:"Source Maps"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:'// Enable source maps\r\n{\r\n    "version": 3,\r\n    "sources": ["original.js"],\r\n    "names": ["add", "a", "b"],\r\n    "mappings": "AAAA,SAASA,IAAIC,EAAGC"\r\n}\n'})}),"\n",(0,i.jsx)(e.h2,{id:"10-common-pitfalls-and-solutions",children:"10. Common Pitfalls and Solutions"}),"\n",(0,i.jsx)(e.h3,{id:"performance-issues",children:"Performance Issues"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Bad\r\nfor (let i = 0; i < array.length; i++) {}\r\n\r\n// Good\r\nconst length = array.length;\r\nfor (let i = 0; i < length; i++) {}\r\n\r\n// Better\r\narray.forEach(item => {});\n"})}),"\n",(0,i.jsx)(e.h3,{id:"memory-management",children:"Memory Management"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Bad - Memory Leak\r\nclass Component {\r\n    constructor() {\r\n        this.listener = () => this.update();\r\n        window.addEventListener('resize', this.listener);\r\n    }\r\n}\r\n\r\n// Good - Cleanup\r\nclass Component {\r\n    constructor() {\r\n        this.listener = () => this.update();\r\n        window.addEventListener('resize', this.listener);\r\n    }\r\n    \r\n    destroy() {\r\n        window.removeEventListener('resize', this.listener);\r\n    }\r\n}\n"})}),"\n",(0,i.jsx)(e.h1,{id:"javascript-engine-execution-process",children:"JavaScript Engine Execution Process"}),"\n",(0,i.jsx)(e.h2,{id:"1-engine-components",children:"1. Engine Components"}),"\n",(0,i.jsx)(e.h3,{id:"main-components",children:"Main Components"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// JavaScript Engine Architecture\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 JavaScript Engine (e.g., V8)        \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 Parser \u2192 AST \u2192 Interpreter (Ignition)\u2502\r\n\u2502          \u2193                          \u2502\r\n\u2502    Compiler (TurboFan)              \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,i.jsx)(e.h2,{id:"2-parsing-phase",children:"2. Parsing Phase"}),"\n",(0,i.jsx)(e.h3,{id:"lexical-analysis-tokenization",children:"Lexical Analysis (Tokenization)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Source Code\r\nfunction sum(a, b) { return a + b; }\r\n\r\n// Tokens\r\n[\r\n    { type: 'keyword', value: 'function' },\r\n    { type: 'identifier', value: 'sum' },\r\n    { type: 'punctuation', value: '(' },\r\n    { type: 'identifier', value: 'a' },\r\n    { type: 'punctuation', value: ',' },\r\n    { type: 'identifier', value: 'b' },\r\n    { type: 'punctuation', value: ')' },\r\n    { type: 'punctuation', value: '{' },\r\n    { type: 'keyword', value: 'return' },\r\n    { type: 'identifier', value: 'a' },\r\n    { type: 'operator', value: '+' },\r\n    { type: 'identifier', value: 'b' },\r\n    { type: 'punctuation', value: ';' },\r\n    { type: 'punctuation', value: '}' }\r\n]\n"})}),"\n",(0,i.jsx)(e.h3,{id:"abstract-syntax-tree-ast",children:"Abstract Syntax Tree (AST)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:'// AST Structure\r\n{\r\n    "type": "Program",\r\n    "body": [{\r\n        "type": "FunctionDeclaration",\r\n        "id": {\r\n            "type": "Identifier",\r\n            "name": "sum"\r\n        },\r\n        "params": [\r\n            {\r\n                "type": "Identifier",\r\n                "name": "a"\r\n            },\r\n            {\r\n                "type": "Identifier",\r\n                "name": "b"\r\n            }\r\n        ],\r\n        "body": {\r\n            "type": "BlockStatement",\r\n            "body": [{\r\n                "type": "ReturnStatement",\r\n                "argument": {\r\n                    "type": "BinaryExpression",\r\n                    "operator": "+",\r\n                    "left": {\r\n                        "type": "Identifier",\r\n                        "name": "a"\r\n                    },\r\n                    "right": {\r\n                        "type": "Identifier",\r\n                        "name": "b"\r\n                    }\r\n                }\r\n            }]\r\n        }\r\n    }]\r\n}\n'})}),"\n",(0,i.jsx)(e.h2,{id:"3-compilation-pipeline",children:"3. Compilation Pipeline"}),"\n",(0,i.jsx)(e.h3,{id:"interpreter-ignition-in-v8",children:"Interpreter (Ignition in V8)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Bytecode Generation\r\nfunction example() {\r\n    let x = 1;\r\n    x += 2;\r\n    return x;\r\n}\r\n\r\n// Simplified Bytecode\r\nLdaZero            // Load accumulator with 0\r\nStar r0           // Store accumulator to register 0\r\nLdaSmi #1         // Load small integer 1\r\nAdd r0            // Add register 0 to accumulator\r\nReturn            // Return accumulator\n"})}),"\n",(0,i.jsx)(e.h3,{id:"jit-compilation-turbofan-in-v8",children:"JIT Compilation (TurboFan in V8)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Hot Function Detection\r\nfunction hotFunction(a, b) {\r\n    return a + b;  // Called many times\r\n}\r\n\r\n// Optimization Tiers\r\n// Tier 1: Interpreted\r\n// Tier 2: Baseline compiled\r\n// Tier 3: Optimized machine code\n"})}),"\n",(0,i.jsx)(e.h2,{id:"4-memory-management",children:"4. Memory Management"}),"\n",(0,i.jsx)(e.h3,{id:"memory-spaces",children:"Memory Spaces"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Memory Layout\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 Code Space      \u2502 // Executable code\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 New Space       \u2502 // Young objects\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 Old Space       \u2502 // Long-lived objects\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502 Large Object    \u2502 // Objects > 1MB\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,i.jsx)(e.h3,{id:"garbage-collection-process",children:"Garbage Collection Process"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Mark and Sweep Algorithm\r\nfunction createObjects() {\r\n    let obj1 = { name: 'obj1' };\r\n    let obj2 = { name: 'obj2' };\r\n    obj1.ref = obj2;  // Create reference\r\n    obj2 = null;      // Break reference\r\n    return obj1;      // obj2 eligible for GC\r\n}\r\n\r\n// Generation-based Collection\r\n// Young Generation (Minor GC)\r\n// Old Generation (Major GC)\n"})}),"\n",(0,i.jsx)(e.h2,{id:"5-execution-context",children:"5. Execution Context"}),"\n",(0,i.jsx)(e.h3,{id:"context-creation",children:"Context Creation"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Global Execution Context\r\nGlobalExecutionContext = {\r\n    ThisBinding: window, // or global\r\n    VariableEnvironment: { /* variables */ },\r\n    LexicalEnvironment: { /* let/const */ }\r\n}\r\n\r\n// Function Execution Context\r\nFunctionExecutionContext = {\r\n    ThisBinding: <determined by call>,\r\n    VariableEnvironment: { /* variables */ },\r\n    LexicalEnvironment: { /* let/const */ }\r\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"scope-chain",children:"Scope Chain"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"function outer() {\r\n    const a = 1;\r\n    function inner() {\r\n        const b = 2;\r\n        console.log(a, b);\r\n    }\r\n    inner();\r\n}\r\n\r\n// Scope Chain: inner \u2192 outer \u2192 global\n"})}),"\n",(0,i.jsx)(e.h2,{id:"6-optimization-techniques",children:"6. Optimization Techniques"}),"\n",(0,i.jsx)(e.h3,{id:"inline-caching",children:"Inline Caching"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Before Optimization\r\nfunction getProperty(obj, prop) {\r\n    return obj[prop];\r\n}\r\n\r\n// After Inline Caching\r\n// Engine caches the location of prop\r\n// for subsequent lookups\n"})}),"\n",(0,i.jsx)(e.h3,{id:"hidden-classes",children:"Hidden Classes"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Bad for optimization\r\nfunction Point(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n}\r\nlet p1 = new Point(1, 2);\r\np1.z = 3;  // Creates new hidden class\r\n\r\n// Good for optimization\r\nfunction Point(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = undefined;  // Declare all properties upfront\r\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"7-performance-monitoring",children:"7. Performance Monitoring"}),"\n",(0,i.jsx)(e.h3,{id:"profiling",children:"Profiling"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// CPU Profiling\r\nconsole.profile('MyProfile');\r\n// ... code to profile\r\nconsole.profileEnd('MyProfile');\r\n\r\n// Memory Profiling\r\nconst heap = process.memoryUsage();\r\nconsole.log(heap);\n"})}),"\n",(0,i.jsx)(e.h2,{id:"8-common-optimizations",children:"8. Common Optimizations"}),"\n",(0,i.jsx)(e.h3,{id:"function-inlining",children:"Function Inlining"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Before Inlining\r\nfunction add(a, b) {\r\n    return a + b;\r\n}\r\nlet result = add(1, 2);\r\n\r\n// After Inlining (Internal)\r\nlet result = 1 + 2;  // Function call removed\n"})}),"\n",(0,i.jsx)(e.h3,{id:"deoptimization",children:"Deoptimization"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:'function add(a, b) {\r\n    // Optimized for numbers\r\n    return a + b;\r\n}\r\n\r\nadd(1, 2);        // Optimized\r\nadd("1", "2");    // Deoptimized due to type change\n'})}),"\n",(0,i.jsx)(e.h2,{id:"9-engine-specific-features-v8",children:"9. Engine-specific Features (V8)"}),"\n",(0,i.jsx)(e.h3,{id:"turbofan-optimizations",children:"Turbofan Optimizations"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Type Specialization\r\nfunction add(a, b) {\r\n    return a + b;\r\n}\r\n\r\n// After many number-only calls\r\n// Engine creates specialized version for numbers\n"})}),"\n",(0,i.jsx)(e.h3,{id:"orinoco-garbage-collector",children:"Orinoco Garbage Collector"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"// Concurrent Marking\r\n// Incremental Marking\r\n// Lazy Sweeping\r\n// Parallel Scavenging\n"})})]})}function p(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>t,x:()=>l});var i=r(6540);const a={},o=i.createContext(a);function t(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:t(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);