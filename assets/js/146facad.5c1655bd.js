"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2819],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var i=s(96540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}},76994:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>o});var i=s(74848),r=s(28453);const l={},t="Apache Kafka - System Design Interview Guide",a={id:"Backend System Design/Apache Kafka - System Design Interview Guide",title:"Apache Kafka - System Design Interview Guide",description:"Table of Contents",source:"@site/docs/Backend System Design/Apache Kafka - System Design Interview Guide.mdx",sourceDirName:"Backend System Design",slug:"/Backend System Design/Apache Kafka - System Design Interview Guide",permalink:"/dev.enigma/docs/Backend System Design/Apache Kafka - System Design Interview Guide",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/Backend System Design/Apache Kafka - System Design Interview Guide.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"REST API Design Best Practices",permalink:"/dev.enigma/docs/Backend System Design/API Design Practices"},next:{title:"Back-of-the-Envelope Calculations for System Design",permalink:"/dev.enigma/docs/Backend System Design/Back-of-the-Envelope Calculations"}},c={},o=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"What is Apache Kafka",id:"what-is-apache-kafka",level:2},{value:"Core Concepts",id:"core-concepts",level:3},{value:"Key Characteristics",id:"key-characteristics",level:3},{value:"Why Use Kafka",id:"why-use-kafka",level:2},{value:"Traditional Messaging Problems",id:"traditional-messaging-problems",level:3},{value:"Kafka Solutions",id:"kafka-solutions",level:3},{value:"Business Benefits",id:"business-benefits",level:3},{value:"Core Components",id:"core-components",level:2},{value:"1. Topics",id:"1-topics",level:3},{value:"2. Partitions",id:"2-partitions",level:3},{value:"3. Brokers",id:"3-brokers",level:3},{value:"4. Producers",id:"4-producers",level:3},{value:"5. Consumers",id:"5-consumers",level:3},{value:"6. ZooKeeper (Legacy) / KRaft (New)",id:"6-zookeeper-legacy--kraft-new",level:3},{value:"Kafka Architecture",id:"kafka-architecture",level:2},{value:"Cluster Architecture",id:"cluster-architecture",level:3},{value:"Replication Strategy",id:"replication-strategy",level:3},{value:"Message Flow",id:"message-flow",level:3},{value:"Role in Distributed Systems",id:"role-in-distributed-systems",level:2},{value:"1. Event-Driven Architecture",id:"1-event-driven-architecture",level:3},{value:"2. Data Pipeline",id:"2-data-pipeline",level:3},{value:"3. Microservices Communication",id:"3-microservices-communication",level:3},{value:"4. CQRS and Event Sourcing",id:"4-cqrs-and-event-sourcing",level:3},{value:"System Design Patterns",id:"system-design-patterns",level:2},{value:"1. Saga Pattern",id:"1-saga-pattern",level:3},{value:"2. Outbox Pattern",id:"2-outbox-pattern",level:3},{value:"3. Change Data Capture (CDC)",id:"3-change-data-capture-cdc",level:3},{value:"4. Stream Processing",id:"4-stream-processing",level:3},{value:"Performance Characteristics",id:"performance-characteristics",level:2},{value:"Throughput",id:"throughput",level:3},{value:"Scalability",id:"scalability",level:3},{value:"Optimization Strategies",id:"optimization-strategies",level:3},{value:"Use Cases",id:"use-cases",level:2},{value:"1. Real-time Analytics",id:"1-real-time-analytics",level:3},{value:"2. Log Aggregation",id:"2-log-aggregation",level:3},{value:"3. IoT Data Ingestion",id:"3-iot-data-ingestion",level:3},{value:"4. Activity Tracking",id:"4-activity-tracking",level:3},{value:"5. System Integration",id:"5-system-integration",level:3},{value:"Trade-offs and Limitations",id:"trade-offs-and-limitations",level:2},{value:"Advantages",id:"advantages",level:3},{value:"Limitations",id:"limitations",level:3},{value:"When NOT to Use Kafka",id:"when-not-to-use-kafka",level:3},{value:"Interview Questions",id:"interview-questions",level:2},{value:"1. &quot;Explain Kafka&#39;s architecture and how it ensures fault tolerance&quot;",id:"1-explain-kafkas-architecture-and-how-it-ensures-fault-tolerance",level:3},{value:"2. &quot;How does Kafka guarantee message ordering?&quot;",id:"2-how-does-kafka-guarantee-message-ordering",level:3},{value:"3. &quot;How would you design a system to handle 1 million events per second?&quot;",id:"3-how-would-you-design-a-system-to-handle-1-million-events-per-second",level:3},{value:"4. &quot;What are the different delivery semantics in Kafka?&quot;",id:"4-what-are-the-different-delivery-semantics-in-kafka",level:3},{value:"5. &quot;How do you handle consumer lag in Kafka?&quot;",id:"5-how-do-you-handle-consumer-lag-in-kafka",level:3},{value:"6. &quot;Compare Kafka with traditional message queues like RabbitMQ&quot;",id:"6-compare-kafka-with-traditional-message-queues-like-rabbitmq",level:3},{value:"7. &quot;How would you implement exactly-once semantics?&quot;",id:"7-how-would-you-implement-exactly-once-semantics",level:3},{value:"8. &quot;Design a real-time recommendation system using Kafka&quot;",id:"8-design-a-real-time-recommendation-system-using-kafka",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"apache-kafka---system-design-interview-guide",children:"Apache Kafka - System Design Interview Guide"})}),"\n",(0,i.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#what-is-apache-kafka",children:"What is Apache Kafka"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#why-use-kafka",children:"Why Use Kafka"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#core-components",children:"Core Components"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#kafka-architecture",children:"Kafka Architecture"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#role-in-distributed-systems",children:"Role in Distributed Systems"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#system-design-patterns",children:"System Design Patterns"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#performance-characteristics",children:"Performance Characteristics"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#use-cases",children:"Use Cases"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#trade-offs-and-limitations",children:"Trade-offs and Limitations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#interview-questions",children:"Interview Questions"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"what-is-apache-kafka",children:"What is Apache Kafka"}),"\n",(0,i.jsxs)(n.p,{children:["Apache Kafka is a ",(0,i.jsx)(n.strong,{children:"distributed event streaming platform"})," designed for high-throughput, low-latency data streaming. Originally developed by LinkedIn and later open-sourced, Kafka acts as a distributed commit log that can handle millions of events per second."]}),"\n",(0,i.jsx)(n.h3,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Event Streaming"}),": Continuous flow of data records (events) between systems"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Distributed"}),": Runs as a cluster across multiple servers for fault tolerance"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Persistent"}),": Events are stored on disk and replicated across brokers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pub-Sub Model"}),": Publishers send messages to topics, consumers subscribe to topics"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Immutable Log"}),": Events are append-only and immutable once written"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"key-characteristics",children:"Key Characteristics"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"High Throughput"}),": Millions of messages per second"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Low Latency"}),": Sub-millisecond message delivery"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Horizontal Scalability"}),": Add more brokers to handle increased load"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Durability"}),": Messages persisted to disk with configurable retention"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fault Tolerance"}),": Data replicated across multiple brokers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ordering Guarantees"}),": Messages ordered within partitions"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"why-use-kafka",children:"Why Use Kafka"}),"\n",(0,i.jsx)(n.h3,{id:"traditional-messaging-problems",children:"Traditional Messaging Problems"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Point-to-Point Systems"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Tight coupling between producers and consumers"}),"\n",(0,i.jsx)(n.li,{children:"Difficult to add new consumers"}),"\n",(0,i.jsx)(n.li,{children:"Single point of failure"}),"\n",(0,i.jsx)(n.li,{children:"Limited scalability"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Traditional Message Queues"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Messages deleted after consumption"}),"\n",(0,i.jsx)(n.li,{children:"Limited replay capability"}),"\n",(0,i.jsx)(n.li,{children:"Difficulty handling high throughput"}),"\n",(0,i.jsx)(n.li,{children:"Complex routing logic"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"kafka-solutions",children:"Kafka Solutions"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Decoupling"}),": Producers and consumers don't need to know about each other"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scalability"}),": Horizontal scaling through partitioning"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Durability"}),": Messages stored for configurable time periods"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Replay"}),": Consumers can replay messages from any point"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Multi-Consumer"}),": Multiple consumer groups can read same data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ordering"}),": Maintains message order within partitions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fault Tolerance"}),": No single point of failure"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"business-benefits",children:"Business Benefits"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Real-time Processing"}),": Enable real-time analytics and responses"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"System Integration"}),": Connect disparate systems seamlessly"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Event Sourcing"}),": Build event-driven architectures"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data Pipeline"}),": Create reliable data pipelines"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Microservices Communication"}),": Async communication between services"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"core-components",children:"Core Components"}),"\n",(0,i.jsx)(n.h3,{id:"1-topics",children:"1. Topics"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Definition"}),": Named streams of records where events are published"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'Topic: "user-events"\n\u251c\u2500\u2500 Partition 0: [event1, event2, event3, ...]\n\u251c\u2500\u2500 Partition 1: [event4, event5, event6, ...]\n\u2514\u2500\u2500 Partition 2: [event7, event8, event9, ...]\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Characteristics"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Logical grouping of related events"}),"\n",(0,i.jsx)(n.li,{children:"Split into multiple partitions for parallelism"}),"\n",(0,i.jsx)(n.li,{children:"Immutable append-only logs"}),"\n",(0,i.jsx)(n.li,{children:"Configurable retention period"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-partitions",children:"2. Partitions"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Enable parallelism and scalability"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Key Features"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ordering"}),": Messages ordered within each partition"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parallelism"}),": Different partitions can be processed in parallel"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Distribution"}),": Partitions distributed across brokers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key-based Routing"}),": Messages with same key go to same partition"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Partition Assignment"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Message Key \u2192 Hash Function \u2192 Partition Number\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-brokers",children:"3. Brokers"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Definition"}),": Kafka servers that store and serve data"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Responsibilities"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Store partition data on disk"}),"\n",(0,i.jsx)(n.li,{children:"Handle producer and consumer requests"}),"\n",(0,i.jsx)(n.li,{children:"Replicate data to other brokers"}),"\n",(0,i.jsx)(n.li,{children:"Manage partition leadership"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Cluster Configuration"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Kafka Cluster\n\u251c\u2500\u2500 Broker 1 (Leader for Partition 0)\n\u251c\u2500\u2500 Broker 2 (Leader for Partition 1)\n\u2514\u2500\u2500 Broker 3 (Leader for Partition 2)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"4-producers",children:"4. Producers"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Role"}),": Applications that publish events to Kafka topics"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Key Features"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Batching"}),": Group multiple messages for efficiency"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Partitioning Strategy"}),": Determine which partition to send messages"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Acknowledgment Modes"}),": Configure delivery guarantees"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Compression"}),": Reduce network overhead"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Producer Configurations"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"acks=0"}),": Fire and forget (fastest, least reliable)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"acks=1"}),": Wait for leader acknowledgment"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"acks=all"}),": Wait for all replicas (slowest, most reliable)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"5-consumers",children:"5. Consumers"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Role"}),": Applications that read events from Kafka topics"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Consumer Groups"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Multiple consumers working together"}),"\n",(0,i.jsx)(n.li,{children:"Each partition assigned to only one consumer in group"}),"\n",(0,i.jsx)(n.li,{children:"Automatic rebalancing when consumers join/leave"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Offset Management"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Track position in each partition"}),"\n",(0,i.jsx)(n.li,{children:"Enable replay from specific points"}),"\n",(0,i.jsxs)(n.li,{children:["Stored in special Kafka topic ",(0,i.jsx)(n.code,{children:"__consumer_offsets"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"6-zookeeper-legacy--kraft-new",children:"6. ZooKeeper (Legacy) / KRaft (New)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"ZooKeeper (Legacy)"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Manages cluster metadata"}),"\n",(0,i.jsx)(n.li,{children:"Handles leader election"}),"\n",(0,i.jsx)(n.li,{children:"Stores configuration information"}),"\n",(0,i.jsx)(n.li,{children:"Being phased out in newer versions"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"KRaft (Kafka Raft)"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"New consensus protocol"}),"\n",(0,i.jsx)(n.li,{children:"Eliminates ZooKeeper dependency"}),"\n",(0,i.jsx)(n.li,{children:"Simplifies deployment and operations"}),"\n",(0,i.jsx)(n.li,{children:"Better scalability and performance"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"kafka-architecture",children:"Kafka Architecture"}),"\n",(0,i.jsx)(n.h3,{id:"cluster-architecture",children:"Cluster Architecture"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    Kafka Cluster                        \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510              \u2502\n\u2502  \u2502 Broker 1 \u2502  \u2502 Broker 2 \u2502  \u2502 Broker 3 \u2502              \u2502\n\u2502  \u2502          \u2502  \u2502          \u2502  \u2502          \u2502              \u2502\n\u2502  \u2502 Topic A  \u2502  \u2502 Topic A  \u2502  \u2502 Topic A  \u2502              \u2502\n\u2502  \u2502   P0(L)  \u2502  \u2502   P1(L)  \u2502  \u2502   P0(F)  \u2502              \u2502\n\u2502  \u2502   P1(F)  \u2502  \u2502   P0(F)  \u2502  \u2502   P1(F)  \u2502              \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n    \u2191                                           \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                               \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Producer 1\u2502                               \u2502Consumer 1\u2502\n\u2502Producer 2\u2502                               \u2502Consumer 2\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Legend"}),": P0(L) = Partition 0 Leader, P0(F) = Partition 0 Follower"]}),"\n",(0,i.jsx)(n.h3,{id:"replication-strategy",children:"Replication Strategy"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Leader-Follower Model"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Each partition has one leader and multiple followers"}),"\n",(0,i.jsx)(n.li,{children:"Producers/consumers interact only with leaders"}),"\n",(0,i.jsx)(n.li,{children:"Followers replicate data from leaders"}),"\n",(0,i.jsx)(n.li,{children:"Automatic failover if leader fails"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"In-Sync Replicas (ISR)"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Replicas that are caught up with leader"}),"\n",(0,i.jsx)(n.li,{children:"Used for leader election"}),"\n",(0,i.jsx)(n.li,{children:"Ensures data consistency"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"message-flow",children:"Message Flow"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Producer"})," sends message to topic partition"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Leader broker"})," appends message to log"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Follower brokers"})," replicate the message"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Acknowledgment"})," sent back to producer"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consumers"})," read messages from partitions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Offset"})," updated after successful processing"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"role-in-distributed-systems",children:"Role in Distributed Systems"}),"\n",(0,i.jsx)(n.h3,{id:"1-event-driven-architecture",children:"1. Event-Driven Architecture"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Traditional Request-Response"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Service A \u2192 Direct Call \u2192 Service B \u2192 Direct Call \u2192 Service C\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Event-Driven with Kafka"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Service A \u2192 Event \u2192 Kafka \u2192 Service B\n                        \u2193\n                    Service C\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Loose coupling between services"}),"\n",(0,i.jsx)(n.li,{children:"Asynchronous processing"}),"\n",(0,i.jsx)(n.li,{children:"Better fault tolerance"}),"\n",(0,i.jsx)(n.li,{children:"Easier to add new consumers"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-data-pipeline",children:"2. Data Pipeline"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"ETL/ELT Processes"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Data Sources \u2192 Kafka \u2192 Stream Processing \u2192 Data Stores\n    \u2193              \u2193           \u2193              \u2193\n  APIs         Topics     Kafka Streams    Databases\nDatabases                   Apache Flink   Data Lakes\nFiles                      Apache Storm    Warehouses\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-microservices-communication",children:"3. Microservices Communication"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Service Mesh with Kafka"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Command Events"}),": Trigger actions in other services"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Domain Events"}),": Notify about business state changes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Integration Events"}),": Share data between bounded contexts"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"4-cqrs-and-event-sourcing",children:"4. CQRS and Event Sourcing"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Command Query Responsibility Segregation"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Commands \u2192 Kafka \u2192 Command Handlers"}),"\n",(0,i.jsx)(n.li,{children:"Events \u2192 Kafka \u2192 Read Model Updates"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Event Sourcing"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Store events instead of current state"}),"\n",(0,i.jsx)(n.li,{children:"Kafka as event store"}),"\n",(0,i.jsx)(n.li,{children:"Replay events to rebuild state"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"system-design-patterns",children:"System Design Patterns"}),"\n",(0,i.jsx)(n.h3,{id:"1-saga-pattern",children:"1. Saga Pattern"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Distributed Transactions"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Order Service \u2192 Kafka \u2192 Payment Service\n      \u2193                        \u2193\n  OrderCreated              PaymentProcessed\n      \u2193                        \u2193\nInventory Service \u2190  Kafka  \u2190 Notification Service\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-outbox-pattern",children:"2. Outbox Pattern"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Transactional Outbox"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Application \u2192 Database Transaction \u2192 Outbox Table\n                                         \u2193\n                                    CDC \u2192 Kafka\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ensures message delivery"}),"\n",(0,i.jsx)(n.li,{children:"Maintains data consistency"}),"\n",(0,i.jsx)(n.li,{children:"Handles dual-write problem"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-change-data-capture-cdc",children:"3. Change Data Capture (CDC)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Database Changes \u2192 Kafka"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Database \u2192 Kafka Connect \u2192 Kafka \u2192 Downstream Systems\n(Binlog)   (Debezium)      Topics   (Real-time views)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"4-stream-processing",children:"4. Stream Processing"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Real-time Analytics"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Raw Events \u2192 Kafka \u2192 Stream Processor \u2192 Aggregated Events\n                         \u2193\n                    Kafka Streams\n                   Apache Flink\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"performance-characteristics",children:"Performance Characteristics"}),"\n",(0,i.jsx)(n.h3,{id:"throughput",children:"Throughput"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Write Performance"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Sequential disk writes"}),"\n",(0,i.jsx)(n.li,{children:"Batch processing"}),"\n",(0,i.jsx)(n.li,{children:"Compression"}),"\n",(0,i.jsx)(n.li,{children:"Zero-copy transfers"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Typical Numbers"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"100K+ messages/second per broker"}),"\n",(0,i.jsx)(n.li,{children:"Millions of messages/second per cluster"}),"\n",(0,i.jsx)(n.li,{children:"Sub-millisecond latency"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"scalability",children:"Scalability"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Horizontal Scaling"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Add more brokers to cluster"}),"\n",(0,i.jsx)(n.li,{children:"Increase partition count"}),"\n",(0,i.jsx)(n.li,{children:"Consumer group parallelism"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Partition Strategy"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"High Throughput Topic:\n\u251c\u2500\u2500 50 Partitions\n\u251c\u2500\u2500 50 Consumer Instances\n\u2514\u2500\u2500 Parallel Processing\n"})}),"\n",(0,i.jsx)(n.h3,{id:"optimization-strategies",children:"Optimization Strategies"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Producer Optimization"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Increase batch size"}),"\n",(0,i.jsx)(n.li,{children:"Enable compression (snappy, lz4)"}),"\n",(0,i.jsx)(n.li,{children:"Tune buffer memory"}),"\n",(0,i.jsx)(n.li,{children:"Optimize partitioning strategy"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Consumer Optimization"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Increase fetch size"}),"\n",(0,i.jsx)(n.li,{children:"Parallel processing"}),"\n",(0,i.jsx)(n.li,{children:"Optimize commit strategy"}),"\n",(0,i.jsx)(n.li,{children:"Use consumer groups effectively"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Broker Optimization"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Fast SSD storage"}),"\n",(0,i.jsx)(n.li,{children:"Adequate RAM for page cache"}),"\n",(0,i.jsx)(n.li,{children:"Network optimization"}),"\n",(0,i.jsx)(n.li,{children:"JVM tuning"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,i.jsx)(n.h3,{id:"1-real-time-analytics",children:"1. Real-time Analytics"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": E-commerce Platform"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"User Actions \u2192 Kafka \u2192 Stream Processing \u2192 Dashboards\n(clicks, views)        (Kafka Streams)     (Real-time metrics)\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Real-time business intelligence"}),"\n",(0,i.jsx)(n.li,{children:"Fraud detection"}),"\n",(0,i.jsx)(n.li,{children:"Recommendation engines"}),"\n",(0,i.jsx)(n.li,{children:"A/B testing analytics"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-log-aggregation",children:"2. Log Aggregation"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": Microservices Logging"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Service Logs \u2192 Kafka \u2192 Log Processing \u2192 Search/Analytics\n                       (ELK Stack)      (Elasticsearch)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-iot-data-ingestion",children:"3. IoT Data Ingestion"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": Sensor Data Processing"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"IoT Devices \u2192 Kafka \u2192 Stream Processing \u2192 Time Series DB\n(millions)             (anomaly detection)  (monitoring)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"4-activity-tracking",children:"4. Activity Tracking"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": User Behavior Analytics"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Web/Mobile \u2192 Kafka \u2192 Real-time Processing \u2192 Personalization\n  Apps        Topics   (user segments)       (recommendations)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"5-system-integration",children:"5. System Integration"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": Legacy System Modernization"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Legacy System \u2192 Kafka \u2192 Modern Services\n                 \u2193\n            Event Bus\n                 \u2193\n           Multiple Consumers\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"trade-offs-and-limitations",children:"Trade-offs and Limitations"}),"\n",(0,i.jsx)(n.h3,{id:"advantages",children:"Advantages"}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"High Throughput"}),": Handle millions of events per second\n\u2705 ",(0,i.jsx)(n.strong,{children:"Durability"}),": Messages persisted and replicated\n\u2705 ",(0,i.jsx)(n.strong,{children:"Scalability"}),": Horizontal scaling through partitioning\n\u2705 ",(0,i.jsx)(n.strong,{children:"Fault Tolerance"}),": No single point of failure\n\u2705 ",(0,i.jsx)(n.strong,{children:"Flexibility"}),": Multiple consumers per topic\n\u2705 ",(0,i.jsx)(n.strong,{children:"Replay Capability"}),": Re-process historical data\n\u2705 ",(0,i.jsx)(n.strong,{children:"Ordering"}),": Maintains order within partitions"]}),"\n",(0,i.jsx)(n.h3,{id:"limitations",children:"Limitations"}),"\n",(0,i.jsxs)(n.p,{children:["\u274c ",(0,i.jsx)(n.strong,{children:"Complexity"}),": Requires understanding of distributed systems\n\u274c ",(0,i.jsx)(n.strong,{children:"Resource Intensive"}),": High memory and disk usage\n\u274c ",(0,i.jsx)(n.strong,{children:"No Cross-Partition Ordering"}),": Only ordered within partitions\n\u274c ",(0,i.jsx)(n.strong,{children:"Rebalancing Overhead"}),": Consumer group rebalancing can cause delays\n\u274c ",(0,i.jsx)(n.strong,{children:"Storage Costs"}),": Retaining messages for long periods\n\u274c ",(0,i.jsx)(n.strong,{children:"Learning Curve"}),": Complex configuration and tuning\n\u274c ",(0,i.jsx)(n.strong,{children:"Over-engineering"}),": May be overkill for simple use cases"]}),"\n",(0,i.jsx)(n.h3,{id:"when-not-to-use-kafka",children:"When NOT to Use Kafka"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Simple request-response patterns"}),"\n",(0,i.jsx)(n.li,{children:"Low-volume messaging"}),"\n",(0,i.jsx)(n.li,{children:"Immediate consistency required"}),"\n",(0,i.jsx)(n.li,{children:"Small teams without ops expertise"}),"\n",(0,i.jsx)(n.li,{children:"Cost-sensitive projects"}),"\n",(0,i.jsx)(n.li,{children:"Synchronous processing needs"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"interview-questions",children:"Interview Questions"}),"\n",(0,i.jsx)(n.h3,{id:"1-explain-kafkas-architecture-and-how-it-ensures-fault-tolerance",children:'1. "Explain Kafka\'s architecture and how it ensures fault tolerance"'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Answer Framework"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Describe broker cluster setup"}),"\n",(0,i.jsx)(n.li,{children:"Explain partition replication (leader/follower)"}),"\n",(0,i.jsx)(n.li,{children:"Discuss ISR (In-Sync Replicas)"}),"\n",(0,i.jsx)(n.li,{children:"Cover automatic leader election"}),"\n",(0,i.jsx)(n.li,{children:"Mention ZooKeeper/KRaft role"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-how-does-kafka-guarantee-message-ordering",children:'2. "How does Kafka guarantee message ordering?"'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Key Points"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ordering guaranteed within partitions only"}),"\n",(0,i.jsx)(n.li,{children:"Use partition keys for related messages"}),"\n",(0,i.jsx)(n.li,{children:"Single partition = total ordering (limited scalability)"}),"\n",(0,i.jsx)(n.li,{children:"Multiple partitions = parallel processing but no global ordering"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-how-would-you-design-a-system-to-handle-1-million-events-per-second",children:'3. "How would you design a system to handle 1 million events per second?"'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Design Considerations"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Multiple brokers in cluster"}),"\n",(0,i.jsx)(n.li,{children:"High partition count for parallelism"}),"\n",(0,i.jsx)(n.li,{children:"Proper producer batching and compression"}),"\n",(0,i.jsx)(n.li,{children:"Consumer groups for parallel processing"}),"\n",(0,i.jsx)(n.li,{children:"Monitoring and alerting setup"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"4-what-are-the-different-delivery-semantics-in-kafka",children:'4. "What are the different delivery semantics in Kafka?"'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Delivery Guarantees"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"At-most-once"}),": Messages may be lost, never duplicated"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"At-least-once"}),": Messages never lost, may be duplicated"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exactly-once"}),": Messages delivered exactly once (complex to achieve)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"5-how-do-you-handle-consumer-lag-in-kafka",children:'5. "How do you handle consumer lag in Kafka?"'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solutions"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Scale out consumer groups"}),"\n",(0,i.jsx)(n.li,{children:"Optimize consumer processing logic"}),"\n",(0,i.jsx)(n.li,{children:"Increase partition count"}),"\n",(0,i.jsx)(n.li,{children:"Monitor lag metrics"}),"\n",(0,i.jsx)(n.li,{children:"Implement alerting"}),"\n",(0,i.jsx)(n.li,{children:"Consider parallel processing strategies"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"6-compare-kafka-with-traditional-message-queues-like-rabbitmq",children:'6. "Compare Kafka with traditional message queues like RabbitMQ"'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kafka vs RabbitMQ"}),":"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Aspect"}),(0,i.jsx)(n.th,{children:"Kafka"}),(0,i.jsx)(n.th,{children:"RabbitMQ"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Model"})}),(0,i.jsx)(n.td,{children:"Log-based"}),(0,i.jsx)(n.td,{children:"Queue-based"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Persistence"})}),(0,i.jsx)(n.td,{children:"Always persisted"}),(0,i.jsx)(n.td,{children:"Optional"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Throughput"})}),(0,i.jsx)(n.td,{children:"Very high"}),(0,i.jsx)(n.td,{children:"Moderate"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Message Replay"})}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Routing"})}),(0,i.jsx)(n.td,{children:"Topic-based"}),(0,i.jsx)(n.td,{children:"Flexible routing"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Use Case"})}),(0,i.jsx)(n.td,{children:"Event streaming"}),(0,i.jsx)(n.td,{children:"Traditional messaging"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"7-how-would-you-implement-exactly-once-semantics",children:'7. "How would you implement exactly-once semantics?"'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Implementation Strategy"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Idempotent producers"}),"\n",(0,i.jsx)(n.li,{children:"Transactional producers"}),"\n",(0,i.jsx)(n.li,{children:"Consumer-side deduplication"}),"\n",(0,i.jsx)(n.li,{children:"Database transactions with offsets"}),"\n",(0,i.jsx)(n.li,{children:"Use of transactional outbox pattern"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"8-design-a-real-time-recommendation-system-using-kafka",children:'8. "Design a real-time recommendation system using Kafka"'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Architecture"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"User Events \u2192 Kafka \u2192 Stream Processing \u2192 ML Models \u2192 Kafka \u2192 API Gateway\n                      (feature extraction)              (recommendations)\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Components"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Event ingestion from web/mobile"}),"\n",(0,i.jsx)(n.li,{children:"Real-time feature engineering"}),"\n",(0,i.jsx)(n.li,{children:"Model serving infrastructure"}),"\n",(0,i.jsx)(n.li,{children:"Recommendation delivery system"}),"\n",(0,i.jsx)(n.li,{children:"Feedback loop for model improvement"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);