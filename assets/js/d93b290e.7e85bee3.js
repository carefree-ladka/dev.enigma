"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2051],{20022:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>l,toc:()=>c});var s=r(74848),t=r(28453);const d={},i="ArrayDeque in Java",l={id:"Java/ArrayDeque in Java",title:"ArrayDeque in Java",description:"ArrayDeque is a resizable array implementation of a double-ended queue (Deque) that allows insertion and removal at both ends in O(1) time (amortized).",source:"@site/docs/Java/ArrayDeque in Java.mdx",sourceDirName:"Java",slug:"/Java/ArrayDeque in Java",permalink:"/dev.enigma/docs/Java/ArrayDeque in Java",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/Java/ArrayDeque in Java.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Apache Maven for Spring Boot Development",permalink:"/dev.enigma/docs/Java/Apache Maven for Spring Boot Development"},next:{title:"Java Arrays and Strings",permalink:"/dev.enigma/docs/Java/ArraysAndStrings"}},a={},c=[{value:"Creation",id:"creation",level:2},{value:"General Declaration",id:"general-declaration",level:3},{value:"Interface-based Declarations",id:"interface-based-declarations",level:3},{value:"Key Methods",id:"key-methods",level:2},{value:"1. Add Elements",id:"1-add-elements",level:3},{value:"2. Remove Elements",id:"2-remove-elements",level:3},{value:"3. Examine Elements (Peek)",id:"3-examine-elements-peek",level:3},{value:"4. Stack Operations (LIFO)",id:"4-stack-operations-lifo",level:3},{value:"5. Other Utilities",id:"5-other-utilities",level:3},{value:"Usage Patterns",id:"usage-patterns",level:2},{value:"As a Stack (LIFO: Last In, First Out)",id:"as-a-stack-lifo-last-in-first-out",level:3},{value:"As a Queue (FIFO: First In, First Out)",id:"as-a-queue-fifo-first-in-first-out",level:3},{value:"As a Deque (Double Ended Queue)",id:"as-a-deque-double-ended-queue",level:3},{value:"Example Usage",id:"example-usage",level:2},{value:"Method Selection Rule",id:"method-selection-rule",level:2}];function o(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"arraydeque-in-java",children:"ArrayDeque in Java"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ArrayDeque<E>"})," is a resizable array implementation of a double-ended queue (Deque) that allows insertion and removal at both ends in ",(0,s.jsx)(n.strong,{children:"O(1) time"})," (amortized)."]}),"\n",(0,s.jsx)(n.h2,{id:"creation",children:"Creation"}),"\n",(0,s.jsx)(n.h3,{id:"general-declaration",children:"General Declaration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"ArrayDeque<Integer> deque = new ArrayDeque<>();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"interface-based-declarations",children:"Interface-based Declarations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// For Queue operations (FIFO)\nQueue<Integer> queue = new ArrayDeque<>();\n\n// For Stack operations (LIFO) - recommended over Stack class\nDeque<Integer> stack = new ArrayDeque<>();\n\n// For full Deque operations (both ends)\nDeque<Integer> deque = new ArrayDeque<>();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"key-methods",children:"Key Methods"}),"\n",(0,s.jsx)(n.h3,{id:"1-add-elements",children:"1. Add Elements"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Method"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"add(E e)"})}),(0,s.jsx)(n.td,{children:"Adds element at the tail (throws exception if fails)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"offer(E e)"})}),(0,s.jsx)(n.td,{children:"Adds at tail (returns false if fails)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"addFirst(E e)"})}),(0,s.jsx)(n.td,{children:"Inserts at the head"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"addLast(E e)"})}),(0,s.jsx)(n.td,{children:"Inserts at the tail"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"offerFirst(E e)"})}),(0,s.jsx)(n.td,{children:"Inserts at head, returns false if fails"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"offerLast(E e)"})}),(0,s.jsx)(n.td,{children:"Inserts at tail, returns false if fails"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"2-remove-elements",children:"2. Remove Elements"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Method"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"remove()"})}),(0,s.jsx)(n.td,{children:"Removes from head (throws exception if empty)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"poll()"})}),(0,s.jsx)(n.td,{children:"Removes from head (returns null if empty)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"removeFirst()"})}),(0,s.jsx)(n.td,{children:"Removes first element (throws exception if empty)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"removeLast()"})}),(0,s.jsx)(n.td,{children:"Removes last element (throws exception if empty)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"pollFirst()"})}),(0,s.jsx)(n.td,{children:"Removes first element (returns null if empty)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"pollLast()"})}),(0,s.jsx)(n.td,{children:"Removes last element (returns null if empty)"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"3-examine-elements-peek",children:"3. Examine Elements (Peek)"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Method"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"element()"})}),(0,s.jsx)(n.td,{children:"Retrieves head (throws exception if empty)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"peek()"})}),(0,s.jsx)(n.td,{children:"Retrieves head (returns null if empty)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"getFirst()"})}),(0,s.jsx)(n.td,{children:"Retrieves first element (throws exception if empty)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"getLast()"})}),(0,s.jsx)(n.td,{children:"Retrieves last element (throws exception if empty)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"peekFirst()"})}),(0,s.jsx)(n.td,{children:"Retrieves first element (returns null if empty)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"peekLast()"})}),(0,s.jsx)(n.td,{children:"Retrieves last element (returns null if empty)"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"4-stack-operations-lifo",children:"4. Stack Operations (LIFO)"}),"\n",(0,s.jsx)(n.p,{children:"ArrayDeque can be used as a stack instead of the Stack class:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Method"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"push(E e)"})}),(0,s.jsxs)(n.td,{children:["Same as ",(0,s.jsx)(n.code,{children:"addFirst()"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"pop()"})}),(0,s.jsxs)(n.td,{children:["Same as ",(0,s.jsx)(n.code,{children:"removeFirst()"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"peek()"})}),(0,s.jsxs)(n.td,{children:["Same as ",(0,s.jsx)(n.code,{children:"peekFirst()"})]})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"5-other-utilities",children:"5. Other Utilities"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Method"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"size()"})}),(0,s.jsx)(n.td,{children:"Returns number of elements"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"isEmpty()"})}),(0,s.jsx)(n.td,{children:"Checks if deque is empty"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"iterator()"})}),(0,s.jsx)(n.td,{children:"Returns iterator from first to last"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"descendingIterator()"})}),(0,s.jsx)(n.td,{children:"Returns iterator from last to first"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"clear()"})}),(0,s.jsx)(n.td,{children:"Removes all elements"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"contains(Object o)"})}),(0,s.jsx)(n.td,{children:"Checks if element exists"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"toArray()"})}),(0,s.jsx)(n.td,{children:"Converts to array"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"usage-patterns",children:"Usage Patterns"}),"\n",(0,s.jsx)(n.h3,{id:"as-a-stack-lifo-last-in-first-out",children:"As a Stack (LIFO: Last In, First Out)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Recommended declaration for stack\nDeque<Integer> stack = new ArrayDeque<>();\n\n// Use these methods for stack operations\nstack.push(E e)    // Insert at top\nstack.pop()        // Remove from top\nstack.peek()       // Look at top without removing\n"})}),"\n",(0,s.jsx)(n.h3,{id:"as-a-queue-fifo-first-in-first-out",children:"As a Queue (FIFO: First In, First Out)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Recommended declaration for queue\nQueue<Integer> queue = new ArrayDeque<>();\n\n// Use these methods for queue operations\nqueue.offer(E e)   // Add at tail\nqueue.poll()       // Remove from head\nqueue.peek()       // Look at head without removing\n"})}),"\n",(0,s.jsx)(n.h3,{id:"as-a-deque-double-ended-queue",children:"As a Deque (Double Ended Queue)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Declaration for full deque functionality\nDeque<Integer> deque = new ArrayDeque<>();\n\n// Insertions\ndeque.offerFirst(E e)  // Add at front\ndeque.offerLast(E e)   // Add at rear\n\n// Removals\ndeque.pollFirst()      // Remove from front\ndeque.pollLast()       // Remove from rear\n\n// Peek\ndeque.peekFirst()      // Look at front\ndeque.peekLast()       // Look at rear\n"})}),"\n",(0,s.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"import java.util.*;\n\npublic class ArrayDequeExample {\n    public static void main(String[] args) {\n        // Different ways to declare based on usage\n        ArrayDeque<Integer> generalDeque = new ArrayDeque<>();\n        Queue<Integer> queue = new ArrayDeque<>();\n        Deque<Integer> stack = new ArrayDeque<>();\n        Deque<Integer> deque = new ArrayDeque<>();\n\n        // Using as general deque\n        generalDeque.addFirst(10);   // [10]\n        generalDeque.addLast(20);    // [10, 20]\n        generalDeque.offerFirst(5);  // [5, 10, 20]\n        generalDeque.offerLast(30);  // [5, 10, 20, 30]\n\n        System.out.println(generalDeque.peekFirst()); // 5\n        System.out.println(generalDeque.peekLast());  // 30\n\n        generalDeque.removeFirst();  // removes 5 \u2192 [10, 20, 30]\n        generalDeque.removeLast();   // removes 30 \u2192 [10, 20]\n\n        // Using as stack\n        stack.push(99);       // stack push \u2192 [99, 10, 20]\n        System.out.println(stack.pop()); // 99\n\n        // Using as queue\n        queue.offer(100);     // add to rear\n        queue.offer(200);     // add to rear\n        System.out.println(queue.poll()); // remove from front\n\n        System.out.println(generalDeque); // [10, 20]\n    }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"method-selection-rule",children:"Method Selection Rule"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"push"}),", ",(0,s.jsx)(n.code,{children:"pop"}),", ",(0,s.jsx)(n.code,{children:"peek"})," \u2192 when acting like a ",(0,s.jsx)(n.strong,{children:"stack"})]}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"offer"}),", ",(0,s.jsx)(n.code,{children:"poll"}),", ",(0,s.jsx)(n.code,{children:"peek"})," \u2192 when acting like a ",(0,s.jsx)(n.strong,{children:"queue"})]}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"offerFirst/Last"}),", ",(0,s.jsx)(n.code,{children:"pollFirst/Last"}),", ",(0,s.jsx)(n.code,{children:"peekFirst/Last"})," \u2192 when acting like a ",(0,s.jsx)(n.strong,{children:"deque"})]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),": Methods that return ",(0,s.jsx)(n.code,{children:"null"})," or ",(0,s.jsx)(n.code,{children:"false"})," on failure are generally safer than those that throw exceptions."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var s=r(96540);const t={},d=s.createContext(t);function i(e){const n=s.useContext(d);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);