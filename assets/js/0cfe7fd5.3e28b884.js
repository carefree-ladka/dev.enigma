"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9597],{4251:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var i=s(4848),l=s(8453);const r={},t="System Design Concepts",c={id:"Backend System Design/System Design Concepts",title:"System Design Concepts",description:"Table of Contents",source:"@site/docs/Backend System Design/System Design Concepts.mdx",sourceDirName:"Backend System Design",slug:"/Backend System Design/System Design Concepts",permalink:"/js.enigma/docs/Backend System Design/System Design Concepts",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/Backend System Design/System Design Concepts.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Rate Limiter System Design",permalink:"/js.enigma/docs/Backend System Design/Rate Limiter System Design"},next:{title:"URL Shortener System Design",permalink:"/js.enigma/docs/Backend System Design/URL Shortener System Design"}},a={},d=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"DNS (Domain Name System)",id:"dns-domain-name-system",level:2},{value:"What is DNS?",id:"what-is-dns",level:3},{value:"Why DNS?",id:"why-dns",level:3},{value:"How DNS Works?",id:"how-dns-works",level:3},{value:"Where to Use?",id:"where-to-use",level:3},{value:"When to Optimize?",id:"when-to-optimize",level:3},{value:"API Gateway",id:"api-gateway",level:2},{value:"What is API Gateway?",id:"what-is-api-gateway",level:3},{value:"Why API Gateway?",id:"why-api-gateway",level:3},{value:"How API Gateway Works?",id:"how-api-gateway-works",level:3},{value:"Key Features:",id:"key-features",level:3},{value:"Where to Use?",id:"where-to-use-1",level:3},{value:"When to Implement?",id:"when-to-implement",level:3},{value:"Load Balancer",id:"load-balancer",level:2},{value:"What is Load Balancer?",id:"what-is-load-balancer",level:3},{value:"Why Load Balancer?",id:"why-load-balancer",level:3},{value:"Types of Load Balancing:",id:"types-of-load-balancing",level:3},{value:"Layer 4 (Transport Layer)",id:"layer-4-transport-layer",level:4},{value:"Layer 7 (Application Layer)",id:"layer-7-application-layer",level:4},{value:"Load Balancing Algorithms:",id:"load-balancing-algorithms",level:3},{value:"Where to Use?",id:"where-to-use-2",level:3},{value:"When to Implement?",id:"when-to-implement-1",level:3},{value:"Proxy (Reverse &amp; Forward)",id:"proxy-reverse--forward",level:2},{value:"Forward Proxy",id:"forward-proxy",level:3},{value:"Why Forward Proxy?",id:"why-forward-proxy",level:4},{value:"Where to Use?",id:"where-to-use-3",level:4},{value:"Reverse Proxy",id:"reverse-proxy",level:3},{value:"Why Reverse Proxy?",id:"why-reverse-proxy",level:4},{value:"Where to Use?",id:"where-to-use-4",level:4},{value:"When to Use Each?",id:"when-to-use-each",level:3},{value:"Vertical Scaling",id:"vertical-scaling",level:2},{value:"What is Vertical Scaling?",id:"what-is-vertical-scaling",level:3},{value:"Why Vertical Scaling?",id:"why-vertical-scaling",level:3},{value:"Limitations:",id:"limitations",level:3},{value:"Where to Use?",id:"where-to-use-5",level:3},{value:"When to Choose?",id:"when-to-choose",level:3},{value:"Horizontal Scaling",id:"horizontal-scaling",level:2},{value:"What is Horizontal Scaling?",id:"what-is-horizontal-scaling",level:3},{value:"Why Horizontal Scaling?",id:"why-horizontal-scaling",level:3},{value:"Challenges:",id:"challenges",level:3},{value:"Where to Use?",id:"where-to-use-6",level:3},{value:"When to Choose?",id:"when-to-choose-1",level:3},{value:"Vertical DB Scaling",id:"vertical-db-scaling",level:2},{value:"What is Vertical DB Scaling?",id:"what-is-vertical-db-scaling",level:3},{value:"Why Vertical DB Scaling?",id:"why-vertical-db-scaling",level:3},{value:"Limitations:",id:"limitations-1",level:3},{value:"Where to Use?",id:"where-to-use-7",level:3},{value:"When to Choose?",id:"when-to-choose-2",level:3},{value:"Horizontal DB Scaling",id:"horizontal-db-scaling",level:2},{value:"What is Horizontal DB Scaling?",id:"what-is-horizontal-db-scaling",level:3},{value:"Two Main Approaches:",id:"two-main-approaches",level:3},{value:"Replication (Read Scaling)",id:"replication-read-scaling",level:4},{value:"Sharding (Write Scaling)",id:"sharding-write-scaling",level:4},{value:"Why Horizontal DB Scaling?",id:"why-horizontal-db-scaling",level:3},{value:"Challenges:",id:"challenges-1",level:3},{value:"Where to Use?",id:"where-to-use-8",level:3},{value:"When to Choose?",id:"when-to-choose-3",level:3},{value:"Master-Slave (Primary-Replica) DB",id:"master-slave-primary-replica-db",level:2},{value:"What is Master-Slave?",id:"what-is-master-slave",level:3},{value:"Why Master-Slave?",id:"why-master-slave",level:3},{value:"How Replication Works?",id:"how-replication-works",level:3},{value:"Replication Types:",id:"replication-types",level:3},{value:"Synchronous Replication",id:"synchronous-replication",level:4},{value:"Asynchronous Replication",id:"asynchronous-replication",level:4},{value:"Where to Use?",id:"where-to-use-9",level:3},{value:"When to Implement?",id:"when-to-implement-2",level:3},{value:"Consistent Hashing",id:"consistent-hashing",level:2},{value:"What is Consistent Hashing?",id:"what-is-consistent-hashing",level:3},{value:"Why Consistent Hashing?",id:"why-consistent-hashing",level:3},{value:"How Consistent Hashing Works?",id:"how-consistent-hashing-works",level:3},{value:"Benefits:",id:"benefits",level:3},{value:"Where to Use?",id:"where-to-use-10",level:3},{value:"When to Implement?",id:"when-to-implement-3",level:3},{value:"Caching",id:"caching",level:2},{value:"What is Caching?",id:"what-is-caching",level:3},{value:"Why Caching?",id:"why-caching",level:3},{value:"Cache Levels:",id:"cache-levels",level:3},{value:"Browser Cache",id:"browser-cache",level:4},{value:"CDN Cache",id:"cdn-cache",level:4},{value:"Application Cache",id:"application-cache",level:4},{value:"Database Cache",id:"database-cache",level:4},{value:"Caching Strategies:",id:"caching-strategies",level:3},{value:"Cache-Aside (Lazy Loading)",id:"cache-aside-lazy-loading",level:4},{value:"Write-Through",id:"write-through",level:4},{value:"Write-Behind (Write-Back)",id:"write-behind-write-back",level:4},{value:"Refresh-Ahead",id:"refresh-ahead",level:4},{value:"Cache Eviction Policies:",id:"cache-eviction-policies",level:3},{value:"Where to Use?",id:"where-to-use-11",level:3},{value:"When to Implement?",id:"when-to-implement-4",level:3},{value:"CDN (Content Delivery Network)",id:"cdn-content-delivery-network",level:2},{value:"What is CDN?",id:"what-is-cdn",level:3},{value:"Why CDN?",id:"why-cdn",level:3},{value:"How CDN Works?",id:"how-cdn-works",level:3},{value:"CDN Types:",id:"cdn-types",level:3},{value:"Push CDN",id:"push-cdn",level:4},{value:"Pull CDN",id:"pull-cdn",level:4},{value:"Content Types:",id:"content-types",level:3},{value:"Where to Use?",id:"where-to-use-12",level:3},{value:"When to Implement?",id:"when-to-implement-5",level:3},{value:"Database Index",id:"database-index",level:2},{value:"What is Database Index?",id:"what-is-database-index",level:3},{value:"Why Database Index?",id:"why-database-index",level:3},{value:"How Index Works?",id:"how-index-works",level:3},{value:"Index Types:",id:"index-types",level:3},{value:"Primary Index",id:"primary-index",level:4},{value:"Secondary Index",id:"secondary-index",level:4},{value:"Composite Index",id:"composite-index",level:4},{value:"Unique Index",id:"unique-index",level:4},{value:"Index Structures:",id:"index-structures",level:3},{value:"B-Tree Index",id:"b-tree-index",level:4},{value:"Hash Index",id:"hash-index",level:4},{value:"Bitmap Index",id:"bitmap-index",level:4},{value:"Where to Use?",id:"where-to-use-13",level:3},{value:"Index Trade-offs:",id:"index-trade-offs",level:3},{value:"When to Create Index?",id:"when-to-create-index",level:3},{value:"When NOT to Create Index?",id:"when-not-to-create-index",level:3},{value:"CAP Theorem",id:"cap-theorem",level:2},{value:"What is CAP Theorem?",id:"what-is-cap-theorem",level:3},{value:"The Three Properties:",id:"the-three-properties",level:3},{value:"Consistency (C)",id:"consistency-c",level:4},{value:"Availability (A)",id:"availability-a",level:4},{value:"Partition Tolerance (P)",id:"partition-tolerance-p",level:4},{value:"CAP Combinations:",id:"cap-combinations",level:3},{value:"CP Systems (Consistency + Partition Tolerance)",id:"cp-systems-consistency--partition-tolerance",level:4},{value:"AP Systems (Availability + Partition Tolerance)",id:"ap-systems-availability--partition-tolerance",level:4},{value:"CA Systems (Consistency + Availability)",id:"ca-systems-consistency--availability",level:4},{value:"Real-World Examples:",id:"real-world-examples",level:3},{value:"Banking System (CP)",id:"banking-system-cp",level:4},{value:"Social Media Feed (AP)",id:"social-media-feed-ap",level:4},{value:"PACELC Theorem",id:"pacelc-theorem",level:3},{value:"Where to Apply?",id:"where-to-apply",level:3},{value:"When to Choose What?",id:"when-to-choose-what",level:3},{value:"Choose CP when:",id:"choose-cp-when",level:4},{value:"Choose AP when:",id:"choose-ap-when",level:4},{value:"Long Polling vs WebSockets",id:"long-polling-vs-websockets",level:2},{value:"The Real-Time Communication Problem",id:"the-real-time-communication-problem",level:3},{value:"Long Polling",id:"long-polling",level:3},{value:"What is Long Polling?",id:"what-is-long-polling",level:4},{value:"How Long Polling Works?",id:"how-long-polling-works",level:4},{value:"Why Long Polling?",id:"why-long-polling",level:4},{value:"Long Polling Limitations:",id:"long-polling-limitations",level:4},{value:"WebSockets",id:"websockets",level:3},{value:"What are WebSockets?",id:"what-are-websockets",level:4},{value:"How WebSockets Work?",id:"how-websockets-work",level:4},{value:"Why WebSockets?",id:"why-websockets",level:4},{value:"WebSocket Limitations:",id:"websocket-limitations",level:4},{value:"Feature Comparison",id:"feature-comparison",level:3},{value:"When to Use Long Polling?",id:"when-to-use-long-polling",level:3},{value:"Use Cases:",id:"use-cases",level:4},{value:"Ideal Scenarios:",id:"ideal-scenarios",level:4},{value:"When to Use WebSockets?",id:"when-to-use-websockets",level:3},{value:"Use Cases:",id:"use-cases-1",level:4},{value:"Ideal Scenarios:",id:"ideal-scenarios-1",level:4},{value:"Implementation Examples:",id:"implementation-examples",level:3},{value:"Long Polling Pattern:",id:"long-polling-pattern",level:4},{value:"WebSocket Pattern:",id:"websocket-pattern",level:4},{value:"Hybrid Approaches:",id:"hybrid-approaches",level:3},{value:"Decision Matrix: When to Use What",id:"decision-matrix-when-to-use-what",level:2},{value:"Application Scale Classifications",id:"application-scale-classifications",level:3},{value:"Small Scale (&lt; 10K users)",id:"small-scale--10k-users",level:4},{value:"Medium Scale (10K - 100K users)",id:"medium-scale-10k---100k-users",level:4},{value:"Large Scale (100K - 1M users)",id:"large-scale-100k---1m-users",level:4},{value:"Massive Scale (1M+ users)",id:"massive-scale-1m-users",level:4},{value:"Decision Framework by Application Type",id:"decision-framework-by-application-type",level:3},{value:"E-commerce Platform",id:"e-commerce-platform",level:4},{value:"Social Media Platform",id:"social-media-platform",level:4},{value:"Financial Trading Platform",id:"financial-trading-platform",level:4},{value:"Gaming Platform",id:"gaming-platform",level:4},{value:"Technology Selection Guide",id:"technology-selection-guide",level:3},{value:"When to Choose Each Database Pattern:",id:"when-to-choose-each-database-pattern",level:4},{value:"When to Choose Each Caching Strategy:",id:"when-to-choose-each-caching-strategy",level:4},{value:"When to Choose Each Real-time Solution:",id:"when-to-choose-each-real-time-solution",level:4},{value:"Common Anti-patterns to Avoid",id:"common-anti-patterns-to-avoid",level:3},{value:"Premature Optimization",id:"premature-optimization",level:4},{value:"Over-engineering",id:"over-engineering",level:4},{value:"Wrong Consistency Model",id:"wrong-consistency-model",level:4},{value:"Cache Everything",id:"cache-everything",level:4},{value:"Migration Paths",id:"migration-paths",level:3},{value:"Monolith \u2192 Microservices",id:"monolith--microservices",level:4},{value:"Single Database \u2192 Distributed",id:"single-database--distributed",level:4},{value:"Synchronous \u2192 Event-driven",id:"synchronous--event-driven",level:4}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"system-design-concepts",children:"System Design Concepts"})}),"\n",(0,i.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#dns-domain-name-system",children:"DNS (Domain Name System)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#api-gateway",children:"API Gateway"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#load-balancer",children:"Load Balancer"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#proxy-reverse--forward",children:"Proxy (Reverse & Forward)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#vertical-scaling",children:"Vertical Scaling"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#horizontal-scaling",children:"Horizontal Scaling"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#vertical-db-scaling",children:"Vertical DB Scaling"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#horizontal-db-scaling",children:"Horizontal DB Scaling"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#master-slave-primary-replica-db",children:"Master-Slave (Primary-Replica) DB"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#consistent-hashing",children:"Consistent Hashing"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#caching",children:"Caching"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#cdn-content-delivery-network",children:"CDN (Content Delivery Network)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#database-index",children:"Database Index"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#cap-theorem",children:"CAP Theorem"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#long-polling-vs-websockets",children:"Long Polling vs WebSockets"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#decision-matrix-when-to-use-what",children:"Decision Matrix: When to Use What"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"dns-domain-name-system",children:"DNS (Domain Name System)"}),"\n",(0,i.jsx)(n.h3,{id:"what-is-dns",children:"What is DNS?"}),"\n",(0,i.jsxs)(n.p,{children:["DNS translates human-readable domain names (like ",(0,i.jsx)(n.code,{children:"google.com"}),") into IP addresses that computers use to identify each other."]}),"\n",(0,i.jsx)(n.h3,{id:"why-dns",children:"Why DNS?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Human-friendly"}),": Easy to remember domain names vs IP addresses"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Flexibility"}),": Change server IPs without affecting users"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Load distribution"}),": Route traffic to different servers"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"how-dns-works",children:"How DNS Works?"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["User types ",(0,i.jsx)(n.code,{children:"example.com"})]}),"\n",(0,i.jsx)(n.li,{children:"Browser checks local cache"}),"\n",(0,i.jsx)(n.li,{children:"Queries DNS resolver (ISP)"}),"\n",(0,i.jsx)(n.li,{children:"Resolver queries root nameserver"}),"\n",(0,i.jsx)(n.li,{children:"Directed to TLD nameserver (.com)"}),"\n",(0,i.jsx)(n.li,{children:"Finally queries authoritative nameserver"}),"\n",(0,i.jsx)(n.li,{children:"Returns IP address"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"where-to-use",children:"Where to Use?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Essential for all web applications"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Microservices"}),": Service discovery"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Global applications"}),": Geo-based routing"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-optimize",children:"When to Optimize?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"High traffic applications"}),"\n",(0,i.jsx)(n.li,{children:"Global user base"}),"\n",(0,i.jsx)(n.li,{children:"Multiple data centers"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"api-gateway",children:"API Gateway"}),"\n",(0,i.jsx)(n.h3,{id:"what-is-api-gateway",children:"What is API Gateway?"}),"\n",(0,i.jsx)(n.p,{children:"A single entry point that manages all client requests and routes them to appropriate microservices."}),"\n",(0,i.jsx)(n.h3,{id:"why-api-gateway",children:"Why API Gateway?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Single entry point"}),": Centralized access control"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cross-cutting concerns"}),": Authentication, logging, rate limiting"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Protocol translation"}),": REST to GraphQL, HTTP to gRPC"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Request/Response transformation"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"how-api-gateway-works",children:"How API Gateway Works?"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Client \u2192 API Gateway \u2192 Authentication \u2192 Rate Limiting \u2192 Load Balancer \u2192 Microservice\n"})}),"\n",(0,i.jsx)(n.h3,{id:"key-features",children:"Key Features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Authentication & Authorization"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Rate limiting & Throttling"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Request/Response caching"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Load balancing"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Monitoring & Analytics"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"where-to-use-1",children:"Where to Use?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Microservices architecture"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Mobile applications"}),": Single endpoint for multiple services"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Third-party API management"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-implement",children:"When to Implement?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Multiple microservices (3+)"}),"\n",(0,i.jsx)(n.li,{children:"Need centralized security"}),"\n",(0,i.jsx)(n.li,{children:"Complex routing requirements"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"load-balancer",children:"Load Balancer"}),"\n",(0,i.jsx)(n.h3,{id:"what-is-load-balancer",children:"What is Load Balancer?"}),"\n",(0,i.jsx)(n.p,{children:"Distributes incoming requests across multiple servers to ensure no single server gets overwhelmed."}),"\n",(0,i.jsx)(n.h3,{id:"why-load-balancer",children:"Why Load Balancer?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"High availability"}),": No single point of failure"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance"}),": Distribute load evenly"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scalability"}),": Add/remove servers easily"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Health monitoring"}),": Route away from failed servers"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"types-of-load-balancing",children:"Types of Load Balancing:"}),"\n",(0,i.jsx)(n.h4,{id:"layer-4-transport-layer",children:"Layer 4 (Transport Layer)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Routes based on IP and port"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Faster"}),": No content inspection"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": TCP/UDP load balancing"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"layer-7-application-layer",children:"Layer 7 (Application Layer)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Routes based on HTTP content"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Smarter"}),": Content-based routing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": Route ",(0,i.jsx)(n.code,{children:"/api/users"})," to user service"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"load-balancing-algorithms",children:"Load Balancing Algorithms:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Round Robin"}),": Requests distributed sequentially"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Weighted Round Robin"}),": Servers get requests based on capacity"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Least Connections"}),": Route to server with fewest active connections"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"IP Hash"}),": Route based on client IP hash"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"where-to-use-2",children:"Where to Use?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Web applications"}),": Multiple app servers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Databases"}),": Read replicas"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Microservices"}),": Service-to-service communication"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-implement-1",children:"When to Implement?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Traffic > single server capacity"}),"\n",(0,i.jsx)(n.li,{children:"Need high availability (99.9%+)"}),"\n",(0,i.jsx)(n.li,{children:"Predictable traffic spikes"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"proxy-reverse--forward",children:"Proxy (Reverse & Forward)"}),"\n",(0,i.jsx)(n.h3,{id:"forward-proxy",children:"Forward Proxy"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Client \u2192 Forward Proxy \u2192 Internet \u2192 Server"})}),"\n",(0,i.jsx)(n.h4,{id:"why-forward-proxy",children:"Why Forward Proxy?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Privacy"}),": Hide client identity"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Security"}),": Filter malicious content"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Caching"}),": Reduce bandwidth usage"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Access control"}),": Block certain websites"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"where-to-use-3",children:"Where to Use?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Corporate networks"}),": Internet access control"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Privacy"}),": VPN services"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance"}),": Caching frequently accessed content"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"reverse-proxy",children:"Reverse Proxy"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Client \u2192 Internet \u2192 Reverse Proxy \u2192 Server"})}),"\n",(0,i.jsx)(n.h4,{id:"why-reverse-proxy",children:"Why Reverse Proxy?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Load balancing"}),": Distribute requests"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SSL termination"}),": Handle encryption/decryption"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Caching"}),": Store responses"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Security"}),": Hide server details"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"where-to-use-4",children:"Where to Use?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Web servers"}),": Nginx, Apache as reverse proxy"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"API servers"}),": Hide internal architecture"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CDN"}),": Edge servers act as reverse proxies"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-use-each",children:"When to Use Each?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Forward Proxy"}),": Client-side control needed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reverse Proxy"}),": Server-side optimization needed"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"vertical-scaling",children:"Vertical Scaling"}),"\n",(0,i.jsx)(n.h3,{id:"what-is-vertical-scaling",children:"What is Vertical Scaling?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Scale Up"}),": Adding more power (CPU, RAM, Storage) to existing machine."]}),"\n",(0,i.jsx)(n.h3,{id:"why-vertical-scaling",children:"Why Vertical Scaling?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Simple"}),": No architectural changes needed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ACID compliance"}),": Single database maintains consistency"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"No complexity"}),": Existing code works as-is"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"limitations",children:"Limitations:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hardware limits"}),": Physical constraints"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cost"}),": Exponentially expensive"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Single point of failure"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Downtime"}),": Requires server restart"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"where-to-use-5",children:"Where to Use?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Traditional databases"}),": PostgreSQL, MySQL"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Legacy applications"}),": Cannot be distributed"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Small to medium applications"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-choose",children:"When to Choose?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Early stage"}),": Simple solution"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ACID requirements"}),": Strong consistency needed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Budget constraints"}),": Initially cheaper"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"horizontal-scaling",children:"Horizontal Scaling"}),"\n",(0,i.jsx)(n.h3,{id:"what-is-horizontal-scaling",children:"What is Horizontal Scaling?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Scale Out"}),": Adding more machines to handle increased load."]}),"\n",(0,i.jsx)(n.h3,{id:"why-horizontal-scaling",children:"Why Horizontal Scaling?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"No limits"}),": Can add infinite machines"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cost-effective"}),": Use commodity hardware"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"High availability"}),": No single point of failure"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fault tolerance"}),": System continues if servers fail"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"challenges",children:"Challenges:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Complexity"}),": Distributed system challenges"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data consistency"}),": CAP theorem limitations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Network latency"}),": Inter-service communication"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"State management"}),": Sessions, caching"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"where-to-use-6",children:"Where to Use?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Web applications"}),": Stateless app servers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"NoSQL databases"}),": MongoDB, Cassandra"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Microservices"}),": Independent scaling"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-choose-1",children:"When to Choose?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"High traffic"}),": Millions of users"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Growth expectations"}),": Rapid scaling needed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Global presence"}),": Multiple regions"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"vertical-db-scaling",children:"Vertical DB Scaling"}),"\n",(0,i.jsx)(n.h3,{id:"what-is-vertical-db-scaling",children:"What is Vertical DB Scaling?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Upgrade database machine"})," \u2192 Add more CPU, RAM, faster storage to single database server."]}),"\n",(0,i.jsx)(n.h3,{id:"why-vertical-db-scaling",children:"Why Vertical DB Scaling?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Simple"}),": No code changes required"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ACID compliance"}),": Maintains database consistency"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Immediate"}),": Quick performance improvement"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"limitations-1",children:"Limitations:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hardware ceiling"}),": Physical limits"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Expensive"}),": High-end hardware costs"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Single point of failure"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Downtime"}),": Requires maintenance window"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"where-to-use-7",children:"Where to Use?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"OLTP systems"}),": Heavy transaction processing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Legacy applications"}),": Cannot modify architecture"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Compliance requirements"}),": Single database needed"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-choose-2",children:"When to Choose?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Quick fix needed"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Strong consistency required"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Limited development resources"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"horizontal-db-scaling",children:"Horizontal DB Scaling"}),"\n",(0,i.jsx)(n.h3,{id:"what-is-horizontal-db-scaling",children:"What is Horizontal DB Scaling?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Distribute database across multiple machines"})," using replication and sharding."]}),"\n",(0,i.jsx)(n.h3,{id:"two-main-approaches",children:"Two Main Approaches:"}),"\n",(0,i.jsx)(n.h4,{id:"replication-read-scaling",children:"Replication (Read Scaling)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Master-Slave"}),": One write node, multiple read nodes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Master-Master"}),": Multiple write nodes (complex)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"sharding-write-scaling",children:"Sharding (Write Scaling)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Partition data"}),": Split across multiple databases"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Shard key"}),": Determines data distribution"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"why-horizontal-db-scaling",children:"Why Horizontal DB Scaling?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"No hardware limits"}),": Add more machines"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cost-effective"}),": Commodity hardware"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"High availability"}),": No single point of failure"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"challenges-1",children:"Challenges:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Complexity"}),": Distributed queries"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data consistency"}),": Eventual consistency"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cross-shard operations"}),": JOINs across shards"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"where-to-use-8",children:"Where to Use?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Large datasets"}),": TBs of data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"High write loads"}),": Social media, IoT"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Global applications"}),": Regional data distribution"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-choose-3",children:"When to Choose?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Vertical scaling exhausted"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"High read/write demands"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Cost optimization needed"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"master-slave-primary-replica-db",children:"Master-Slave (Primary-Replica) DB"}),"\n",(0,i.jsx)(n.h3,{id:"what-is-master-slave",children:"What is Master-Slave?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Master"}),": Handles ",(0,i.jsx)(n.strong,{children:"all writes"})," (INSERT, UPDATE, DELETE)\n",(0,i.jsx)(n.strong,{children:"Slave"}),": Handles ",(0,i.jsx)(n.strong,{children:"reads"})," (SELECT) - replicates data from master"]}),"\n",(0,i.jsx)(n.h3,{id:"why-master-slave",children:"Why Master-Slave?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Read scalability"}),": Multiple slaves for read queries"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"High availability"}),": Slave can become master if primary fails"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Backup"}),": Slaves serve as live backups"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Geographic distribution"}),": Slaves in different regions"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"how-replication-works",children:"How Replication Works?"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Write"})," comes to Master"]}),"\n",(0,i.jsxs)(n.li,{children:["Master ",(0,i.jsx)(n.strong,{children:"logs"})," the change"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Asynchronous/Synchronous"})," replication to slaves"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reads"})," distributed among slaves"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"replication-types",children:"Replication Types:"}),"\n",(0,i.jsx)(n.h4,{id:"synchronous-replication",children:"Synchronous Replication"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Strong consistency, no data loss"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Higher latency, availability impact"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"asynchronous-replication",children:"Asynchronous Replication"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Low latency, high availability"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Potential data loss, eventual consistency"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"where-to-use-9",children:"Where to Use?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Read-heavy applications"}),": Social media feeds"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reporting systems"}),": Analytics on read replicas"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Geographic distribution"}),": Regional read replicas"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-implement-2",children:"When to Implement?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Read traffic >> Write traffic"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Need high availability"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Global user base"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"consistent-hashing",children:"Consistent Hashing"}),"\n",(0,i.jsx)(n.h3,{id:"what-is-consistent-hashing",children:"What is Consistent Hashing?"}),"\n",(0,i.jsx)(n.p,{children:"A distributed hashing technique that minimizes data movement when nodes are added/removed."}),"\n",(0,i.jsx)(n.h3,{id:"why-consistent-hashing",children:"Why Consistent Hashing?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Traditional Hashing Problem"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"server = hash(key) % number_of_servers\n"})}),"\n",(0,i.jsxs)(n.p,{children:["When servers change, ",(0,i.jsx)(n.strong,{children:"most keys"})," need redistribution."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Consistent Hashing Solution"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hash ring"}),": Servers and keys mapped to ring"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Minimal redistribution"}),": Only affected keys move"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"how-consistent-hashing-works",children:"How Consistent Hashing Works?"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hash ring"}),": 0 to 2^32-1"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Map servers"}),": Hash server IDs to ring positions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Map keys"}),": Hash keys to ring positions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key assignment"}),": Clockwise to next server"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Virtual nodes"}),": Multiple positions per server for better distribution"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"benefits",children:"Benefits:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Minimal redistribution"}),": Only 1/N keys move when adding server"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Load balancing"}),": Virtual nodes ensure even distribution"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fault tolerance"}),": System continues with node failures"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"where-to-use-10",children:"Where to Use?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Distributed caches"}),": Redis Cluster, Memcached"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Distributed databases"}),": Cassandra, DynamoDB"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Load balancers"}),": Consistent server assignment"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CDN"}),": Content distribution"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-implement-3",children:"When to Implement?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Dynamic scaling"}),": Frequent server changes"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Large distributed systems"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Need predictable redistribution"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"caching",children:"Caching"}),"\n",(0,i.jsx)(n.h3,{id:"what-is-caching",children:"What is Caching?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Temporary storage"})," of frequently accessed data in faster storage medium."]}),"\n",(0,i.jsx)(n.h3,{id:"why-caching",children:"Why Caching?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance"}),": Sub-millisecond response times"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cost reduction"}),": Fewer database queries"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scalability"}),": Handle more concurrent users"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User experience"}),": Faster page loads"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cache-levels",children:"Cache Levels:"}),"\n",(0,i.jsx)(n.h4,{id:"browser-cache",children:"Browser Cache"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Client-side"}),": Images, CSS, JS files"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Control"}),": Cache-Control headers"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"cdn-cache",children:"CDN Cache"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Edge locations"}),": Geographically distributed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Content"}),": Static assets, API responses"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"application-cache",children:"Application Cache"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"In-memory"}),": Redis, Memcached"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Content"}),": Database query results, computed values"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"database-cache",children:"Database Cache"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Query cache"}),": Cached query results"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Buffer pool"}),": Frequently accessed pages"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"caching-strategies",children:"Caching Strategies:"}),"\n",(0,i.jsx)(n.h4,{id:"cache-aside-lazy-loading",children:"Cache-Aside (Lazy Loading)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"1. Check cache\n2. If miss \u2192 Query DB \u2192 Update cache\n3. If hit \u2192 Return from cache\n"})}),"\n",(0,i.jsx)(n.h4,{id:"write-through",children:"Write-Through"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"1. Write to cache\n2. Write to database\n3. Return success\n"})}),"\n",(0,i.jsx)(n.h4,{id:"write-behind-write-back",children:"Write-Behind (Write-Back)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"1. Write to cache\n2. Return success\n3. Asynchronously write to database\n"})}),"\n",(0,i.jsx)(n.h4,{id:"refresh-ahead",children:"Refresh-Ahead"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"1. Refresh cache before expiration\n2. Always serve from cache\n"})}),"\n",(0,i.jsx)(n.h3,{id:"cache-eviction-policies",children:"Cache Eviction Policies:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LRU"}),": Least Recently Used"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LFU"}),": Least Frequently Used"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"TTL"}),": Time To Live"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"FIFO"}),": First In, First Out"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"where-to-use-11",children:"Where to Use?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Web applications"}),": Session data, user profiles"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"APIs"}),": Response caching"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Databases"}),": Query result caching"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Static content"}),": Images, videos, documents"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-implement-4",children:"When to Implement?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Repetitive queries"}),": Same data accessed frequently"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Expensive computations"}),": Complex calculations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"External API calls"}),": Third-party service responses"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cdn-content-delivery-network",children:"CDN (Content Delivery Network)"}),"\n",(0,i.jsx)(n.h3,{id:"what-is-cdn",children:"What is CDN?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Geographically distributed servers"})," that cache and serve content from locations closest to users."]}),"\n",(0,i.jsx)(n.h3,{id:"why-cdn",children:"Why CDN?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reduced latency"}),": Serve from nearest location"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Bandwidth optimization"}),": Reduce origin server load"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"High availability"}),": Multiple edge locations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DDoS protection"}),": Absorb malicious traffic"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"how-cdn-works",children:"How CDN Works?"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User requests"})," content"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DNS resolution"})," points to nearest edge server"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Edge server checks"})," local cache"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cache hit"}),": Serve from edge"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cache miss"}),": Fetch from origin, cache, then serve"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cdn-types",children:"CDN Types:"}),"\n",(0,i.jsx)(n.h4,{id:"push-cdn",children:"Push CDN"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Manual upload"}),": Content pushed to CDN"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Control"}),": Full control over caching"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Less frequent updates"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"pull-cdn",children:"Pull CDN"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Automatic caching"}),": CDN pulls on first request"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Convenience"}),": No manual intervention"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Frequent content updates"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"content-types",children:"Content Types:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Static assets"}),": Images, CSS, JS, fonts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Dynamic content"}),": API responses (with proper headers)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Video streaming"}),": Adaptive bitrate streaming"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Software downloads"}),": Large files"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"where-to-use-12",children:"Where to Use?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Global applications"}),": Users worldwide"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Media-heavy sites"}),": Images, videos"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"E-commerce"}),": Product images, catalogs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"APIs"}),": Cacheable responses"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-implement-5",children:"When to Implement?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Global user base"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Large static assets"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"High traffic volumes"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Need 99.9%+ availability"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"database-index",children:"Database Index"}),"\n",(0,i.jsx)(n.h3,{id:"what-is-database-index",children:"What is Database Index?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Data structure"})," that improves query performance by creating shortcuts to find data quickly."]}),"\n",(0,i.jsx)(n.h3,{id:"why-database-index",children:"Why Database Index?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Query performance"}),": O(log n) vs O(n) lookup"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Faster JOINs"}),": Efficient table joining"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ordering"}),": Quick ORDER BY operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Uniqueness"}),": Enforce unique constraints"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"how-index-works",children:"How Index Works?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Without Index"}),": Sequential scan through all rows\n",(0,i.jsx)(n.strong,{children:"With Index"}),": Tree structure points directly to data"]}),"\n",(0,i.jsx)(n.h3,{id:"index-types",children:"Index Types:"}),"\n",(0,i.jsx)(n.h4,{id:"primary-index",children:"Primary Index"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Clustered"}),": Data physically ordered by index key"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"One per table"}),": Usually on primary key"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"secondary-index",children:"Secondary Index"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Non-clustered"}),": Separate structure pointing to data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Multiple allowed"}),": On any column"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"composite-index",children:"Composite Index"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Multiple columns"}),": Index on (col1, col2, col3)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Column order matters"}),": Use leftmost columns first"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"unique-index",children:"Unique Index"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Uniqueness enforcement"}),": No duplicate values"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance"}),": Same as regular index"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"index-structures",children:"Index Structures:"}),"\n",(0,i.jsx)(n.h4,{id:"b-tree-index",children:"B-Tree Index"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Balanced tree"}),": Equal path length to all leaves"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Range queries"}),": Efficient for ",(0,i.jsx)(n.code,{children:">"}),", ",(0,i.jsx)(n.code,{children:"<"}),", BETWEEN"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Most common"}),": Default in most databases"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"hash-index",children:"Hash Index"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hash function"}),": Direct key-to-location mapping"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Equality queries"}),": Only = operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fast lookups"}),": O(1) access time"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"bitmap-index",children:"Bitmap Index"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Bit arrays"}),": Each bit represents row presence"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Low cardinality"}),": Gender, status fields"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data warehousing"}),": OLAP systems"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"where-to-use-13",children:"Where to Use?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Frequently queried columns"}),": WHERE clause columns"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"JOIN columns"}),": Foreign key relationships"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ORDER BY columns"}),": Sorting operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GROUP BY columns"}),": Aggregation queries"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"index-trade-offs",children:"Index Trade-offs:"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Faster SELECT queries"}),"\n",(0,i.jsx)(n.li,{children:"Faster JOINs and sorting"}),"\n",(0,i.jsx)(n.li,{children:"Unique constraint enforcement"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Costs"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Storage overhead (10-15% of table size)"}),"\n",(0,i.jsx)(n.li,{children:"Slower INSERT/UPDATE/DELETE"}),"\n",(0,i.jsx)(n.li,{children:"Index maintenance overhead"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-create-index",children:"When to Create Index?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Query frequency"}),": Column used in many queries"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Query performance"}),": Slow queries on large tables"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cardinality"}),": High selectivity (many unique values)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-not-to-create-index",children:"When NOT to Create Index?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Frequently updated columns"}),": High write overhead"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Small tables"}),": Sequential scan is faster"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Low selectivity"}),": Few unique values"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"cap-theorem",children:"CAP Theorem"}),"\n",(0,i.jsx)(n.h3,{id:"what-is-cap-theorem",children:"What is CAP Theorem?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Impossible"})," to guarantee all three properties simultaneously in a distributed system:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"C"}),"onsistency"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"A"}),"vailability"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"P"}),"artition tolerance"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"the-three-properties",children:"The Three Properties:"}),"\n",(0,i.jsx)(n.h4,{id:"consistency-c",children:"Consistency (C)"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"All nodes see the same data simultaneously"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Strong consistency"}),": All reads return most recent write"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Eventual consistency"}),": System will become consistent over time"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Weak consistency"}),": No guarantees about when consistency occurs"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"availability-a",children:"Availability (A)"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"System remains operational 100% of the time"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"High availability"}),": System responds to requests"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fault tolerance"}),": Continues operating despite failures"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"No single point of failure"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"partition-tolerance-p",children:"Partition Tolerance (P)"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"System continues operating despite network failures"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Network splits"}),": Nodes cannot communicate"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Message loss"}),": Packets dropped or delayed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Distributed reality"}),": Network failures are inevitable"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cap-combinations",children:"CAP Combinations:"}),"\n",(0,i.jsx)(n.h4,{id:"cp-systems-consistency--partition-tolerance",children:"CP Systems (Consistency + Partition Tolerance)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Sacrifice Availability"}),": System may become unavailable during partitions"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": MongoDB, Redis Cluster, HBase"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Banking systems, inventory management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Behavior"}),": Block operations until consistency restored"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"ap-systems-availability--partition-tolerance",children:"AP Systems (Availability + Partition Tolerance)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Sacrifice Consistency"}),": Accept temporary inconsistency for availability"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": Cassandra, DynamoDB, CouchDB"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Social media, content delivery"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Behavior"}),": Continue serving potentially stale data"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"ca-systems-consistency--availability",children:"CA Systems (Consistency + Availability)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Not partition tolerant"}),": Only work in single node or perfect network"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": Traditional RDBMS in single node"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reality"}),": Not feasible in distributed systems"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Note"}),": Network partitions will occur"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"real-world-examples",children:"Real-World Examples:"}),"\n",(0,i.jsx)(n.h4,{id:"banking-system-cp",children:"Banking System (CP)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Scenario: Transfer $100 from Account A to Account B\nChoice: Ensure both accounts updated correctly OR system available\nDecision: Block operation until consistency guaranteed\n"})}),"\n",(0,i.jsx)(n.h4,{id:"social-media-feed-ap",children:"Social Media Feed (AP)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Scenario: User posts update, friends should see it\nChoice: All friends see update immediately OR system stays responsive\nDecision: Some friends may see stale feed temporarily\n"})}),"\n",(0,i.jsx)(n.h3,{id:"pacelc-theorem",children:"PACELC Theorem"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Extension of CAP"}),": Even without partitions, trade-off between Latency and Consistency"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PAC"}),": During partition, choose A or C\n",(0,i.jsx)(n.strong,{children:"ELC"}),": Else (normal operation), choose L (Latency) or C (Consistency)"]}),"\n",(0,i.jsx)(n.h3,{id:"where-to-apply",children:"Where to Apply?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"System design decisions"}),": Choose database based on requirements"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Architecture planning"}),": Understand trade-offs upfront"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Incident response"}),": Know which property to sacrifice"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-choose-what",children:"When to Choose What?"}),"\n",(0,i.jsx)(n.h4,{id:"choose-cp-when",children:"Choose CP when:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Financial systems"}),": Money transfers, trading"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Inventory management"}),": Stock levels"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Configuration systems"}),": Feature flags"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Strong consistency required"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"choose-ap-when",children:"Choose AP when:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Social networks"}),": Posts, comments, likes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Content delivery"}),": News, articles"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User-generated content"}),": Reviews, ratings"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"User experience priority"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"long-polling-vs-websockets",children:"Long Polling vs WebSockets"}),"\n",(0,i.jsx)(n.h3,{id:"the-real-time-communication-problem",children:"The Real-Time Communication Problem"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Challenge"}),": HTTP is request-response, but we need server-to-client communication."]}),"\n",(0,i.jsx)(n.h3,{id:"long-polling",children:"Long Polling"}),"\n",(0,i.jsx)(n.h4,{id:"what-is-long-polling",children:"What is Long Polling?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Client sends request \u2192 Server holds request open \u2192 Sends response when data available"})}),"\n",(0,i.jsx)(n.h4,{id:"how-long-polling-works",children:"How Long Polling Works?"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"1. Client sends HTTP request\n2. Server holds connection open (30-60 seconds)\n3. When data available: Send response + close connection\n4. Client immediately sends new request\n5. Repeat cycle\n"})}),"\n",(0,i.jsx)(n.h4,{id:"why-long-polling",children:"Why Long Polling?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"HTTP compatible"}),": Works with existing infrastructure"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Simple"}),": Easy to implement and debug"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fallback friendly"}),": Graceful degradation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Firewall friendly"}),": Uses standard HTTP"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"long-polling-limitations",children:"Long Polling Limitations:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resource intensive"}),": One connection per client"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Latency"}),": Still request-response cycle"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Proxy issues"}),": Some proxies timeout connections"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scalability"}),": Thread-per-connection model"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"websockets",children:"WebSockets"}),"\n",(0,i.jsx)(n.h4,{id:"what-are-websockets",children:"What are WebSockets?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Full-duplex communication"})," over single TCP connection - both client and server can send data anytime."]}),"\n",(0,i.jsx)(n.h4,{id:"how-websockets-work",children:"How WebSockets Work?"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"1. HTTP handshake: Upgrade to WebSocket protocol\n2. Persistent connection: TCP connection stays open\n3. Bidirectional: Both sides can send messages\n4. Low overhead: Minimal frame overhead\n5. Close connection: Either side can close\n"})}),"\n",(0,i.jsx)(n.h4,{id:"why-websockets",children:"Why WebSockets?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Real-time"}),": Instant bidirectional communication"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Low latency"}),": No HTTP overhead per message"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Efficient"}),": Single connection, minimal overhead"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Stateful"}),": Connection maintains context"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"websocket-limitations",children:"WebSocket Limitations:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Complexity"}),": More complex than HTTP"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Infrastructure"}),": Proxy/firewall configuration needed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Connection management"}),": Handle disconnections, reconnections"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scaling"}),": Sticky sessions or sophisticated load balancing"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"feature-comparison",children:"Feature Comparison"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Feature"}),(0,i.jsx)(n.th,{children:"Long Polling"}),(0,i.jsx)(n.th,{children:"WebSockets"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Latency"})}),(0,i.jsx)(n.td,{children:"Medium (HTTP overhead)"}),(0,i.jsx)(n.td,{children:"Low (minimal overhead)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Scalability"})}),(0,i.jsx)(n.td,{children:"Limited (connection per client)"}),(0,i.jsx)(n.td,{children:"Better (efficient connections)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Infrastructure"})}),(0,i.jsx)(n.td,{children:"HTTP compatible"}),(0,i.jsx)(n.td,{children:"Requires WebSocket support"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Bidirectional"})}),(0,i.jsx)(n.td,{children:"No (request-response only)"}),(0,i.jsx)(n.td,{children:"Yes (both directions)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Implementation"})}),(0,i.jsx)(n.td,{children:"Simple"}),(0,i.jsx)(n.td,{children:"More complex"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Debugging"})}),(0,i.jsx)(n.td,{children:"Easy (standard HTTP tools)"}),(0,i.jsx)(n.td,{children:"Harder (specialized tools)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Resource Usage"})}),(0,i.jsx)(n.td,{children:"High (server resources)"}),(0,i.jsx)(n.td,{children:"Low (efficient protocol)"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-use-long-polling",children:"When to Use Long Polling?"}),"\n",(0,i.jsx)(n.h4,{id:"use-cases",children:"Use Cases:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Simple notifications"}),": Order status updates"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Infrequent updates"}),": News alerts, system notifications"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Legacy systems"}),": Cannot modify infrastructure"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Simple requirements"}),": Basic real-time features"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"ideal-scenarios",children:"Ideal Scenarios:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Low message frequency"}),": Few messages per minute"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Simple infrastructure"}),": Standard HTTP stack"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Development speed"}),": Quick implementation needed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fallback mechanism"}),": For WebSocket failures"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-use-websockets",children:"When to Use WebSockets?"}),"\n",(0,i.jsx)(n.h4,{id:"use-cases-1",children:"Use Cases:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Real-time collaboration"}),": Google Docs, Figma"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Gaming"}),": Multiplayer games, real-time updates"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Trading platforms"}),": Live price updates"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Chat applications"}),": Instant messaging"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Live streaming"}),": Real-time comments, reactions"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"ideal-scenarios-1",children:"Ideal Scenarios:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"High frequency"}),": Many messages per second"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Bidirectional"}),": Both client and server send data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Low latency"}),": Millisecond response times needed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rich interactions"}),": Complex real-time features"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"implementation-examples",children:"Implementation Examples:"}),"\n",(0,i.jsx)(n.h4,{id:"long-polling-pattern",children:"Long Polling Pattern:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Client-side\nasync function longPoll() {\n  while (true) {\n    try {\n      const response = await fetch('/poll', {\n        timeout: 30000  // 30 second timeout\n      });\n      const data = await response.json();\n      handleUpdate(data);\n    } catch (error) {\n      await sleep(5000);  // Wait before retrying\n    }\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"websocket-pattern",children:"WebSocket Pattern:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Client-side\nconst ws = new WebSocket('ws://localhost:8080');\n\nws.onmessage = (event) => {\n  const data = JSON.parse(event.data);\n  handleUpdate(data);\n};\n\nws.send(JSON.stringify({ type: 'subscribe', channel: 'updates' }));\n"})}),"\n",(0,i.jsx)(n.h3,{id:"hybrid-approaches",children:"Hybrid Approaches:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Start with Long Polling"}),": Upgrade to WebSockets when needed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Graceful degradation"}),": WebSockets with Long Polling fallback"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Server-Sent Events (SSE)"}),": Server-to-client only, simpler than WebSockets"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"decision-matrix-when-to-use-what",children:"Decision Matrix: When to Use What"}),"\n",(0,i.jsx)(n.h3,{id:"application-scale-classifications",children:"Application Scale Classifications"}),"\n",(0,i.jsx)(n.h4,{id:"small-scale--10k-users",children:"Small Scale (< 10K users)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Simple architecture"}),": Monolith preferred"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Single database"}),": Vertical scaling sufficient"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Basic infrastructure"}),": Standard hosting"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Quick development"}),": Time to market priority"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"medium-scale-10k---100k-users",children:"Medium Scale (10K - 100K users)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Modular monolith"}),": Some service separation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database optimization"}),": Indexes, caching"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Load balancing"}),": Multiple app servers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance monitoring"}),": Identify bottlenecks"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"large-scale-100k---1m-users",children:"Large Scale (100K - 1M users)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Microservices"}),": Domain-driven separation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database scaling"}),": Read replicas, caching layers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Distributed systems"}),": Multiple data centers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Advanced monitoring"}),": APM, distributed tracing"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"massive-scale-1m-users",children:"Massive Scale (1M+ users)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Global distribution"}),": Multiple regions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sharding"}),": Horizontal database partitioning"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Advanced caching"}),": Multi-layer cache hierarchy"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Specialized systems"}),": Search engines, message queues"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"decision-framework-by-application-type",children:"Decision Framework by Application Type"}),"\n",(0,i.jsx)(n.h4,{id:"e-commerce-platform",children:"E-commerce Platform"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Small Scale"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Architecture"}),": Monolithic application"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database"}),": Single PostgreSQL with indexes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Caching"}),": Application-level caching (Redis)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CDN"}),": Basic CDN for images"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Real-time"}),": Long polling for order updates"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Medium Scale"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Architecture"}),": Modular services (User, Order, Payment, Inventory)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database"}),": Master-slave PostgreSQL + Redis"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Load Balancer"}),": nginx with multiple app servers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Caching"}),": Multi-layer (Redis + Application cache)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CDN"}),": Global CDN with API caching"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Large Scale"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Architecture"}),": Full microservices with API Gateway"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database"}),": Sharded databases + Read replicas"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scaling"}),": Horizontal scaling with container orchestration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Caching"}),": Distributed caching with consistent hashing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Real-time"}),": WebSockets for live inventory updates"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"social-media-platform",children:"Social Media Platform"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Small Scale"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Architecture"}),": Monolithic with separate media service"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database"}),": Single database with heavy indexing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Caching"}),": User session and feed caching"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Storage"}),": Cloud storage for media"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Real-time"}),": Long polling for notifications"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Medium Scale"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Architecture"}),": Service separation (User, Post, Media, Notification)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database"}),": Master-slave with dedicated read replicas for feeds"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Caching"}),": Feed caching + Content caching"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CDN"}),": Global CDN for media delivery"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Search"}),": Elasticsearch for content search"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Large Scale"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Architecture"}),": Event-driven microservices"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database"}),": Multiple specialized databases (Graph for social, Time-series for analytics)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scaling"}),": Auto-scaling with message queues"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Caching"}),": Multi-layer with edge caching"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Real-time"}),": WebSockets for live features"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistency"}),": AP system (eventual consistency)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"financial-trading-platform",children:"Financial Trading Platform"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Any Scale"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistency"}),": CP system (strong consistency required)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database"}),": ACID-compliant database with immediate consistency"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Caching"}),": Limited caching (data freshness critical)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Real-time"}),": WebSockets with ultra-low latency"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Architecture"}),": Highly optimized, minimal network hops"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monitoring"}),": Real-time monitoring with strict SLAs"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"gaming-platform",children:"Gaming Platform"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Small Scale"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Architecture"}),": Game servers + matchmaking service"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database"}),": In-memory state + persistent storage for player data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Real-time"}),": WebSockets for game state"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Caching"}),": Player profile caching"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Large Scale"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Architecture"}),": Distributed game servers with load balancing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database"}),": Sharded player data + leaderboard systems"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scaling"}),": Auto-scaling based on player count"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CDN"}),": Global CDN for game assets"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Real-time"}),": Optimized WebSocket connections with connection pooling"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"technology-selection-guide",children:"Technology Selection Guide"}),"\n",(0,i.jsx)(n.h4,{id:"when-to-choose-each-database-pattern",children:"When to Choose Each Database Pattern:"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Single Database"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"User count: < 10K"}),"\n",(0,i.jsx)(n.li,{children:"Data size: < 100GB"}),"\n",(0,i.jsx)(n.li,{children:"Query complexity: Complex joins needed"}),"\n",(0,i.jsx)(n.li,{children:"Consistency: Strong ACID requirements"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Master-Slave Replication"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Read/Write ratio: 80/20 or higher"}),"\n",(0,i.jsx)(n.li,{children:"User count: 10K - 100K"}),"\n",(0,i.jsx)(n.li,{children:"Geographic distribution: Multiple regions"}),"\n",(0,i.jsx)(n.li,{children:"Availability: High availability needed"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Horizontal Sharding"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"User count: 100K+"}),"\n",(0,i.jsx)(n.li,{children:"Data size: 1TB+"}),"\n",(0,i.jsx)(n.li,{children:"Write-heavy: High write throughput"}),"\n",(0,i.jsx)(n.li,{children:"Growth: Rapid scaling needed"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"when-to-choose-each-caching-strategy",children:"When to Choose Each Caching Strategy:"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Application Cache Only"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Small scale: < 10K users"}),"\n",(0,i.jsx)(n.li,{children:"Simple data: User sessions, configurations"}),"\n",(0,i.jsx)(n.li,{children:"Budget: Minimal infrastructure cost"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Redis/Memcached"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Medium scale: 10K - 100K users"}),"\n",(0,i.jsx)(n.li,{children:"Structured caching: Complex data structures"}),"\n",(0,i.jsx)(n.li,{children:"Persistence: Optional data persistence"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Multi-layer Caching"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Large scale: 100K+ users"}),"\n",(0,i.jsx)(n.li,{children:"Global: Multiple data centers"}),"\n",(0,i.jsx)(n.li,{children:"Performance: Sub-millisecond requirements"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"when-to-choose-each-real-time-solution",children:"When to Choose Each Real-time Solution:"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"No Real-time"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Batch processing: Reporting, analytics"}),"\n",(0,i.jsx)(n.li,{children:"Simple apps: Basic CRUD operations"}),"\n",(0,i.jsx)(n.li,{children:"Cost-sensitive: Minimal infrastructure"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Long Polling"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Low frequency: < 1 message/minute per user"}),"\n",(0,i.jsx)(n.li,{children:"Simple infrastructure: Standard HTTP stack"}),"\n",(0,i.jsx)(n.li,{children:"Legacy systems: Cannot modify existing infrastructure"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"WebSockets"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"High frequency: > 1 message/second per user"}),"\n",(0,i.jsx)(n.li,{children:"Bidirectional: Client and server both send"}),"\n",(0,i.jsx)(n.li,{children:"Low latency: Real-time collaboration needed"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"common-anti-patterns-to-avoid",children:"Common Anti-patterns to Avoid"}),"\n",(0,i.jsx)(n.h4,{id:"premature-optimization",children:"Premature Optimization"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Don't"}),": Start with microservices for small applications"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Do"}),": Begin with monolith, extract services when needed"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"over-engineering",children:"Over-engineering"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Don't"}),": Implement every pattern from day one"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Do"}),": Add complexity as scale demands"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"wrong-consistency-model",children:"Wrong Consistency Model"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Don't"}),": Use eventual consistency for financial data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Do"}),": Match consistency requirements to business needs"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"cache-everything",children:"Cache Everything"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Don't"}),": Cache data that changes frequently"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Do"}),": Cache based on access patterns and staleness tolerance"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"migration-paths",children:"Migration Paths"}),"\n",(0,i.jsx)(n.h4,{id:"monolith--microservices",children:"Monolith \u2192 Microservices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Identify bounded contexts"}),": Domain-driven design"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Extract services gradually"}),": Strangler fig pattern"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data migration"}),": Separate databases last"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"API Gateway"}),": Add centralized routing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monitoring"}),": Distributed tracing and logging"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"single-database--distributed",children:"Single Database \u2192 Distributed"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Add read replicas"}),": Scale read operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Implement caching"}),": Reduce database load"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Vertical scaling"}),": Upgrade hardware first"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Horizontal sharding"}),": Last resort for write scaling"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"synchronous--event-driven",children:"Synchronous \u2192 Event-driven"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Identify async operations"}),": Background processing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Add message queues"}),": Decouple services"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Implement event sourcing"}),": Audit trails and replay"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Handle eventual consistency"}),": Update application logic"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This decision matrix should guide your architecture choices based on current scale and growth projections. Remember: ",(0,i.jsx)(n.strong,{children:"start simple, scale as needed, and always measure before optimizing"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var i=s(6540);const l={},r=i.createContext(l);function t(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);