"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[35754],{28453:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>t});var a=o(96540);const r={},c=a.createContext(r);function l(e){const n=a.useContext(c);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),a.createElement(c.Provider,{value:n},e.children)}},58237:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>i});var a=o(74848),r=o(28453);const c={title:"Canceling an API Call"},l=void 0,t={id:"WebDev/JavaScript/HowToCancelAPICalls",title:"Canceling an API Call",description:"In JavaScript, you can cancel API calls made with fetch and axios using AbortController for fetch and CancelToken (or AbortController in modern versions) for axios.",source:"@site/docs/WebDev/JavaScript/HowToCancelAPICalls.mdx",sourceDirName:"WebDev/JavaScript",slug:"/WebDev/JavaScript/HowToCancelAPICalls",permalink:"/docs/WebDev/JavaScript/HowToCancelAPICalls",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/WebDev/JavaScript/HowToCancelAPICalls.mdx",tags:[],version:"current",frontMatter:{title:"Canceling an API Call"},sidebar:"tutorialSidebar",previous:{title:"Understanding JavaScript Hoisting",permalink:"/docs/WebDev/JavaScript/Hoisting"},next:{title:"JavaScript Execution in Browser",permalink:"/docs/WebDev/JavaScript/JSExecution"}},s={},i=[{value:"Canceling an API call using fetch and AbortController",id:"canceling-an-api-call-using-fetch-and-abortcontroller",level:3},{value:"Canceling an API call using axios and CancelToken",id:"canceling-an-api-call-using-axios-and-canceltoken",level:3},{value:"Canceling an API call using axios and AbortController",id:"canceling-an-api-call-using-axios-and-abortcontroller",level:3}];function d(e){const n={code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["In JavaScript, you can cancel API calls made with ",(0,a.jsx)(n.code,{children:"fetch"})," and ",(0,a.jsx)(n.code,{children:"axios"})," using ",(0,a.jsx)(n.code,{children:"AbortController"})," for fetch and ",(0,a.jsx)(n.code,{children:"CancelToken"})," (or ",(0,a.jsx)(n.code,{children:"AbortController"})," in modern versions) for ",(0,a.jsx)(n.code,{children:"axios"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"canceling-an-api-call-using-fetch-and-abortcontroller",children:"Canceling an API call using fetch and AbortController"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"AbortController"})," allows you to cancel one or more ",(0,a.jsx)(n.code,{children:"fetch"})," requests. Here's how you can implement it:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-JavaScript",children:"const controller = new AbortController();\nconst signal = controller.signal;\n\nfetch('https://api.example.com/data', { signal })\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(err => {\n    if (err.name === 'AbortError') {\n      console.log('Fetch aborted');\n    } else {\n      console.error('Fetch error:', err);\n    }\n  });\n\n// Cancel the fetch request\ncontroller.abort();\n"})}),"\n",(0,a.jsx)(n.h3,{id:"canceling-an-api-call-using-axios-and-canceltoken",children:"Canceling an API call using axios and CancelToken"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-JavaScript",children:"const CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\naxios.get('https://api.example.com/data', {\n  cancelToken: source.token\n})\n  .then(response => console.log(response.data))\n  .catch(err => {\n    if (axios.isCancel(err)) {\n      console.log('Request canceled', err.message);\n    } else {\n      console.error('Axios error:', err);\n    }\n  });\n\n// Cancel the request\nsource.cancel('Operation canceled by the user.');\n"})}),"\n",(0,a.jsx)(n.h3,{id:"canceling-an-api-call-using-axios-and-abortcontroller",children:"Canceling an API call using axios and AbortController"}),"\n",(0,a.jsxs)(n.p,{children:["In modern Axios versions, you can use ",(0,a.jsx)(n.code,{children:"AbortController"})," just like with ",(0,a.jsx)(n.code,{children:"fetch"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-JavaScript",children:"const controller = new AbortController();\n\naxios.get('https://api.example.com/data', { signal: controller.signal })\n  .then(response => console.log(response.data))\n  .catch(err => {\n    if (err.name === 'AbortError') {\n      console.log('Axios request aborted');\n    } else {\n      console.error('Axios error:', err);\n    }\n  });\n\n// Cancel the request\ncontroller.abort();\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);