"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[1934],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var i=s(96540);const l={},r=i.createContext(l);function t(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),i.createElement(r.Provider,{value:n},e.children)}},57742:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var i=s(74848),l=s(28453);const r={},t="System Design Refresher",c={id:"Backend System Design/System Design Refresher",title:"System Design Refresher",description:"Table of Contents",source:"@site/docs/Backend System Design/System Design Refresher.mdx",sourceDirName:"Backend System Design",slug:"/Backend System Design/System Design Refresher",permalink:"/dev.enigma/docs/Backend System Design/System Design Refresher",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/Backend System Design/System Design Refresher.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"System Design Concepts",permalink:"/dev.enigma/docs/Backend System Design/System Design Concepts"},next:{title:"System Design Tools: Monitoring, Security & Testing",permalink:"/dev.enigma/docs/Backend System Design/System Design Tools: Monitoring, Security & Testing"}},d={},a=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"1. Networking &amp; Communication",id:"1-networking--communication",level:3},{value:"2. Storage &amp; Databases",id:"2-storage--databases",level:3},{value:"3. Scalability &amp; Reliability",id:"3-scalability--reliability",level:3},{value:"4. System Design Patterns",id:"4-system-design-patterns",level:3},{value:"5. Advanced Caching",id:"5-advanced-caching",level:3},{value:"6. Observability",id:"6-observability",level:3},{value:"7. Security &amp; Privacy",id:"7-security--privacy",level:3},{value:"8. Infrastructure &amp; Deployment",id:"8-infrastructure--deployment",level:3},{value:"9. Special Topics",id:"9-special-topics",level:3},{value:"10. Additional Important Topics",id:"10-additional-important-topics",level:3},{value:"Interview Preparation",id:"interview-preparation",level:3},{value:"Quick Reference",id:"quick-reference",level:3},{value:"1. Networking &amp; Communication",id:"1-networking--communication-1",level:2},{value:"IP Addressing",id:"ip-addressing",level:3},{value:"DNS (Domain Name System)",id:"dns-domain-name-system",level:3},{value:"Load Balancers",id:"load-balancers",level:3},{value:"L4 (Layer 4 - Transport Layer)",id:"l4-layer-4---transport-layer",level:4},{value:"L7 (Layer 7 - Application Layer)",id:"l7-layer-7---application-layer",level:4},{value:"Proxy",id:"proxy",level:3},{value:"Forward Proxy",id:"forward-proxy",level:4},{value:"Reverse Proxy",id:"reverse-proxy",level:4},{value:"TCP vs UDP",id:"tcp-vs-udp",level:3},{value:"HTTP/HTTPS Basics",id:"httphttps-basics",level:3},{value:"HTTP Methods",id:"http-methods",level:4},{value:"Important Headers",id:"important-headers",level:4},{value:"HTTP Status Codes",id:"http-status-codes",level:4},{value:"REST vs GraphQL vs gRPC",id:"rest-vs-graphql-vs-grpc",level:4},{value:"Real-Time Communication",id:"real-time-communication",level:3},{value:"WebSockets",id:"websockets",level:4},{value:"Long Polling",id:"long-polling",level:4},{value:"Server-Sent Events (SSE)",id:"server-sent-events-sse",level:4},{value:"CDN (Content Delivery Network)",id:"cdn-content-delivery-network",level:3},{value:"2. Storage &amp; Databases",id:"2-storage--databases-1",level:2},{value:"Relational Databases (SQL)",id:"relational-databases-sql",level:3},{value:"ACID Properties",id:"acid-properties",level:4},{value:"Isolation Levels",id:"isolation-levels",level:4},{value:"Normalization",id:"normalization",level:4},{value:"Database Replication Patterns",id:"database-replication-patterns",level:3},{value:"Master-Slave (Primary-Replica)",id:"master-slave-primary-replica",level:4},{value:"Master-Master (Multi-Master)",id:"master-master-multi-master",level:4},{value:"NoSQL Databases",id:"nosql-databases",level:3},{value:"Key-Value Stores",id:"key-value-stores",level:4},{value:"Document Databases",id:"document-databases",level:4},{value:"Wide-Column Stores",id:"wide-column-stores",level:4},{value:"Graph Databases",id:"graph-databases",level:4},{value:"Database Indexes",id:"database-indexes",level:3},{value:"B-Tree Indexes",id:"b-tree-indexes",level:4},{value:"Hash Indexes",id:"hash-indexes",level:4},{value:"Inverted Indexes",id:"inverted-indexes",level:4},{value:"Geospatial Indexes",id:"geospatial-indexes",level:4},{value:"Replication &amp; Sharding",id:"replication--sharding",level:3},{value:"Horizontal Scaling (Sharding)",id:"horizontal-scaling-sharding",level:4},{value:"Vertical Scaling",id:"vertical-scaling",level:4},{value:"CAP Theorem",id:"cap-theorem",level:3},{value:"Query Optimization",id:"query-optimization",level:3},{value:"Techniques",id:"techniques",level:4},{value:"Common Issues",id:"common-issues",level:4},{value:"CDC (Change Data Capture)",id:"cdc-change-data-capture",level:3},{value:"Full-Text Search",id:"full-text-search",level:3},{value:"Caching Strategies",id:"caching-strategies",level:3},{value:"Cache Levels",id:"cache-levels",level:4},{value:"Cache Patterns",id:"cache-patterns",level:4},{value:"Cache Eviction Policies",id:"cache-eviction-policies",level:4},{value:"Cache Stampede (Thundering Herd)",id:"cache-stampede-thundering-herd",level:4},{value:"3. Scalability &amp; Reliability",id:"3-scalability--reliability-1",level:2},{value:"Load Balancing Algorithms",id:"load-balancing-algorithms",level:3},{value:"Round Robin",id:"round-robin",level:4},{value:"Least Connections",id:"least-connections",level:4},{value:"Consistent Hashing",id:"consistent-hashing",level:4},{value:"IP Hash",id:"ip-hash",level:4},{value:"Least Response Time",id:"least-response-time",level:4},{value:"Rate Limiting &amp; Throttling",id:"rate-limiting--throttling",level:3},{value:"Why Rate Limit?",id:"why-rate-limit",level:4},{value:"Algorithms",id:"algorithms",level:4},{value:"Implementation",id:"implementation",level:4},{value:"Message Queues &amp; Streams",id:"message-queues--streams",level:3},{value:"Use Cases",id:"use-cases",level:4},{value:"Kafka",id:"kafka",level:4},{value:"RabbitMQ",id:"rabbitmq",level:4},{value:"AWS SQS",id:"aws-sqs",level:4},{value:"Backpressure",id:"backpressure",level:4},{value:"Consumer Groups",id:"consumer-groups",level:4},{value:"Leader Election",id:"leader-election",level:3},{value:"Why?",id:"why",level:4},{value:"Algorithms",id:"algorithms-1",level:4},{value:"Failover &amp; Redundancy",id:"failover--redundancy",level:3},{value:"Active-Passive (Master-Standby)",id:"active-passive-master-standby",level:4},{value:"Active-Active (Multi-Master)",id:"active-active-multi-master",level:4},{value:"Health Checks",id:"health-checks",level:4},{value:"4. System Design Patterns",id:"4-system-design-patterns-1",level:2},{value:"Read vs Write-Heavy Systems",id:"read-vs-write-heavy-systems",level:3},{value:"Read-Heavy Optimization",id:"read-heavy-optimization",level:4},{value:"Write-Heavy Optimization",id:"write-heavy-optimization",level:4},{value:"CQRS (Command Query Responsibility Segregation)",id:"cqrs-command-query-responsibility-segregation",level:3},{value:"Concept",id:"concept",level:4},{value:"Write Side (Command)",id:"write-side-command",level:4},{value:"Read Side (Query)",id:"read-side-query",level:4},{value:"Benefits",id:"benefits",level:4},{value:"Drawbacks",id:"drawbacks",level:4},{value:"Use Cases",id:"use-cases-1",level:4},{value:"Event Sourcing",id:"event-sourcing",level:3},{value:"Concept",id:"concept-1",level:4},{value:"Example",id:"example",level:4},{value:"Benefits",id:"benefits-1",level:4},{value:"Drawbacks",id:"drawbacks-1",level:4},{value:"Combined with CQRS",id:"combined-with-cqrs",level:4},{value:"Caching Patterns (Revisited)",id:"caching-patterns-revisited",level:3},{value:"Write-Through Caching",id:"write-through-caching",level:4},{value:"Write-Back (Write-Behind) Caching",id:"write-back-write-behind-caching",level:4},{value:"Write-Around Caching",id:"write-around-caching",level:4},{value:"Idempotency &amp; Retries",id:"idempotency--retries",level:3},{value:"Idempotency",id:"idempotency",level:4},{value:"Why Important?",id:"why-important",level:4},{value:"Implementation",id:"implementation-1",level:4},{value:"Retry Strategies",id:"retry-strategies",level:4},{value:"Consistency Models",id:"consistency-models",level:3},{value:"Strong Consistency (Linearizability)",id:"strong-consistency-linearizability",level:4},{value:"Eventual Consistency",id:"eventual-consistency",level:4},{value:"Causal Consistency",id:"causal-consistency",level:4},{value:"Read-Your-Writes Consistency",id:"read-your-writes-consistency",level:4},{value:"Monotonic Reads",id:"monotonic-reads",level:4},{value:"5. Advanced Caching",id:"5-advanced-caching-1",level:2},{value:"CDN Deep Dive",id:"cdn-deep-dive",level:3},{value:"Edge Computing",id:"edge-computing",level:3},{value:"Redis Advanced Patterns",id:"redis-advanced-patterns",level:3},{value:"Redis as Message Broker",id:"redis-as-message-broker",level:4},{value:"Redis as Database",id:"redis-as-database",level:4},{value:"Redis Data Structures",id:"redis-data-structures",level:4},{value:"Application-Level Caching",id:"application-level-caching",level:3},{value:"In-Memory Caching",id:"in-memory-caching",level:4},{value:"Distributed Caching",id:"distributed-caching",level:4},{value:"Multi-Level Caching",id:"multi-level-caching",level:4},{value:"Cache Invalidation Strategies",id:"cache-invalidation-strategies",level:3},{value:"Time-based (TTL)",id:"time-based-ttl",level:4},{value:"Event-based",id:"event-based",level:4},{value:"Write-through/Write-behind",id:"write-throughwrite-behind",level:4},{value:"6. Observability",id:"6-observability-1",level:2},{value:"Backoff, Jitter, and Retry Strategies",id:"backoff-jitter-and-retry-strategies",level:3},{value:"Exponential Backoff",id:"exponential-backoff",level:4},{value:"Jitter",id:"jitter",level:4},{value:"Circuit Breaker Pattern",id:"circuit-breaker-pattern",level:4},{value:"Logging Best Practices",id:"logging-best-practices",level:3},{value:"Structured Logging",id:"structured-logging",level:4},{value:"Log Levels",id:"log-levels",level:4},{value:"Correlation IDs",id:"correlation-ids",level:4},{value:"What NOT to Log",id:"what-not-to-log",level:4},{value:"Monitoring &amp; Metrics",id:"monitoring--metrics",level:3},{value:"Key Metrics (RED Method)",id:"key-metrics-red-method",level:4},{value:"USE Method (for Resources)",id:"use-method-for-resources",level:4},{value:"Golden Signals (Google SRE)",id:"golden-signals-google-sre",level:4},{value:"Metric Types",id:"metric-types",level:4},{value:"Prometheus &amp; Grafana",id:"prometheus--grafana",level:4},{value:"Alerting Best Practices",id:"alerting-best-practices",level:3},{value:"Alert Fatigue Prevention",id:"alert-fatigue-prevention",level:4},{value:"On-Call Considerations",id:"on-call-considerations",level:4},{value:"Distributed Tracing",id:"distributed-tracing",level:3},{value:"Concept",id:"concept-2",level:4},{value:"Implementation",id:"implementation-2",level:4},{value:"Tools",id:"tools",level:4},{value:"Example Trace",id:"example-trace",level:4},{value:"SLO, SLI, SLA",id:"slo-sli-sla",level:3},{value:"SLI (Service Level Indicator)",id:"sli-service-level-indicator",level:4},{value:"SLO (Service Level Objective)",id:"slo-service-level-objective",level:4},{value:"SLA (Service Level Agreement)",id:"sla-service-level-agreement",level:4},{value:"Error Budgets",id:"error-budgets",level:4},{value:"7. Security &amp; Privacy",id:"7-security--privacy-1",level:2},{value:"Authentication vs Authorization",id:"authentication-vs-authorization",level:3},{value:"Authentication",id:"authentication",level:4},{value:"Authorization",id:"authorization",level:4},{value:"Authentication Mechanisms",id:"authentication-mechanisms",level:3},{value:"JWT (JSON Web Tokens)",id:"jwt-json-web-tokens",level:4},{value:"OAuth 2.0",id:"oauth-20",level:4},{value:"SSO (Single Sign-On)",id:"sso-single-sign-on",level:4},{value:"Session-Based Authentication",id:"session-based-authentication",level:4},{value:"Encryption",id:"encryption",level:3},{value:"TLS/HTTPS",id:"tlshttps",level:4},{value:"Data at Rest",id:"data-at-rest",level:4},{value:"Hashing vs Encryption",id:"hashing-vs-encryption",level:4},{value:"DDoS Protection &amp; WAF",id:"ddos-protection--waf",level:3},{value:"DDoS (Distributed Denial of Service)",id:"ddos-distributed-denial-of-service",level:4},{value:"WAF (Web Application Firewall)",id:"waf-web-application-firewall",level:4},{value:"Data Privacy (GDPR Basics)",id:"data-privacy-gdpr-basics",level:3},{value:"Key Principles",id:"key-principles",level:4},{value:"User Rights",id:"user-rights",level:4},{value:"Implementation Considerations",id:"implementation-considerations",level:4},{value:"8. Infrastructure &amp; Deployment",id:"8-infrastructure--deployment-1",level:2},{value:"Containers &amp; Orchestration",id:"containers--orchestration",level:3},{value:"Docker",id:"docker",level:4},{value:"Kubernetes (K8s)",id:"kubernetes-k8s",level:4},{value:"CI/CD Pipelines",id:"cicd-pipelines",level:3},{value:"Continuous Integration (CI)",id:"continuous-integration-ci",level:4},{value:"Continuous Deployment (CD)",id:"continuous-deployment-cd",level:4},{value:"Deployment Strategies",id:"deployment-strategies",level:4},{value:"Service Discovery",id:"service-discovery",level:3},{value:"Problem",id:"problem",level:4},{value:"Client-Side Discovery",id:"client-side-discovery",level:4},{value:"Server-Side Discovery",id:"server-side-discovery",level:4},{value:"Service Registry",id:"service-registry",level:4},{value:"Kubernetes Service Discovery",id:"kubernetes-service-discovery",level:4},{value:"API Gateway",id:"api-gateway",level:3},{value:"Purpose",id:"purpose",level:4},{value:"Responsibilities",id:"responsibilities",level:4},{value:"Patterns",id:"patterns",level:4},{value:"Examples",id:"examples",level:4},{value:"Microservices vs Monoliths",id:"microservices-vs-monoliths",level:3},{value:"Monolith",id:"monolith",level:4},{value:"Microservices",id:"microservices",level:4},{value:"When to Use",id:"when-to-use",level:4},{value:"Migration Strategy",id:"migration-strategy",level:4},{value:"9. Special Topics",id:"9-special-topics-1",level:2},{value:"Search Systems",id:"search-systems",level:3},{value:"Inverted Index (Deep Dive)",id:"inverted-index-deep-dive",level:4},{value:"Ranking Algorithms",id:"ranking-algorithms",level:4},{value:"Elasticsearch Architecture",id:"elasticsearch-architecture",level:4},{value:"Bloom Filters",id:"bloom-filters",level:3},{value:"Problem",id:"problem-1",level:4},{value:"Bloom Filter",id:"bloom-filter",level:4},{value:"Use Cases",id:"use-cases-2",level:4},{value:"Trade-off",id:"trade-off",level:4},{value:"Recommendation Systems",id:"recommendation-systems",level:3},{value:"Collaborative Filtering",id:"collaborative-filtering",level:4},{value:"Content-Based Filtering",id:"content-based-filtering",level:4},{value:"Hybrid Approaches",id:"hybrid-approaches",level:4},{value:"Ranking",id:"ranking",level:4},{value:"Distributed Transactions",id:"distributed-transactions",level:3},{value:"Problem",id:"problem-2",level:4},{value:"Two-Phase Commit (2PC)",id:"two-phase-commit-2pc",level:4},{value:"Saga Pattern",id:"saga-pattern",level:4},{value:"When to Use",id:"when-to-use-1",level:4},{value:"Consensus Algorithms",id:"consensus-algorithms",level:3},{value:"Why Needed?",id:"why-needed",level:4},{value:"Raft (Understandable Consensus)",id:"raft-understandable-consensus",level:4},{value:"Paxos",id:"paxos",level:4},{value:"Practical Usage",id:"practical-usage",level:4},{value:"Time &amp; Ordering in Distributed Systems",id:"time--ordering-in-distributed-systems",level:3},{value:"Problem",id:"problem-3",level:4},{value:"Lamport Clocks (Logical Time)",id:"lamport-clocks-logical-time",level:4},{value:"Vector Clocks",id:"vector-clocks",level:4},{value:"Use Cases",id:"use-cases-3",level:4},{value:"True Time (Google Spanner)",id:"true-time-google-spanner",level:4},{value:"10. Additional Important Topics",id:"10-additional-important-topics-1",level:2},{value:"Back-of-the-Envelope Calculations",id:"back-of-the-envelope-calculations",level:3},{value:"Common Numbers (Latency)",id:"common-numbers-latency",level:4},{value:"Storage Capacity",id:"storage-capacity",level:4},{value:"Traffic Estimates",id:"traffic-estimates",level:4},{value:"Storage Estimates",id:"storage-estimates",level:4},{value:"Polling vs Push vs Long Polling",id:"polling-vs-push-vs-long-polling",level:3},{value:"Polling",id:"polling",level:4},{value:"Push (WebSockets, SSE)",id:"push-websockets-sse",level:4},{value:"Long Polling",id:"long-polling-1",level:4},{value:"Database Connection Pooling",id:"database-connection-pooling",level:3},{value:"Partitioning vs Sharding",id:"partitioning-vs-sharding",level:3},{value:"Webhooks",id:"webhooks",level:3},{value:"Reverse Hash Lookup (Distributed Hash Table)",id:"reverse-hash-lookup-distributed-hash-table",level:3},{value:"Interview Preparation Tips",id:"interview-preparation-tips",level:2},{value:"How to Approach System Design Interviews",id:"how-to-approach-system-design-interviews",level:3},{value:"1. Clarify Requirements (5 min)",id:"1-clarify-requirements-5-min",level:4},{value:"2. Back-of-Envelope Estimates (5 min)",id:"2-back-of-envelope-estimates-5-min",level:4},{value:"3. High-Level Design (10-15 min)",id:"3-high-level-design-10-15-min",level:4},{value:"4. Deep Dive (15-20 min)",id:"4-deep-dive-15-20-min",level:4},{value:"5. Wrap Up (5 min)",id:"5-wrap-up-5-min",level:4},{value:"Common Mistakes to Avoid",id:"common-mistakes-to-avoid",level:3},{value:"Key Trade-offs to Discuss",id:"key-trade-offs-to-discuss",level:3},{value:"Practice Questions",id:"practice-questions",level:3},{value:"Quick Reference",id:"quick-reference-1",level:2},{value:"When to Use SQL vs NoSQL",id:"when-to-use-sql-vs-nosql",level:3},{value:"Caching Decision Tree",id:"caching-decision-tree",level:3},{value:"Database Replication Strategy",id:"database-replication-strategy",level:3},{value:"Message Queue vs Database",id:"message-queue-vs-database",level:3}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"system-design-refresher",children:"System Design Refresher"})}),"\n",(0,i.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,i.jsx)(n.h3,{id:"1-networking--communication",children:"1. Networking & Communication"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#ip-addressing",children:"IP Addressing"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#dns-domain-name-system",children:"DNS (Domain Name System)"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#load-balancers",children:"Load Balancers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L4 vs L7"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#proxy",children:"Proxy"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Forward Proxy"}),"\n",(0,i.jsx)(n.li,{children:"Reverse Proxy"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#tcp-vs-udp",children:"TCP vs UDP"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#httphttps-basics",children:"HTTP/HTTPS Basics"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"HTTP Methods"}),"\n",(0,i.jsx)(n.li,{children:"Important Headers"}),"\n",(0,i.jsx)(n.li,{children:"HTTP Status Codes"}),"\n",(0,i.jsx)(n.li,{children:"REST vs GraphQL vs gRPC"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#real-time-communication",children:"Real-Time Communication"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"WebSockets"}),"\n",(0,i.jsx)(n.li,{children:"Long Polling"}),"\n",(0,i.jsx)(n.li,{children:"Server-Sent Events (SSE)"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#cdn-content-delivery-network",children:"CDN (Content Delivery Network)"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-storage--databases",children:"2. Storage & Databases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#relational-databases-sql",children:"Relational Databases (SQL)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ACID Properties"}),"\n",(0,i.jsx)(n.li,{children:"Isolation Levels"}),"\n",(0,i.jsx)(n.li,{children:"Normalization"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#database-replication-patterns",children:"Database Replication Patterns"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Master-Slave (Primary-Replica)"}),"\n",(0,i.jsx)(n.li,{children:"Master-Master (Multi-Master)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#nosql-databases",children:"NoSQL Databases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Key-Value Stores"}),"\n",(0,i.jsx)(n.li,{children:"Document Databases"}),"\n",(0,i.jsx)(n.li,{children:"Wide-Column Stores"}),"\n",(0,i.jsx)(n.li,{children:"Graph Databases"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#database-indexes",children:"Database Indexes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"B-Tree Indexes"}),"\n",(0,i.jsx)(n.li,{children:"Hash Indexes"}),"\n",(0,i.jsx)(n.li,{children:"Inverted Indexes"}),"\n",(0,i.jsx)(n.li,{children:"Geospatial Indexes"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#replication--sharding",children:"Replication & Sharding"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Horizontal Scaling (Sharding)"}),"\n",(0,i.jsx)(n.li,{children:"Vertical Scaling"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#cap-theorem",children:"CAP Theorem"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#query-optimization",children:"Query Optimization"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#cdc-change-data-capture",children:"CDC (Change Data Capture)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#full-text-search",children:"Full-Text Search"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#caching-strategies",children:"Caching Strategies"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cache Levels"}),"\n",(0,i.jsx)(n.li,{children:"Cache Patterns"}),"\n",(0,i.jsx)(n.li,{children:"Cache Eviction Policies"}),"\n",(0,i.jsx)(n.li,{children:"Cache Stampede"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-scalability--reliability",children:"3. Scalability & Reliability"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#load-balancing-algorithms",children:"Load Balancing Algorithms"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Round Robin"}),"\n",(0,i.jsx)(n.li,{children:"Least Connections"}),"\n",(0,i.jsx)(n.li,{children:"Consistent Hashing"}),"\n",(0,i.jsx)(n.li,{children:"IP Hash"}),"\n",(0,i.jsx)(n.li,{children:"Least Response Time"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#rate-limiting--throttling",children:"Rate Limiting & Throttling"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Algorithms (Token Bucket, Leaky Bucket, etc.)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#message-queues--streams",children:"Message Queues & Streams"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Kafka"}),"\n",(0,i.jsx)(n.li,{children:"RabbitMQ"}),"\n",(0,i.jsx)(n.li,{children:"AWS SQS"}),"\n",(0,i.jsx)(n.li,{children:"Backpressure"}),"\n",(0,i.jsx)(n.li,{children:"Consumer Groups"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#leader-election",children:"Leader Election"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Raft"}),"\n",(0,i.jsx)(n.li,{children:"Paxos"}),"\n",(0,i.jsx)(n.li,{children:"ZooKeeper"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#failover--redundancy",children:"Failover & Redundancy"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Active-Passive"}),"\n",(0,i.jsx)(n.li,{children:"Active-Active"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"4-system-design-patterns",children:"4. System Design Patterns"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#read-vs-write-heavy-systems",children:"Read vs Write-Heavy Systems"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#cqrs-command-query-responsibility-segregation",children:"CQRS (Command Query Responsibility Segregation)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#event-sourcing",children:"Event Sourcing"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#caching-patterns-revisited",children:"Caching Patterns (Revisited)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Write-Through"}),"\n",(0,i.jsx)(n.li,{children:"Write-Back"}),"\n",(0,i.jsx)(n.li,{children:"Write-Around"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#idempotency--retries",children:"Idempotency & Retries"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#consistency-models",children:"Consistency Models"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Strong Consistency"}),"\n",(0,i.jsx)(n.li,{children:"Eventual Consistency"}),"\n",(0,i.jsx)(n.li,{children:"Causal Consistency"}),"\n",(0,i.jsx)(n.li,{children:"Read-Your-Writes Consistency"}),"\n",(0,i.jsx)(n.li,{children:"Monotonic Reads"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"5-advanced-caching",children:"5. Advanced Caching"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#cdn-deep-dive",children:"CDN Deep Dive"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Push CDN"}),"\n",(0,i.jsx)(n.li,{children:"Pull CDN"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#edge-computing",children:"Edge Computing"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#redis-advanced-patterns",children:"Redis Advanced Patterns"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#application-level-caching",children:"Application-Level Caching"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#cache-invalidation-strategies",children:"Cache Invalidation Strategies"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"6-observability",children:"6. Observability"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#backoff-jitter-and-retry-strategies",children:"Backoff, Jitter, and Retry Strategies"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Exponential Backoff"}),"\n",(0,i.jsx)(n.li,{children:"Jitter"}),"\n",(0,i.jsx)(n.li,{children:"Circuit Breaker Pattern"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#logging-best-practices",children:"Logging Best Practices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Structured Logging"}),"\n",(0,i.jsx)(n.li,{children:"Log Levels"}),"\n",(0,i.jsx)(n.li,{children:"Correlation IDs"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#monitoring--metrics",children:"Monitoring & Metrics"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Key Metrics (RED Method)"}),"\n",(0,i.jsx)(n.li,{children:"USE Method"}),"\n",(0,i.jsx)(n.li,{children:"Golden Signals"}),"\n",(0,i.jsx)(n.li,{children:"Metric Types"}),"\n",(0,i.jsx)(n.li,{children:"Prometheus & Grafana"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#alerting-best-practices",children:"Alerting Best Practices"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#distributed-tracing",children:"Distributed Tracing"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Jaeger"}),"\n",(0,i.jsx)(n.li,{children:"OpenTelemetry"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#slo-sli-sla",children:"SLO, SLI, SLA"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Error Budgets"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"7-security--privacy",children:"7. Security & Privacy"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#authentication-vs-authorization",children:"Authentication vs Authorization"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#authentication-mechanisms",children:"Authentication Mechanisms"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"JWT"}),"\n",(0,i.jsx)(n.li,{children:"OAuth 2.0"}),"\n",(0,i.jsx)(n.li,{children:"SSO"}),"\n",(0,i.jsx)(n.li,{children:"Session-Based Authentication"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#encryption",children:"Encryption"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"TLS/HTTPS"}),"\n",(0,i.jsx)(n.li,{children:"Data at Rest"}),"\n",(0,i.jsx)(n.li,{children:"Hashing vs Encryption"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#ddos-protection--waf",children:"DDoS Protection & WAF"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#data-privacy-gdpr-basics",children:"Data Privacy (GDPR Basics)"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"8-infrastructure--deployment",children:"8. Infrastructure & Deployment"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#containers--orchestration",children:"Containers & Orchestration"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Docker"}),"\n",(0,i.jsx)(n.li,{children:"Kubernetes"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#cicd-pipelines",children:"CI/CD Pipelines"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Continuous Integration"}),"\n",(0,i.jsx)(n.li,{children:"Continuous Deployment"}),"\n",(0,i.jsx)(n.li,{children:"Deployment Strategies"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#service-discovery",children:"Service Discovery"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#api-gateway",children:"API Gateway"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#microservices-vs-monoliths",children:"Microservices vs Monoliths"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"9-special-topics",children:"9. Special Topics"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#search-systems",children:"Search Systems"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Inverted Index"}),"\n",(0,i.jsx)(n.li,{children:"Ranking Algorithms"}),"\n",(0,i.jsx)(n.li,{children:"Elasticsearch Architecture"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bloom-filters",children:"Bloom Filters"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#recommendation-systems",children:"Recommendation Systems"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Collaborative Filtering"}),"\n",(0,i.jsx)(n.li,{children:"Content-Based Filtering"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#distributed-transactions",children:"Distributed Transactions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Two-Phase Commit (2PC)"}),"\n",(0,i.jsx)(n.li,{children:"Saga Pattern"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#consensus-algorithms",children:"Consensus Algorithms"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Raft"}),"\n",(0,i.jsx)(n.li,{children:"Paxos"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#time--ordering-in-distributed-systems",children:"Time & Ordering in Distributed Systems"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Lamport Clocks"}),"\n",(0,i.jsx)(n.li,{children:"Vector Clocks"}),"\n",(0,i.jsx)(n.li,{children:"True Time"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"10-additional-important-topics",children:"10. Additional Important Topics"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#back-of-the-envelope-calculations",children:"Back-of-the-Envelope Calculations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#polling-vs-push-vs-long-polling",children:"Polling vs Push vs Long Polling"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#database-connection-pooling",children:"Database Connection Pooling"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#partitioning-vs-sharding",children:"Partitioning vs Sharding"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#webhooks",children:"Webhooks"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#reverse-hash-lookup-distributed-hash-table",children:"Reverse Hash Lookup"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"interview-preparation",children:"Interview Preparation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#how-to-approach-system-design-interviews",children:"How to Approach System Design Interviews"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#common-mistakes-to-avoid",children:"Common Mistakes to Avoid"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#key-trade-offs-to-discuss",children:"Key Trade-offs to Discuss"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#practice-questions",children:"Practice Questions"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"quick-reference",children:"Quick Reference"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#when-to-use-sql-vs-nosql",children:"When to Use SQL vs NoSQL"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#caching-decision-tree",children:"Caching Decision Tree"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#database-replication-strategy",children:"Database Replication Strategy"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#message-queue-vs-database",children:"Message Queue vs Database"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"1-networking--communication-1",children:"1. Networking & Communication"}),"\n",(0,i.jsx)(n.h3,{id:"ip-addressing",children:"IP Addressing"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"IPv4"}),": 32-bit addresses (e.g., 192.168.1.1), supports ~4.3 billion addresses"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"IPv6"}),": 128-bit addresses, designed to solve IPv4 exhaustion"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Private vs Public IPs"}),": Private IPs (10.x.x.x, 192.168.x.x) for internal networks, public for internet-facing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CIDR Notation"}),": 192.168.1.0/24 means first 24 bits are network, last 8 for hosts"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"dns-domain-name-system",children:"DNS (Domain Name System)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Translates domain names to IP addresses"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hierarchical system"}),": Root \u2192 TLD (.com) \u2192 Authoritative nameserver"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Record types"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A: Maps domain to IPv4"}),"\n",(0,i.jsx)(n.li,{children:"AAAA: Maps to IPv6"}),"\n",(0,i.jsx)(n.li,{children:"CNAME: Alias to another domain"}),"\n",(0,i.jsx)(n.li,{children:"MX: Mail server"}),"\n",(0,i.jsx)(n.li,{children:"NS: Nameserver"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DNS caching"}),": Browsers, OS, recursive resolvers cache results (TTL-based)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Interview tip"}),": DNS is often a single point of failure; use multiple nameservers"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"load-balancers",children:"Load Balancers"}),"\n",(0,i.jsx)(n.h4,{id:"l4-layer-4---transport-layer",children:"L4 (Layer 4 - Transport Layer)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Operates at TCP/UDP level"}),"\n",(0,i.jsx)(n.li,{children:"Routes based on IP address and port"}),"\n",(0,i.jsx)(n.li,{children:"Faster, less inspection overhead"}),"\n",(0,i.jsx)(n.li,{children:"Cannot route based on content (URL, headers)"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": High-throughput, low-latency requirements"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"l7-layer-7---application-layer",children:"L7 (Layer 7 - Application Layer)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Operates at HTTP/HTTPS level"}),"\n",(0,i.jsx)(n.li,{children:"Routes based on URLs, headers, cookies"}),"\n",(0,i.jsx)(n.li,{children:"Can do SSL termination, content-based routing"}),"\n",(0,i.jsx)(n.li,{children:"More CPU intensive"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Microservices with different endpoints, A/B testing"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"proxy",children:"Proxy"}),"\n",(0,i.jsx)(n.h4,{id:"forward-proxy",children:"Forward Proxy"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Client-side proxy"}),"\n",(0,i.jsx)(n.li,{children:"Client \u2192 Forward Proxy \u2192 Internet"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Content filtering in organizations"}),"\n",(0,i.jsx)(n.li,{children:"Anonymity (VPN-like behavior)"}),"\n",(0,i.jsx)(n.li,{children:"Caching for clients"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": Corporate proxy server"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"reverse-proxy",children:"Reverse Proxy"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Server-side proxy"}),"\n",(0,i.jsx)(n.li,{children:"Client \u2192 Reverse Proxy \u2192 Backend servers"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Load balancing"}),"\n",(0,i.jsx)(n.li,{children:"SSL termination"}),"\n",(0,i.jsx)(n.li,{children:"Caching"}),"\n",(0,i.jsx)(n.li,{children:"Security (hide backend infrastructure)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": Nginx, HAProxy"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"tcp-vs-udp",children:"TCP vs UDP"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Feature"}),(0,i.jsx)(n.th,{children:"TCP"}),(0,i.jsx)(n.th,{children:"UDP"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Connection"}),(0,i.jsx)(n.td,{children:"Connection-oriented (3-way handshake)"}),(0,i.jsx)(n.td,{children:"Connectionless"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Reliability"}),(0,i.jsx)(n.td,{children:"Guaranteed delivery, ordered"}),(0,i.jsx)(n.td,{children:"No guarantee, may lose/reorder packets"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Speed"}),(0,i.jsx)(n.td,{children:"Slower (overhead)"}),(0,i.jsx)(n.td,{children:"Faster"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Use cases"}),(0,i.jsx)(n.td,{children:"HTTP, SSH, File transfers"}),(0,i.jsx)(n.td,{children:"Video streaming, DNS, Gaming, VoIP"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Flow control"}),(0,i.jsx)(n.td,{children:"Yes (prevents overwhelming receiver)"}),(0,i.jsx)(n.td,{children:"No"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Error checking"}),(0,i.jsx)(n.td,{children:"Extensive"}),(0,i.jsx)(n.td,{children:"Basic checksum"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Interview insight"}),": TCP trades speed for reliability; UDP trades reliability for speed"]}),"\n",(0,i.jsx)(n.h3,{id:"httphttps-basics",children:"HTTP/HTTPS Basics"}),"\n",(0,i.jsx)(n.h4,{id:"http-methods",children:"HTTP Methods"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GET"}),": Retrieve resource (idempotent, cacheable)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"POST"}),": Create resource (not idempotent)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PUT"}),": Update/replace entire resource (idempotent)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PATCH"}),": Partial update (not necessarily idempotent)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DELETE"}),": Remove resource (idempotent)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"HEAD"}),": Like GET but without response body"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"OPTIONS"}),": Check available methods"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"important-headers",children:"Important Headers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cache-Control"}),": Directives for caching (max-age, no-cache, no-store)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ETag"}),": Resource version identifier for conditional requests"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Authorization"}),": Bearer tokens, API keys"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Content-Type"}),": MIME type (application/json, text/html)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User-Agent"}),": Client information"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accept"}),": Content types client can process"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"http-status-codes",children:"HTTP Status Codes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"2xx"}),": Success (200 OK, 201 Created, 204 No Content)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"3xx"}),": Redirection (301 Moved Permanently, 304 Not Modified)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"4xx"}),": Client errors (400 Bad Request, 401 Unauthorized, 404 Not Found, 429 Too Many Requests)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"5xx"}),": Server errors (500 Internal Server Error, 502 Bad Gateway, 503 Service Unavailable)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"rest-vs-graphql-vs-grpc",children:"REST vs GraphQL vs gRPC"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"REST"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Resource-based URLs (/users/123)"}),"\n",(0,i.jsx)(n.li,{children:"Standard HTTP methods"}),"\n",(0,i.jsx)(n.li,{children:"Over-fetching/under-fetching possible"}),"\n",(0,i.jsx)(n.li,{children:"Easy caching via HTTP"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Best for"}),": Public APIs, CRUD operations"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"GraphQL"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Single endpoint (/graphql)"}),"\n",(0,i.jsx)(n.li,{children:"Client specifies exact data needed"}),"\n",(0,i.jsx)(n.li,{children:"Reduces over-fetching"}),"\n",(0,i.jsx)(n.li,{children:"More complex server-side"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Best for"}),": Complex data requirements, mobile apps (bandwidth concerns)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"gRPC"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Uses Protocol Buffers (binary format)"}),"\n",(0,i.jsx)(n.li,{children:"HTTP/2 based, bidirectional streaming"}),"\n",(0,i.jsx)(n.li,{children:"Strongly typed contracts"}),"\n",(0,i.jsx)(n.li,{children:"More efficient than JSON"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Best for"}),": Internal microservices, high-performance requirements"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"real-time-communication",children:"Real-Time Communication"}),"\n",(0,i.jsx)(n.h4,{id:"websockets",children:"WebSockets"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Full-duplex communication over single TCP connection"}),"\n",(0,i.jsx)(n.li,{children:"Persistent connection (after HTTP upgrade)"}),"\n",(0,i.jsx)(n.li,{children:"Low latency, real-time bidirectional"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),": Chat apps, live trading, multiplayer games"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Trade-off"}),": Stateful, harder to scale (requires sticky sessions)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"long-polling",children:"Long Polling"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Client requests, server holds connection until data available"}),"\n",(0,i.jsx)(n.li,{children:"Then responds, client immediately requests again"}),"\n",(0,i.jsx)(n.li,{children:"More overhead than WebSockets but better compatibility"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),": Real-time updates where WebSockets unavailable"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"server-sent-events-sse",children:"Server-Sent Events (SSE)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Server pushes updates to client over HTTP"}),"\n",(0,i.jsx)(n.li,{children:"Unidirectional (server \u2192 client)"}),"\n",(0,i.jsx)(n.li,{children:"Auto-reconnects, built-in event IDs"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),": News feeds, stock tickers, notifications"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Trade-off"}),": Only server-to-client (unlike WebSockets)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cdn-content-delivery-network",children:"CDN (Content Delivery Network)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Distributed servers at edge locations (geographically closer to users)"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Benefits"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Reduced latency (geographic proximity)"}),"\n",(0,i.jsx)(n.li,{children:"Lower bandwidth costs"}),"\n",(0,i.jsx)(n.li,{children:"DDoS protection"}),"\n",(0,i.jsx)(n.li,{children:"High availability"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Edge caching"}),": Static assets cached at CDN edges"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Geo-replication"}),": Content replicated across regions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Invalidation"}),": Can purge/update cached content"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": CloudFlare, Akamai, CloudFront"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"2-storage--databases-1",children:"2. Storage & Databases"}),"\n",(0,i.jsx)(n.h3,{id:"relational-databases-sql",children:"Relational Databases (SQL)"}),"\n",(0,i.jsx)(n.h4,{id:"acid-properties",children:"ACID Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Atomicity"}),": All operations in transaction succeed or all fail (no partial states)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistency"}),": Database remains in valid state (constraints honored)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Isolation"}),": Concurrent transactions don't interfere"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Durability"}),": Committed data persists even after crashes"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"isolation-levels",children:"Isolation Levels"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Read Uncommitted"}),": Can read uncommitted changes (dirty reads)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Read Committed"}),": Only reads committed data (default in many DBs)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Repeatable Read"}),": Same query returns same results in transaction"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Serializable"}),": Strongest isolation, transactions fully isolated"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"normalization",children:"Normalization"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"1NF"}),": Atomic values, no repeating groups"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"2NF"}),": 1NF + no partial dependencies (all non-key attributes depend on entire primary key)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"3NF"}),": 2NF + no transitive dependencies"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Trade-off"}),": More normalized = less redundancy but more joins; denormalization for read performance"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"database-replication-patterns",children:"Database Replication Patterns"}),"\n",(0,i.jsx)(n.h4,{id:"master-slave-primary-replica",children:"Master-Slave (Primary-Replica)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Write"}),": Goes to master only"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Read"}),": Can be served from slaves/replicas"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Scales reads, simple architecture"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Master is single point of failure for writes, replication lag"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Read-heavy workloads (90% reads, 10% writes)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"master-master-multi-master",children:"Master-Master (Multi-Master)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Write"}),": Can go to any master"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Read"}),": From any master"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": No single point of failure for writes, better write scaling"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Complex conflict resolution, potential data inconsistencies"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Conflict resolution"}),": Last-write-wins, version vectors, custom logic"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Globally distributed systems, high write availability"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"nosql-databases",children:"NoSQL Databases"}),"\n",(0,i.jsx)(n.h4,{id:"key-value-stores",children:"Key-Value Stores"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Structure"}),": Simple key \u2192 value mapping"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": Redis, DynamoDB, Riak"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Extremely fast, simple, horizontally scalable"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Limited query capabilities (no joins, no complex queries)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),": Session storage, caching, shopping carts"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"document-databases",children:"Document Databases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Structure"}),": Store JSON-like documents"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": MongoDB, CouchDB, Firestore"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Flexible schema, good for hierarchical data, can index/query fields"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": No joins (embed or reference), eventual consistency"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),": Content management, user profiles, catalogs"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"wide-column-stores",children:"Wide-Column Stores"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Structure"}),": Column families, rows can have different columns"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": Cassandra, HBase, BigTable"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Efficient for sparse data, scales horizontally, fast writes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Complex data modeling, eventual consistency"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),": Time-series data, IoT sensors, event logging"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"graph-databases",children:"Graph Databases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Structure"}),": Nodes, edges, properties"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": Neo4j, JanusGraph, Amazon Neptune"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Efficient for relationship queries, natural for connected data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Harder to scale horizontally, specialized use cases"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),": Social networks, recommendation engines, fraud detection"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"database-indexes",children:"Database Indexes"}),"\n",(0,i.jsx)(n.h4,{id:"b-tree-indexes",children:"B-Tree Indexes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Structure"}),": Balanced tree, sorted data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Good for range queries, ordered data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Operations"}),": O(log n) for search, insert, delete"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Default index in most SQL databases"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": ",(0,i.jsx)(n.code,{children:"WHERE age BETWEEN 25 AND 35"})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"hash-indexes",children:"Hash Indexes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Structure"}),": Hash table"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": O(1) for exact match lookups"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": No range queries, no ordering"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Equality comparisons only"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": ",(0,i.jsx)(n.code,{children:"WHERE user_id = 123"})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"inverted-indexes",children:"Inverted Indexes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Structure"}),": Maps terms to document IDs containing them"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Used in"}),": Full-text search engines"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'Doc1: "quick brown fox"'}),"\n",(0,i.jsx)(n.li,{children:'Doc2: "brown dog"'}),"\n",(0,i.jsx)(n.li,{children:'Index: "brown" \u2192 [Doc1, Doc2]'}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Search functionality (Elasticsearch)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"geospatial-indexes",children:"Geospatial Indexes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Types"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"R-tree: For spatial data (rectangles, polygons)"}),"\n",(0,i.jsx)(n.li,{children:"Quadtree: Divides space into quadrants recursively"}),"\n",(0,i.jsx)(n.li,{children:"Geohash: Encodes lat/long into string"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),': "Find restaurants within 5km", location-based services']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": MongoDB geospatial, PostGIS"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"replication--sharding",children:"Replication & Sharding"}),"\n",(0,i.jsx)(n.h4,{id:"horizontal-scaling-sharding",children:"Horizontal Scaling (Sharding)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Definition"}),": Distribute data across multiple machines"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sharding strategies"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hash-based"}),": hash(key) % num_shards"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Range-based"}),": user_id 1-1M on shard1, 1M-2M on shard2"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Geography-based"}),": EU users on EU shard, US users on US shard"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Directory-based"}),": Lookup table maps keys to shards"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Challenges"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cross-shard joins expensive"}),"\n",(0,i.jsx)(n.li,{children:"Rebalancing shards when adding nodes"}),"\n",(0,i.jsx)(n.li,{children:"Choosing good shard key (avoid hotspots)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"vertical-scaling",children:"Vertical Scaling"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Definition"}),": Add more resources (CPU, RAM) to single machine"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Simpler (no distributed complexity)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Limited by hardware limits, expensive, single point of failure"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"When to use"}),": Before reaching limits, for databases requiring strong consistency"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cap-theorem",children:"CAP Theorem"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"You can only have 2 of 3: Consistency, Availability, Partition tolerance"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistency"}),": All nodes see same data at same time"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Availability"}),": Every request gets response (success/failure)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Partition tolerance"}),": System works despite network partitions"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"In practice"}),": Network partitions will happen, so choose between:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CP (Consistency + Partition tolerance)"}),": Sacrifice availability during partition","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Examples: HBase, MongoDB (strong consistency mode)"}),"\n",(0,i.jsx)(n.li,{children:"Use case: Financial systems, inventory"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AP (Availability + Partition tolerance)"}),": Sacrifice consistency during partition","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Examples: Cassandra, DynamoDB, Riak"}),"\n",(0,i.jsx)(n.li,{children:"Use case: Social media feeds, analytics"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PACELC Theorem"})," (more realistic):"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If Partition, choose A or C"}),"\n",(0,i.jsx)(n.li,{children:"Else (no partition), choose Latency or Consistency"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"query-optimization",children:"Query Optimization"}),"\n",(0,i.jsx)(n.h4,{id:"techniques",children:"Techniques"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Indexes"}),": Most critical (but adds write overhead)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Query analysis"}),": Use EXPLAIN to see execution plan"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Avoid SELECT *"}),": Fetch only needed columns"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Limit result sets"}),": Pagination, WHERE clauses"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Denormalization"}),": For read-heavy workloads"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Partitioning"}),": Split large tables"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Connection pooling"}),": Reuse database connections"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Caching"}),": Redis for frequently accessed data"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"common-issues",children:"Common Issues"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"N+1 queries"}),": Fetching related data in loop (use joins or batch fetches)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Full table scans"}),": Missing indexes on WHERE/JOIN columns"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Suboptimal joins"}),": Wrong join order or type"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cdc-change-data-capture",children:"CDC (Change Data Capture)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Track changes in database (inserts, updates, deletes)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Methods"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Log-based: Read database transaction logs (MySQL binlog, Postgres WAL)"}),"\n",(0,i.jsx)(n.li,{children:"Trigger-based: Database triggers on changes"}),"\n",(0,i.jsx)(n.li,{children:"Timestamp-based: Check last_modified column"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Data replication to data warehouse"}),"\n",(0,i.jsx)(n.li,{children:"Invalidating caches"}),"\n",(0,i.jsx)(n.li,{children:"Event-driven architectures"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Tools"}),": Debezium, Maxwell, AWS DMS"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"full-text-search",children:"Full-Text Search"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Problem"}),": SQL LIKE '%keyword%' is slow (can't use indexes)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),": Specialized search engines with inverted indexes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Tokenization (breaking text into terms)"}),"\n",(0,i.jsx)(n.li,{children:"Stemming (run, running \u2192 run)"}),"\n",(0,i.jsx)(n.li,{children:"Relevance scoring (TF-IDF, BM25)"}),"\n",(0,i.jsx)(n.li,{children:"Fuzzy matching (typo tolerance)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": Elasticsearch, Solr, Algolia"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Architecture"}),": Separate search cluster, sync from primary DB via CDC"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"caching-strategies",children:"Caching Strategies"}),"\n",(0,i.jsx)(n.h4,{id:"cache-levels",children:"Cache Levels"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Client-side"}),": Browser cache, mobile app cache"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CDN"}),": Edge servers cache static assets"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reverse proxy"}),": Nginx caches responses"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Application cache"}),": In-memory (Redis, Memcached)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database cache"}),": Query result cache, buffer pool"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"cache-patterns",children:"Cache Patterns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Cache-Aside (Lazy Loading)"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"1. Check cache\n2. If miss: fetch from DB, populate cache\n3. Return data\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Only caches requested data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Cache miss penalty, potential stale data"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Read-Through"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cache sits between app and DB"}),"\n",(0,i.jsx)(n.li,{children:"Cache handles DB fetching automatically"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Simpler app code"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Cache miss still slow"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Write-Through"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Writes go to cache and DB synchronously"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Cache always consistent"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Higher write latency"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Write-Behind (Write-Back)"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Writes go to cache, asynchronously written to DB"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Low write latency"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Risk of data loss, complex"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Write-Around"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Writes go directly to DB, bypass cache"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Avoids cache pollution from writes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Cache miss on next read"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"cache-eviction-policies",children:"Cache Eviction Policies"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LRU (Least Recently Used)"}),": Evict oldest accessed item (good general purpose)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LFU (Least Frequently Used)"}),": Evict least accessed item (good for stable access patterns)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"FIFO (First In First Out)"}),": Evict oldest item (simple but not optimal)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"TTL (Time To Live)"}),": Evict after fixed time (good for time-sensitive data)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Random"}),": Evict random item (simple, surprisingly effective)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"cache-stampede-thundering-herd",children:"Cache Stampede (Thundering Herd)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Problem"}),": Cache expires, multiple requests hit DB simultaneously"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Solutions"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Lock on cache miss (first request fetches, others wait)"}),"\n",(0,i.jsx)(n.li,{children:"Probabilistic early expiration"}),"\n",(0,i.jsx)(n.li,{children:"Background refresh before expiration"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"3-scalability--reliability-1",children:"3. Scalability & Reliability"}),"\n",(0,i.jsx)(n.h3,{id:"load-balancing-algorithms",children:"Load Balancing Algorithms"}),"\n",(0,i.jsx)(n.h4,{id:"round-robin",children:"Round Robin"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Distribute requests sequentially across servers"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Simple, fair distribution"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Doesn't consider server load/capacity"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Weighted Round Robin"}),": Assign more requests to powerful servers"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"least-connections",children:"Least Connections"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Send to server with fewest active connections"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Better for long-lived connections"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Requires tracking connection state"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"consistent-hashing",children:"Consistent Hashing"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Hash both requests and servers onto ring"}),"\n",(0,i.jsx)(n.li,{children:"Request goes to next clockwise server"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Minimal redistribution when adding/removing servers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Can create hotspots"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),": Virtual nodes (multiple positions per server)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Distributed caches, sharding"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"ip-hash",children:"IP Hash"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Hash client IP to determine server"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Same client always goes to same server (session affinity)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Uneven distribution if IPs not diverse"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"least-response-time",children:"Least Response Time"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Send to server with fastest response"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Adapts to server performance"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Requires health checks, more complex"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"rate-limiting--throttling",children:"Rate Limiting & Throttling"}),"\n",(0,i.jsx)(n.h4,{id:"why-rate-limit",children:"Why Rate Limit?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Prevent abuse/DoS attacks"}),"\n",(0,i.jsx)(n.li,{children:"Fair resource allocation"}),"\n",(0,i.jsx)(n.li,{children:"Cost control (API quotas)"}),"\n",(0,i.jsx)(n.li,{children:"Ensure quality of service"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"algorithms",children:"Algorithms"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Token Bucket"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Bucket holds tokens (refilled at fixed rate)"}),"\n",(0,i.jsx)(n.li,{children:"Request consumes token"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Handles bursts, smooth rate"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": More complex"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": AWS API Gateway"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Leaky Bucket"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Requests enter bucket, leak out at fixed rate"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Smooth output rate"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": No burst handling"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Network traffic shaping"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Fixed Window"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Allow N requests per time window (e.g., 100/hour)"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Simple"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Burst at window boundaries (200 requests in 1 second if split across windows)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Sliding Window Log"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Track timestamp of each request"}),"\n",(0,i.jsx)(n.li,{children:"Count requests in sliding time window"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Accurate, no boundary burst"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Memory intensive (store all timestamps)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Sliding Window Counter"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Combines fixed window + weighted previous window"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Accurate, memory efficient"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Slightly complex"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"implementation",children:"Implementation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Storage"}),": Redis (INCR with EXPIRE)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Response"}),": 429 Too Many Requests + Retry-After header"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Distributed"}),": Use centralized Redis, not in-memory (consistent across servers)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"message-queues--streams",children:"Message Queues & Streams"}),"\n",(0,i.jsx)(n.h4,{id:"use-cases",children:"Use Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Decoupling"}),": Producers/consumers don't need to know about each other"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Async processing"}),": Handle time-consuming tasks"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Load leveling"}),": Queue absorbs traffic spikes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reliability"}),": Messages persist until processed"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"kafka",children:"Kafka"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Model"}),": Distributed log (append-only)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key features"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"High throughput (millions msgs/sec)"}),"\n",(0,i.jsx)(n.li,{children:"Partitions for parallelism"}),"\n",(0,i.jsx)(n.li,{children:"Persistent storage"}),"\n",(0,i.jsx)(n.li,{children:"Consumer groups"}),"\n",(0,i.jsx)(n.li,{children:"Replay capability (seek to offset)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),": Event streaming, log aggregation, real-time analytics"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"rabbitmq",children:"RabbitMQ"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Model"}),": Traditional message broker"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key features"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Multiple exchange types (direct, topic, fanout)"}),"\n",(0,i.jsx)(n.li,{children:"Acknowledgments"}),"\n",(0,i.jsx)(n.li,{children:"Priority queues"}),"\n",(0,i.jsx)(n.li,{children:"Dead letter queues"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),": Task queues, RPC, routing"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"aws-sqs",children:"AWS SQS"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Model"}),": Managed queue service"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Types"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Standard: At-least-once delivery, best-effort ordering"}),"\n",(0,i.jsx)(n.li,{children:"FIFO: Exactly-once, strict ordering"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),": Auto-scaling, dead letter queues, visibility timeout"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),": Decoupling microservices, job queues"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"backpressure",children:"Backpressure"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Problem"}),": Slow consumers can't keep up with producers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Solutions"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Push-back to producers (reject requests)"}),"\n",(0,i.jsx)(n.li,{children:"Dynamic batching"}),"\n",(0,i.jsx)(n.li,{children:"Increase consumer parallelism"}),"\n",(0,i.jsx)(n.li,{children:"Drop messages (if acceptable)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"consumer-groups",children:"Consumer Groups"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Concept"}),": Multiple consumers in group share message processing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Kafka"}),": Each partition assigned to one consumer in group (parallelism = partition count)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Benefits"}),": Horizontal scaling, fault tolerance"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"leader-election",children:"Leader Election"}),"\n",(0,i.jsx)(n.h4,{id:"why",children:"Why?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ensure single coordinator in distributed system"}),"\n",(0,i.jsx)(n.li,{children:"Prevent split-brain scenarios"}),"\n",(0,i.jsx)(n.li,{children:"Coordinate distributed operations"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"algorithms-1",children:"Algorithms"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Raft"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Leader elected via voting"}),"\n",(0,i.jsx)(n.li,{children:"Heartbeats maintain leadership"}),"\n",(0,i.jsx)(n.li,{children:"Log replication for state machine"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Understandable, proven"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Used in"}),": etcd, Consul"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Paxos"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Consensus via proposers, acceptors, learners"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Theoretically sound"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Complex to implement"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Used in"}),": Google Chubby"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"ZooKeeper (ZAB protocol)"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Centralized coordination service"}),"\n",(0,i.jsx)(n.li,{children:"Sequential consistency"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),": Configuration management, leader election, distributed locks"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Drawback"}),": Single point of failure (mitigated by quorum)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"failover--redundancy",children:"Failover & Redundancy"}),"\n",(0,i.jsx)(n.h4,{id:"active-passive-master-standby",children:"Active-Passive (Master-Standby)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Setup"}),": One active server, one standby"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Failover"}),": Standby takes over if active fails"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Simpler, no split-brain risk"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Wasted resources (standby idle)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Databases, critical services"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"active-active-multi-master",children:"Active-Active (Multi-Master)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Setup"}),": All servers handle traffic"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Better resource utilization, no failover delay"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Complex conflict resolution, data sync"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Stateless services, CDNs"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"health-checks",children:"Health Checks"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Types"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Passive: Monitor logs/metrics"}),"\n",(0,i.jsx)(n.li,{children:"Active: Periodic pings/HTTP checks"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Considerations"}),": Check interval vs false positives, cascading failures"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"4-system-design-patterns-1",children:"4. System Design Patterns"}),"\n",(0,i.jsx)(n.h3,{id:"read-vs-write-heavy-systems",children:"Read vs Write-Heavy Systems"}),"\n",(0,i.jsx)(n.h4,{id:"read-heavy-optimization",children:"Read-Heavy Optimization"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Caching"}),": Aggressive caching (Redis, CDN)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Read replicas"}),": Multiple database replicas"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Denormalization"}),": Duplicate data to avoid joins"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Indexing"}),": Optimize for common queries"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": Social media feeds, news sites, e-commerce browsing"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"write-heavy-optimization",children:"Write-Heavy Optimization"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Write buffering"}),": Queue writes, batch inserts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Asynchronous processing"}),": Background workers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Eventual consistency"}),": Accept temporary inconsistency"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sharding"}),": Distribute writes across nodes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Optimize indexes"}),": Fewer indexes (faster writes, slower reads)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": IoT data ingestion, logging systems, analytics"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cqrs-command-query-responsibility-segregation",children:"CQRS (Command Query Responsibility Segregation)"}),"\n",(0,i.jsx)(n.h4,{id:"concept",children:"Concept"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Separate models for reads (queries) and writes (commands)"}),"\n",(0,i.jsx)(n.li,{children:"Different databases optimized for each"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"write-side-command",children:"Write Side (Command)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Handles business logic"}),"\n",(0,i.jsx)(n.li,{children:"Validates and processes commands"}),"\n",(0,i.jsx)(n.li,{children:"Emits events"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"read-side-query",children:"Read Side (Query)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Optimized for queries (denormalized views)"}),"\n",(0,i.jsx)(n.li,{children:"Updated via events from write side"}),"\n",(0,i.jsx)(n.li,{children:"Eventually consistent"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"benefits",children:"Benefits"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Independent scaling of reads/writes"}),"\n",(0,i.jsx)(n.li,{children:"Optimized data models for each"}),"\n",(0,i.jsx)(n.li,{children:"Clear separation of concerns"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"drawbacks",children:"Drawbacks"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Increased complexity"}),"\n",(0,i.jsx)(n.li,{children:"Eventual consistency challenges"}),"\n",(0,i.jsx)(n.li,{children:"Need to sync read models"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"use-cases-1",children:"Use Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Complex domains (e-commerce, banking)"}),"\n",(0,i.jsx)(n.li,{children:"Different read/write patterns"}),"\n",(0,i.jsx)(n.li,{children:"Multiple read models (different views of data)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"event-sourcing",children:"Event Sourcing"}),"\n",(0,i.jsx)(n.h4,{id:"concept-1",children:"Concept"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Store events (state changes) instead of current state"}),"\n",(0,i.jsx)(n.li,{children:"Rebuild state by replaying events"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Events:\n1. AccountCreated(id:123, balance:0)\n2. MoneyDeposited(id:123, amount:100)\n3. MoneyWithdrawn(id:123, amount:30)\n\nCurrent state: balance = 70 (derived from events)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"benefits-1",children:"Benefits"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Complete audit trail"}),"\n",(0,i.jsx)(n.li,{children:"Time travel (replay to any point)"}),"\n",(0,i.jsx)(n.li,{children:"Debugging (see what happened)"}),"\n",(0,i.jsx)(n.li,{children:"Multiple projections from same events"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"drawbacks-1",children:"Drawbacks"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Complex queries (need to replay events)"}),"\n",(0,i.jsx)(n.li,{children:"Storage growth"}),"\n",(0,i.jsx)(n.li,{children:"Schema evolution challenges"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"combined-with-cqrs",children:"Combined with CQRS"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Events from write side \u2192 update read models"}),"\n",(0,i.jsx)(n.li,{children:"Perfect synergy"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"caching-patterns-revisited",children:"Caching Patterns (Revisited)"}),"\n",(0,i.jsx)(n.h4,{id:"write-through-caching",children:"Write-Through Caching"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Flow"}),": Write to cache \u2192 sync write to DB"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Cache always up-to-date"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Higher write latency (dual writes)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Read-heavy with some writes"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"write-back-write-behind-caching",children:"Write-Back (Write-Behind) Caching"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Flow"}),": Write to cache \u2192 async write to DB (batched)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Fast writes, batch optimization"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Data loss risk, complexity"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": High write throughput (logs, analytics)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"write-around-caching",children:"Write-Around Caching"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Flow"}),": Write directly to DB, invalidate/bypass cache"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Doesn't pollute cache with write data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Next read will be cache miss"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Write-once, read-rarely data"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"idempotency--retries",children:"Idempotency & Retries"}),"\n",(0,i.jsx)(n.h4,{id:"idempotency",children:"Idempotency"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Definition"}),": Same operation can be applied multiple times without changing result"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Idempotent: DELETE /user/123 (same result each time)"}),"\n",(0,i.jsx)(n.li,{children:"Not idempotent: POST /user (creates new user each time)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"why-important",children:"Why Important?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Network failures require retries"}),"\n",(0,i.jsx)(n.li,{children:"Distributed systems need duplicate handling"}),"\n",(0,i.jsx)(n.li,{children:"Prevent double-charging, duplicate records"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"implementation-1",children:"Implementation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Idempotency keys"}),": Client generates unique ID per request","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"POST /payment\nIdempotency-Key: 550e8400-e29b-41d4-a716-446655440000\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Server stores"}),": key \u2192 result mapping"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"On retry"}),": Return cached result if key exists"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"retry-strategies",children:"Retry Strategies"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exponential backoff"}),": Wait 1s, 2s, 4s, 8s... (with jitter)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Circuit breaker"}),": Stop retrying after threshold (prevent cascading failures)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Deadline propagation"}),": Don't retry if deadline exceeded"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"consistency-models",children:"Consistency Models"}),"\n",(0,i.jsx)(n.h4,{id:"strong-consistency-linearizability",children:"Strong Consistency (Linearizability)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Reads always return latest write"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Simple reasoning, no surprises"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Higher latency, lower availability"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": Traditional RDBMS, ZooKeeper"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Financial transactions, inventory"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"eventual-consistency",children:"Eventual Consistency"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Reads may return stale data temporarily"}),"\n",(0,i.jsx)(n.li,{children:"Eventually all replicas converge"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": High availability, low latency"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Complex application logic"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": DynamoDB, Cassandra, DNS"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Social media, analytics"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"causal-consistency",children:"Causal Consistency"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Causally-related operations seen in order"}),"\n",(0,i.jsx)(n.li,{children:"Concurrent operations can be seen in any order"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Post message \u2192 Like message (causal, must be ordered)"}),"\n",(0,i.jsx)(n.li,{children:"Two likes from different users (concurrent, any order OK)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Collaborative applications"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"read-your-writes-consistency",children:"Read-Your-Writes Consistency"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"User always sees their own updates"}),"\n",(0,i.jsx)(n.li,{children:"Others may have delay"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Implementation"}),": Route user's reads to same replica"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"monotonic-reads",children:"Monotonic Reads"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If user sees value, subsequent reads won't see older value"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Prevents"}),": Reading from lagging replica after reading from up-to-date one"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"5-advanced-caching-1",children:"5. Advanced Caching"}),"\n",(0,i.jsx)(n.h3,{id:"cdn-deep-dive",children:"CDN Deep Dive"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Push CDN"}),": Origin server pushes content to edge servers proactively"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Lower latency, predictable"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Wasted bandwidth for unpopular content"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Popular content known in advance"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Pull CDN"}),": Edge servers pull content on-demand (cache-aside)"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Only cache requested content"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": First request slow (cold cache)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Long-tail content distribution"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"edge-computing",children:"Edge Computing"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Run compute at edge locations (not just caching)"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A/B testing at edge"}),"\n",(0,i.jsx)(n.li,{children:"Authentication/authorization"}),"\n",(0,i.jsx)(n.li,{children:"Request manipulation"}),"\n",(0,i.jsx)(n.li,{children:"Serverless functions"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": CloudFlare Workers, Lambda@Edge"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"redis-advanced-patterns",children:"Redis Advanced Patterns"}),"\n",(0,i.jsx)(n.h4,{id:"redis-as-message-broker",children:"Redis as Message Broker"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pub/Sub for real-time messaging"}),"\n",(0,i.jsx)(n.li,{children:"Streams for event sourcing"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Fast, simple"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": No message persistence (pub/sub), less feature-rich than Kafka"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"redis-as-database",children:"Redis as Database"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Persistence options: RDB snapshots, AOF logs"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),": Session store, leaderboards, rate limiting"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"redis-data-structures",children:"Redis Data Structures"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Strings, Lists, Sets, Sorted Sets, Hashes"}),"\n",(0,i.jsx)(n.li,{children:"HyperLogLog (cardinality estimation)"}),"\n",(0,i.jsx)(n.li,{children:"Bitmaps (user activity tracking)"}),"\n",(0,i.jsx)(n.li,{children:"Geospatial indexes"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"application-level-caching",children:"Application-Level Caching"}),"\n",(0,i.jsx)(n.h4,{id:"in-memory-caching",children:"In-Memory Caching"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Libraries"}),": Caffeine (Java), Go-cache, lru-cache (Node.js)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Ultra-fast (no network)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Not shared across servers, memory limited"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"distributed-caching",children:"Distributed Caching"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": Redis, Memcached"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Shared state, larger capacity"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Network latency, failure modes"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"multi-level-caching",children:"Multi-Level Caching"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Request \u2192 L1 (in-memory) \u2192 L2 (Redis) \u2192 L3 (Database)\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Benefits"}),": Balance speed and size"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Invalidation"}),": Coordinate across levels"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cache-invalidation-strategies",children:"Cache Invalidation Strategies"}),"\n",(0,i.jsx)(n.h4,{id:"time-based-ttl",children:"Time-based (TTL)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Simplest, works well for slowly-changing data"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Risk"}),": Serving stale data until expiration"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"event-based",children:"Event-based"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Invalidate on data changes"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Methods"}),": Pub/Sub, CDC, explicit invalidation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Always fresh data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Complexity, potential race conditions"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"write-throughwrite-behind",children:"Write-through/Write-behind"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Update cache on writes"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Cache always current"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Write overhead"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"6-observability-1",children:"6. Observability"}),"\n",(0,i.jsx)(n.h3,{id:"backoff-jitter-and-retry-strategies",children:"Backoff, Jitter, and Retry Strategies"}),"\n",(0,i.jsx)(n.h4,{id:"exponential-backoff",children:"Exponential Backoff"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"delay = base_delay * (2 ^ attempt)\nExample: 1s, 2s, 4s, 8s, 16s...\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Problem"}),": Thundering herd (all clients retry simultaneously after backoff)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"jitter",children:"Jitter"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"delay = base_delay * (2 ^ attempt) * random(0.5, 1.5)\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Benefit"}),": Spreads out retries, prevents synchronized thundering herd"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Types"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Full jitter: Random between 0 and max delay"}),"\n",(0,i.jsx)(n.li,{children:"Equal jitter: Half fixed, half random"}),"\n",(0,i.jsx)(n.li,{children:"Decorrelated jitter: Each attempt varies independently"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"circuit-breaker-pattern",children:"Circuit Breaker Pattern"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"States"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Closed"}),": Normal operation, requests pass through"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Open"}),": Errors exceed threshold, block requests immediately (fail fast)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Half-Open"}),": After timeout, allow test request","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Success \u2192 Close circuit"}),"\n",(0,i.jsx)(n.li,{children:"Failure \u2192 Reopen circuit"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Prevent cascading failures"}),"\n",(0,i.jsx)(n.li,{children:"Give downstream service time to recover"}),"\n",(0,i.jsx)(n.li,{children:"Fast failure instead of waiting for timeout"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"logging-best-practices",children:"Logging Best Practices"}),"\n",(0,i.jsx)(n.h4,{id:"structured-logging",children:"Structured Logging"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "timestamp": "2025-10-02T10:30:00Z",\n  "level": "ERROR",\n  "service": "payment-service",\n  "trace_id": "abc-123",\n  "user_id": "456",\n  "message": "Payment processing failed",\n  "error": "insufficient funds"\n}\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Benefits"}),": Machine-parseable, searchable, aggregatable"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"log-levels",children:"Log Levels"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ERROR"}),": Failures requiring immediate attention"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"WARN"}),": Unexpected but handled (retry success, degraded mode)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"INFO"}),": Important business events (user signup, payment)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DEBUG"}),": Detailed diagnostic info (development only)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"correlation-ids",children:"Correlation IDs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Unique ID per request, propagated across services"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Benefit"}),": Trace request flow through distributed system"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Implementation"}),": X-Request-ID header"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"what-not-to-log",children:"What NOT to Log"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Passwords, API keys, PII (privacy/security)"}),"\n",(0,i.jsx)(n.li,{children:"Excessive debugging in production (cost/noise)"}),"\n",(0,i.jsx)(n.li,{children:"Every database query (performance)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"monitoring--metrics",children:"Monitoring & Metrics"}),"\n",(0,i.jsx)(n.h4,{id:"key-metrics-red-method",children:"Key Metrics (RED Method)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rate"}),": Requests per second"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Errors"}),": Error rate/count"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Duration"}),": Latency (p50, p95, p99)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"use-method-for-resources",children:"USE Method (for Resources)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Utilization"}),": % time resource busy (CPU, memory)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Saturation"}),": Queue length (requests waiting)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Errors"}),": Error count"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"golden-signals-google-sre",children:"Golden Signals (Google SRE)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Latency"}),": Time to serve request"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Traffic"}),": Request volume"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Errors"}),": Failed request rate"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Saturation"}),": System fullness (how close to capacity)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"metric-types",children:"Metric Types"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Counter"}),": Monotonically increasing (requests_total)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Gauge"}),": Current value (cpu_usage, active_connections)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Histogram"}),": Distribution of values (request_duration_seconds)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Summary"}),": Like histogram but calculates quantiles"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"prometheus--grafana",children:"Prometheus & Grafana"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Prometheus"}),": Time-series database, pull-based scraping","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"PromQL query language"}),"\n",(0,i.jsx)(n.li,{children:"Alert manager integration"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Grafana"}),": Visualization dashboards","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Multiple data sources"}),"\n",(0,i.jsx)(n.li,{children:"Alerting, annotations"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"alerting-best-practices",children:"Alerting Best Practices"}),"\n",(0,i.jsx)(n.h4,{id:"alert-fatigue-prevention",children:"Alert Fatigue Prevention"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Alert on symptoms, not causes (user-facing issues, not low-level)"}),"\n",(0,i.jsx)(n.li,{children:"Make alerts actionable (clear remediation steps)"}),"\n",(0,i.jsx)(n.li,{children:"Avoid duplicate alerts"}),"\n",(0,i.jsx)(n.li,{children:"Use severity levels (critical vs warning)"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"on-call-considerations",children:"On-Call Considerations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Runbooks"}),": Step-by-step troubleshooting guides"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Escalation policies"}),": Who to notify, when"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Postmortems"}),": Blameless analysis after incidents"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"distributed-tracing",children:"Distributed Tracing"}),"\n",(0,i.jsx)(n.h4,{id:"concept-2",children:"Concept"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Track request flow across microservices"}),"\n",(0,i.jsx)(n.li,{children:"Visualize latency bottlenecks"}),"\n",(0,i.jsx)(n.li,{children:"Identify failing service in chain"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"implementation-2",children:"Implementation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Trace"}),": Single request journey"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Span"}),": Individual operation (DB query, HTTP call)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Trace ID"}),": Unique identifier for entire trace"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Span ID"}),": Unique identifier for operation"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"tools",children:"Tools"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Jaeger"}),": Open-source, CNCF project"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Zipkin"}),": Twitter-originated"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"OpenTelemetry"}),": Vendor-neutral standard (merges OpenTracing + OpenCensus)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"example-trace",children:"Example Trace"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Frontend (50ms)\n  \u251c\u2500 Auth Service (10ms)\n  \u251c\u2500 Product Service (30ms)\n  \u2502   \u2514\u2500 Database Query (25ms)  \u2190 Bottleneck!\n  \u2514\u2500 Payment Service (5ms)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"slo-sli-sla",children:"SLO, SLI, SLA"}),"\n",(0,i.jsx)(n.h4,{id:"sli-service-level-indicator",children:"SLI (Service Level Indicator)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Definition"}),": Metric representing system health"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Request success rate"}),"\n",(0,i.jsx)(n.li,{children:"Request latency (p95 < 200ms)"}),"\n",(0,i.jsx)(n.li,{children:"System uptime"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"slo-service-level-objective",children:"SLO (Service Level Objective)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Definition"}),": Target value/range for SLI"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),': "99.9% of requests succeed"']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Internal goal for reliability"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"sla-service-level-agreement",children:"SLA (Service Level Agreement)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Definition"}),": Contract with users (consequences if SLO missed)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),': "99.9% uptime or customer gets refund"']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Relationship"}),": SLA \u2264 SLO (SLO should be stricter to have buffer)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"error-budgets",children:"Error Budgets"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Concept"}),": Acceptable downtime based on SLO"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": 99.9% SLO = 43 minutes downtime/month allowed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),": If budget exhausted, freeze features and focus on reliability"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"7-security--privacy-1",children:"7. Security & Privacy"}),"\n",(0,i.jsx)(n.h3,{id:"authentication-vs-authorization",children:"Authentication vs Authorization"}),"\n",(0,i.jsx)(n.h4,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Definition"}),": Verifying who the user is"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Methods"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Username/password"}),"\n",(0,i.jsx)(n.li,{children:"Multi-factor authentication (MFA)"}),"\n",(0,i.jsx)(n.li,{children:"Biometrics"}),"\n",(0,i.jsx)(n.li,{children:"Certificate-based"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"authorization",children:"Authorization"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Definition"}),": What the user can do"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Models"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"RBAC (Role-Based)"}),": User has roles (admin, editor), roles have permissions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ABAC (Attribute-Based)"}),": Policies based on attributes (department, clearance level)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ACL (Access Control List)"}),": Resource lists who can access"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"authentication-mechanisms",children:"Authentication Mechanisms"}),"\n",(0,i.jsx)(n.h4,{id:"jwt-json-web-tokens",children:"JWT (JSON Web Tokens)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Structure"}),": Header.Payload.Signature"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "sub": "user123",\n  "name": "John Doe",\n  "exp": 1730000000\n}\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Stateless, self-contained, scalable"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Can't revoke (until expiry), token size"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": API authentication, microservices"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"oauth-20",children:"OAuth 2.0"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Delegated authorization (allow app access without sharing password)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Flow Example"})," (Authorization Code):","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:'User clicks "Login with Google"'}),"\n",(0,i.jsx)(n.li,{children:"Redirect to Google (authorization server)"}),"\n",(0,i.jsx)(n.li,{children:"User approves"}),"\n",(0,i.jsx)(n.li,{children:"Google redirects back with authorization code"}),"\n",(0,i.jsx)(n.li,{children:"App exchanges code for access token"}),"\n",(0,i.jsx)(n.li,{children:"App uses token to access Google APIs"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Roles"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Resource Owner (user)"}),"\n",(0,i.jsx)(n.li,{children:"Client (your app)"}),"\n",(0,i.jsx)(n.li,{children:"Authorization Server (Google)"}),"\n",(0,i.jsx)(n.li,{children:"Resource Server (Google APIs)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"sso-single-sign-on",children:"SSO (Single Sign-On)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Definition"}),": One login for multiple applications"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Protocols"}),": SAML, OAuth 2.0, OpenID Connect"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Benefits"}),": Better UX, centralized access control"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": Enterprise applications"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"session-based-authentication",children:"Session-Based Authentication"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Flow"}),":","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"User logs in"}),"\n",(0,i.jsx)(n.li,{children:"Server creates session, stores in DB/Redis"}),"\n",(0,i.jsx)(n.li,{children:"Returns session ID cookie"}),"\n",(0,i.jsx)(n.li,{children:"Client sends cookie with requests"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Can revoke immediately"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Stateful, harder to scale (requires sticky sessions or shared session store)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"encryption",children:"Encryption"}),"\n",(0,i.jsx)(n.h4,{id:"tlshttps",children:"TLS/HTTPS"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Encrypt data in transit"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Handshake"}),":","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Client Hello (supported cipher suites)"}),"\n",(0,i.jsx)(n.li,{children:"Server Hello (chosen cipher, certificate)"}),"\n",(0,i.jsx)(n.li,{children:"Client verifies certificate"}),"\n",(0,i.jsx)(n.li,{children:"Key exchange (establish shared secret)"}),"\n",(0,i.jsx)(n.li,{children:"Encrypted communication"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"TLS 1.3"}),": Faster handshake, stronger security"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"data-at-rest",children:"Data at Rest"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Encryption"}),": AES-256 (symmetric encryption)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key management"}),": HSM (Hardware Security Module), KMS (Key Management Service)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database encryption"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Full disk encryption"}),"\n",(0,i.jsx)(n.li,{children:"Column-level encryption (for sensitive fields)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Application-level encryption"}),": Encrypt before storing"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"hashing-vs-encryption",children:"Hashing vs Encryption"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hashing"}),": One-way (passwords)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use bcrypt, Argon2 (not MD5, SHA1)"}),"\n",(0,i.jsx)(n.li,{children:"Salt to prevent rainbow tables"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Encryption"}),": Two-way (reversible with key)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use AES, RSA"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"ddos-protection--waf",children:"DDoS Protection & WAF"}),"\n",(0,i.jsx)(n.h4,{id:"ddos-distributed-denial-of-service",children:"DDoS (Distributed Denial of Service)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Types"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Volumetric"}),": Flood with traffic (UDP flood, amplification attacks)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Protocol"}),": Exploit protocol weaknesses (SYN flood)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Application Layer"}),": Target application (HTTP flood)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Mitigation"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rate limiting"}),": Per IP, per endpoint"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CDN"}),": Absorb traffic at edge"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Anycast"}),": Distribute traffic across locations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Traffic analysis"}),": Identify and block malicious patterns"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Overprovisioning"}),": Have excess capacity"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"waf-web-application-firewall",children:"WAF (Web Application Firewall)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Filter malicious HTTP traffic"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Protection against"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"SQL injection"}),"\n",(0,i.jsx)(n.li,{children:"XSS (Cross-Site Scripting)"}),"\n",(0,i.jsx)(n.li,{children:"CSRF (Cross-Site Request Forgery)"}),"\n",(0,i.jsx)(n.li,{children:"Path traversal"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Types"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Network-based (hardware appliance)"}),"\n",(0,i.jsx)(n.li,{children:"Host-based (integrated in app)"}),"\n",(0,i.jsx)(n.li,{children:"Cloud-based (CloudFlare, AWS WAF)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rules"}),": Signature-based, behavioral analysis"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"data-privacy-gdpr-basics",children:"Data Privacy (GDPR Basics)"}),"\n",(0,i.jsx)(n.h4,{id:"key-principles",children:"Key Principles"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Lawful basis"}),": Need consent or legitimate interest"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data minimization"}),": Collect only necessary data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose limitation"}),": Use data only for stated purpose"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Storage limitation"}),": Don't keep data longer than needed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accuracy"}),": Keep data up-to-date"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Security"}),": Protect with encryption, access controls"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"user-rights",children:"User Rights"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Right to access"}),": User can request their data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Right to erasure"}),': "Right to be forgotten" (delete data)']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Right to portability"}),": Export data in machine-readable format"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Right to rectification"}),": Correct inaccurate data"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"implementation-considerations",children:"Implementation Considerations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data inventory"}),": Know what PII you collect"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consent management"}),": Track and honor user consent"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data retention policies"}),": Auto-delete old data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Breach notification"}),": Report breaches within 72 hours"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Privacy by design"}),": Build privacy into systems from start"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"8-infrastructure--deployment-1",children:"8. Infrastructure & Deployment"}),"\n",(0,i.jsx)(n.h3,{id:"containers--orchestration",children:"Containers & Orchestration"}),"\n",(0,i.jsx)(n.h4,{id:"docker",children:"Docker"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Key Concepts"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Image"}),": Read-only template (base OS + app + dependencies)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Container"}),": Running instance of image"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Dockerfile"}),": Instructions to build image"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Layers"}),": Each instruction creates layer (cached for efficiency)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Consistent environments (dev = prod)"}),"\n",(0,i.jsx)(n.li,{children:"Lightweight (vs VMs)"}),"\n",(0,i.jsx)(n.li,{children:"Fast startup"}),"\n",(0,i.jsx)(n.li,{children:"Isolated processes"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"kubernetes-k8s",children:"Kubernetes (K8s)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Architecture"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Control Plane"}),": Master node(s)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"API Server"}),"\n",(0,i.jsx)(n.li,{children:"Scheduler (assigns pods to nodes)"}),"\n",(0,i.jsx)(n.li,{children:"Controller Manager (maintains desired state)"}),"\n",(0,i.jsx)(n.li,{children:"etcd (distributed config store)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Worker Nodes"}),": Run pods","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"kubelet (agent)"}),"\n",(0,i.jsx)(n.li,{children:"kube-proxy (networking)"}),"\n",(0,i.jsx)(n.li,{children:"Container runtime (Docker, containerd)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Key Resources"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pod"}),": Smallest unit (1+ containers)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Deployment"}),": Manages replica sets, rolling updates"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Service"}),": Stable endpoint for pods (load balancing)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ConfigMap"}),": Configuration data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Secret"}),": Sensitive data (encrypted)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ingress"}),": HTTP(S) routing to services"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Namespace"}),": Virtual clusters for isolation"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Auto-scaling (HPA - Horizontal Pod Autoscaler)"}),"\n",(0,i.jsx)(n.li,{children:"Self-healing (restart failed pods)"}),"\n",(0,i.jsx)(n.li,{children:"Rolling updates, rollbacks"}),"\n",(0,i.jsx)(n.li,{children:"Service discovery"}),"\n",(0,i.jsx)(n.li,{children:"Storage orchestration"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cicd-pipelines",children:"CI/CD Pipelines"}),"\n",(0,i.jsx)(n.h4,{id:"continuous-integration-ci",children:"Continuous Integration (CI)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Goal"}),": Frequently merge code to main branch"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pipeline"}),":","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Code commit triggers build"}),"\n",(0,i.jsx)(n.li,{children:"Run tests (unit, integration)"}),"\n",(0,i.jsx)(n.li,{children:"Static analysis (linting, security scans)"}),"\n",(0,i.jsx)(n.li,{children:"Build artifacts (Docker images)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Benefits"}),": Catch bugs early, reduce merge conflicts"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"continuous-deployment-cd",children:"Continuous Deployment (CD)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Goal"}),": Automatically deploy to production"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pipeline"}),":","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Successful CI build"}),"\n",(0,i.jsx)(n.li,{children:"Deploy to staging"}),"\n",(0,i.jsx)(n.li,{children:"Run E2E tests"}),"\n",(0,i.jsx)(n.li,{children:"Deploy to production (if tests pass)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"deployment-strategies",children:"Deployment Strategies"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Blue-Green Deployment"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Setup"}),": Two identical environments (Blue = current, Green = new)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Process"}),":","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Deploy new version to Green"}),"\n",(0,i.jsx)(n.li,{children:"Test Green"}),"\n",(0,i.jsx)(n.li,{children:"Switch traffic from Blue to Green"}),"\n",(0,i.jsx)(n.li,{children:"Keep Blue for quick rollback"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Zero downtime, instant rollback"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Double resources"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Canary Deployment"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Process"}),":","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Deploy new version to small % of servers (5%)"}),"\n",(0,i.jsx)(n.li,{children:"Monitor errors, performance"}),"\n",(0,i.jsx)(n.li,{children:"Gradually increase % (10%, 25%, 50%, 100%)"}),"\n",(0,i.jsx)(n.li,{children:"Rollback if issues"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Lower risk, real-world testing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Slower rollout, complex routing"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Rolling Deployment"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Process"}),": Update servers one-by-one (or in batches)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": No extra resources"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Mixed versions during rollout, slower rollback"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Feature Flags"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Deploy code with features disabled"}),"\n",(0,i.jsx)(n.li,{children:"Enable features gradually (per user, %)"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Decouple deployment from release, A/B testing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Code complexity, technical debt"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"service-discovery",children:"Service Discovery"}),"\n",(0,i.jsx)(n.h4,{id:"problem",children:"Problem"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Microservices need to find each other"}),"\n",(0,i.jsx)(n.li,{children:"IPs/ports change dynamically (scaling, failures)"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"client-side-discovery",children:"Client-Side Discovery"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Process"}),": Client queries service registry, chooses instance, makes request"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": Netflix Eureka"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Client controls load balancing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Client complexity, tight coupling to registry"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"server-side-discovery",children:"Server-Side Discovery"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Process"}),": Client requests load balancer, load balancer queries registry"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": AWS ELB, Kubernetes Service"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Client simplicity"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Load balancer is potential bottleneck/SPOF"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"service-registry",children:"Service Registry"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),": Consul, etcd, ZooKeeper"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Health checks"}),"\n",(0,i.jsx)(n.li,{children:"Automatic deregistration of failed services"}),"\n",(0,i.jsx)(n.li,{children:"DNS interface"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"kubernetes-service-discovery",children:"Kubernetes Service Discovery"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Built-in via DNS and environment variables"}),"\n",(0,i.jsx)(n.li,{children:"ClusterIP service provides stable virtual IP"}),"\n",(0,i.jsxs)(n.li,{children:["DNS: ",(0,i.jsx)(n.code,{children:"service-name.namespace.svc.cluster.local"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"api-gateway",children:"API Gateway"}),"\n",(0,i.jsx)(n.h4,{id:"purpose",children:"Purpose"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Single entry point for clients"}),"\n",(0,i.jsx)(n.li,{children:"Abstracts backend complexity"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"responsibilities",children:"Responsibilities"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Routing"}),": Direct requests to appropriate microservice"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Authentication/Authorization"}),": Centralized security"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rate limiting"}),": Protect backend services"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Request/Response transformation"}),": Adapt protocols/formats"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Caching"}),": Reduce backend load"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Logging & Monitoring"}),": Centralized observability"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SSL termination"}),": Handle TLS at gateway"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"patterns",children:"Patterns"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Backend for Frontend (BFF)"}),": Separate gateway per client type (web, mobile, IoT)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Kong, AWS API Gateway, Apigee, Zuul"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"microservices-vs-monoliths",children:"Microservices vs Monoliths"}),"\n",(0,i.jsx)(n.h4,{id:"monolith",children:"Monolith"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Simple to develop, test, deploy (initially)"}),"\n",(0,i.jsx)(n.li,{children:"No network latency between components"}),"\n",(0,i.jsx)(n.li,{children:"Easier transactions (single DB)"}),"\n",(0,i.jsx)(n.li,{children:"Simpler debugging"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Scales as one unit (can't scale component independently)"}),"\n",(0,i.jsx)(n.li,{children:"Tech stack lock-in"}),"\n",(0,i.jsx)(n.li,{children:"Deployment risk (entire app redeployed)"}),"\n",(0,i.jsx)(n.li,{children:"Codebase becomes unwieldy"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"microservices",children:"Microservices"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Independent scaling per service"}),"\n",(0,i.jsx)(n.li,{children:"Technology diversity"}),"\n",(0,i.jsx)(n.li,{children:"Fault isolation (one service failure doesn't crash all)"}),"\n",(0,i.jsx)(n.li,{children:"Faster deployments (small, independent)"}),"\n",(0,i.jsx)(n.li,{children:"Team autonomy"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Distributed system complexity (network failures, latency)"}),"\n",(0,i.jsx)(n.li,{children:"Data consistency challenges"}),"\n",(0,i.jsx)(n.li,{children:"Increased operational overhead (monitoring, deployment)"}),"\n",(0,i.jsx)(n.li,{children:"Testing complexity"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"when-to-use",children:"When to Use"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monolith"}),": Startups, simple domains, small teams"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Microservices"}),": Large orgs, complex domains, independent team scaling"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"migration-strategy",children:"Migration Strategy"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Start with monolith"}),"\n",(0,i.jsx)(n.li,{children:"Extract services as domain understanding grows"}),"\n",(0,i.jsx)(n.li,{children:'"Strangler Fig" pattern (gradually replace monolith pieces)'}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"9-special-topics-1",children:"9. Special Topics"}),"\n",(0,i.jsx)(n.h3,{id:"search-systems",children:"Search Systems"}),"\n",(0,i.jsx)(n.h4,{id:"inverted-index-deep-dive",children:"Inverted Index (Deep Dive)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Structure"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'Term \u2192 [Doc1, Doc2, ...]\n\n"hello" \u2192 [doc1, doc3, doc5]\n"world" \u2192 [doc1, doc2]\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"With Positions"})," (for phrase queries):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'"hello" \u2192 {doc1: [0, 15], doc3: [5]}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Search Process"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:'Tokenize query: "hello world" \u2192 ["hello", "world"]'}),"\n",(0,i.jsx)(n.li,{children:"Lookup each term in index"}),"\n",(0,i.jsx)(n.li,{children:"Intersect posting lists: doc1 (appears in both)"}),"\n",(0,i.jsx)(n.li,{children:"Rank results by relevance"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"ranking-algorithms",children:"Ranking Algorithms"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"TF-IDF"})," (Term Frequency-Inverse Document Frequency)"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"TF"}),": How often term appears in document"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"IDF"}),": How rare term is across all documents"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Score"}),": TF \xd7 IDF (common terms in rare documents rank high)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"BM25"})," (Best Match 25)"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Improved TF-IDF with diminishing returns"}),"\n",(0,i.jsx)(n.li,{children:"Considers document length normalization"}),"\n",(0,i.jsx)(n.li,{children:"Industry standard"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"elasticsearch-architecture",children:"Elasticsearch Architecture"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cluster"}),": Multiple nodes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Index"}),": Collection of documents (like database)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Shard"}),": Subset of index data (for horizontal scaling)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Replica"}),": Copy of shard (for availability)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Query Types"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Match query (full-text search)"}),"\n",(0,i.jsx)(n.li,{children:"Term query (exact match)"}),"\n",(0,i.jsx)(n.li,{children:"Range query (dates, numbers)"}),"\n",(0,i.jsx)(n.li,{children:"Bool query (AND, OR, NOT)"}),"\n",(0,i.jsx)(n.li,{children:"Fuzzy query (typo tolerance)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"bloom-filters",children:"Bloom Filters"}),"\n",(0,i.jsx)(n.h4,{id:"problem-1",children:"Problem"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Check if element exists in set"}),"\n",(0,i.jsx)(n.li,{children:"Traditional: Hash table (space inefficient for large sets)"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"bloom-filter",children:"Bloom Filter"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data structure"}),": Bit array + k hash functions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Add"}),": Set bits at k hash positions to 1"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Check"}),": If all k bits are 1, element ",(0,i.jsx)(n.em,{children:"might"})," exist"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"False positives"}),": Possible (bits set by other elements)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"False negatives"}),": Impossible (if bits set, element was definitely added or collision)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"use-cases-2",children:"Use Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database"}),": Check if key exists before expensive disk lookup"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Web"}),": Block malicious URLs (quick check before full validation)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Distributed systems"}),": Reduce unnecessary network calls"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": Google Chrome uses bloom filters for malicious site detection"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"trade-off",children:"Trade-off"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Space efficient (small bit array)"}),"\n",(0,i.jsx)(n.li,{children:"Tunable false positive rate (more bits/hashes = fewer false positives)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"recommendation-systems",children:"Recommendation Systems"}),"\n",(0,i.jsx)(n.h4,{id:"collaborative-filtering",children:"Collaborative Filtering"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"User-based"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Find similar users (based on past behavior)"}),"\n",(0,i.jsx)(n.li,{children:"Recommend items those users liked"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": Users who liked A and B also liked C"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Item-based"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Find similar items (based on user interactions)"}),"\n",(0,i.jsx)(n.li,{children:"Recommend similar items to what user liked"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": People who liked this movie also liked..."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Matrix Factorization"})," (Netflix Prize winner):"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Decompose user-item matrix into latent factors"}),"\n",(0,i.jsx)(n.li,{children:"Predict missing ratings"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"content-based-filtering",children:"Content-Based Filtering"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Recommend based on item attributes"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": User likes sci-fi movies \u2192 recommend other sci-fi"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"hybrid-approaches",children:"Hybrid Approaches"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Combine collaborative + content-based"}),"\n",(0,i.jsx)(n.li,{children:"Cold start problem: Use content-based for new users/items"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"ranking",children:"Ranking"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Factors"}),": Relevance, popularity, diversity, freshness"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ML models"}),": Gradient boosting, neural networks"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"A/B testing"}),": Compare ranking algorithms"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"distributed-transactions",children:"Distributed Transactions"}),"\n",(0,i.jsx)(n.h4,{id:"problem-2",children:"Problem"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Transaction spans multiple databases/services"}),"\n",(0,i.jsx)(n.li,{children:"Need ACID guarantees across systems"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"two-phase-commit-2pc",children:"Two-Phase Commit (2PC)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Phase 1 (Prepare)"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:'Coordinator asks all participants: "Can you commit?"'}),"\n",(0,i.jsx)(n.li,{children:"Participants lock resources, respond yes/no"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Phase 2 (Commit/Abort)"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:'If all said yes: Coordinator sends "commit" to all'}),"\n",(0,i.jsx)(n.li,{children:'If any said no: Coordinator sends "abort" to all'}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Problems"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Blocking"}),": If coordinator crashes, participants locked"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Single point of failure"}),": Coordinator"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance"}),": Synchronous, slow"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"saga-pattern",children:"Saga Pattern"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Concept"}),": Break transaction into local transactions, compensate on failure"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"})," (booking trip):"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Book flight (local tx)"}),"\n",(0,i.jsx)(n.li,{children:"Book hotel (local tx)"}),"\n",(0,i.jsx)(n.li,{children:"Book car (local tx)\nIf step 3 fails \u2192 compensate: cancel hotel, cancel flight"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Types"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Choreography"}),": Services communicate via events (decentralized)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Orchestration"}),": Central coordinator (like 2PC but async)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": No blocking, better availability\n",(0,i.jsx)(n.strong,{children:"Cons"}),": Eventual consistency, complex compensation logic"]}),"\n",(0,i.jsx)(n.h4,{id:"when-to-use-1",children:"When to Use"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"2PC"}),": When strong consistency absolutely required (rare)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Saga"}),": Most distributed systems (accept eventual consistency)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Avoid distributed transactions"}),": Design to avoid need (bounded contexts)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"consensus-algorithms",children:"Consensus Algorithms"}),"\n",(0,i.jsx)(n.h4,{id:"why-needed",children:"Why Needed?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Distributed systems need to agree on values"}),"\n",(0,i.jsx)(n.li,{children:"Leader election, configuration, distributed locks"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"raft-understandable-consensus",children:"Raft (Understandable Consensus)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Roles"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Leader"}),": Handles all client requests"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Follower"}),": Passive, replicate leader's log"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Candidate"}),": Follower becomes candidate during election"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Leader Election"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Leader sends heartbeats"}),"\n",(0,i.jsx)(n.li,{children:"If follower doesn't hear heartbeat (timeout) \u2192 becomes candidate"}),"\n",(0,i.jsx)(n.li,{children:"Candidate requests votes from other nodes"}),"\n",(0,i.jsx)(n.li,{children:"Majority votes \u2192 becomes leader"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Log Replication"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Leader receives command, appends to log"}),"\n",(0,i.jsx)(n.li,{children:"Sends log entry to followers"}),"\n",(0,i.jsx)(n.li,{children:"When majority replicate \u2192 entry committed"}),"\n",(0,i.jsx)(n.li,{children:"Leader notifies followers, applies to state machine"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Guarantees"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Only one leader per term"}),"\n",(0,i.jsx)(n.li,{children:"Logs eventually identical across servers"}),"\n",(0,i.jsx)(n.li,{children:"Committed entries durable"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"paxos",children:"Paxos"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"More complex than Raft (harder to understand/implement)"}),"\n",(0,i.jsx)(n.li,{children:"Three roles: Proposers, Acceptors, Learners"}),"\n",(0,i.jsx)(n.li,{children:"Multi-Paxos optimized for multiple decisions"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Used in"}),": Google Chubby, Spanner"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"practical-usage",children:"Practical Usage"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Don't implement yourself"}),": Use existing (etcd, Consul, ZooKeeper)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use for"}),": Leader election, distributed config, locking"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Not for"}),": Every coordination need (too heavyweight)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"time--ordering-in-distributed-systems",children:"Time & Ordering in Distributed Systems"}),"\n",(0,i.jsx)(n.h4,{id:"problem-3",children:"Problem"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"No global clock in distributed systems"}),"\n",(0,i.jsx)(n.li,{children:"Clock skew (servers have different times)"}),"\n",(0,i.jsx)(n.li,{children:"Need to order events across servers"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"lamport-clocks-logical-time",children:"Lamport Clocks (Logical Time)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Each process maintains counter"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rules"}),":","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Increment counter before each event"}),"\n",(0,i.jsx)(n.li,{children:"Send counter with message"}),"\n",(0,i.jsx)(n.li,{children:"Receiver sets counter = max(local, received) + 1"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Property"}),": If event A happened-before B, then timestamp(A) < timestamp(B)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Limitation"}),": Converse not true (can't determine causality from timestamps alone)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"vector-clocks",children:"Vector Clocks"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Each process maintains vector of counters (one per process)"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": [P1:3, P2:5, P3:2]"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rules"}),":","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Increment own counter on event"}),"\n",(0,i.jsx)(n.li,{children:"Send entire vector with message"}),"\n",(0,i.jsx)(n.li,{children:"Receiver merges vectors (max of each component)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Property"}),": Can determine causality","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A happened-before B: VA < VB (component-wise)"}),"\n",(0,i.jsx)(n.li,{children:"Concurrent events: Neither VA < VB nor VB < VA"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"use-cases-3",children:"Use Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Lamport clocks"}),": Total ordering of events (distributed snapshots)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Vector clocks"}),": Conflict detection (Riak, Dynamo)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Example: Detect concurrent updates to same key"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"true-time-google-spanner",children:"True Time (Google Spanner)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Uses atomic clocks + GPS for global time"}),"\n",(0,i.jsx)(n.li,{children:"Time is interval (t \xb1 \u03b5) accounting for uncertainty"}),"\n",(0,i.jsx)(n.li,{children:"Wait out uncertainty before committing (ensures causality)"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"10-additional-important-topics-1",children:"10. Additional Important Topics"}),"\n",(0,i.jsx)(n.h3,{id:"back-of-the-envelope-calculations",children:"Back-of-the-Envelope Calculations"}),"\n",(0,i.jsx)(n.h4,{id:"common-numbers-latency",children:"Common Numbers (Latency)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L1 cache: 0.5 ns"}),"\n",(0,i.jsx)(n.li,{children:"L2 cache: 7 ns"}),"\n",(0,i.jsx)(n.li,{children:"RAM: 100 ns"}),"\n",(0,i.jsx)(n.li,{children:"SSD read: 150 \u03bcs"}),"\n",(0,i.jsx)(n.li,{children:"HDD seek: 10 ms"}),"\n",(0,i.jsx)(n.li,{children:"Network within datacenter: 0.5 ms"}),"\n",(0,i.jsx)(n.li,{children:"Round trip CA to Netherlands: 150 ms"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"storage-capacity",children:"Storage Capacity"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"1 KB = 1,000 bytes"}),"\n",(0,i.jsx)(n.li,{children:"1 MB = 1,000 KB"}),"\n",(0,i.jsx)(n.li,{children:"1 GB = 1,000 MB"}),"\n",(0,i.jsx)(n.li,{children:"1 TB = 1,000 GB"}),"\n",(0,i.jsx)(n.li,{children:"1 PB = 1,000 TB"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"traffic-estimates",children:"Traffic Estimates"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": 100M DAU, average 10 requests/day","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"QPS = 100M \xd7 10 / 86400 \u2248 11,574 req/s"}),"\n",(0,i.jsx)(n.li,{children:"Peak QPS \u2248 2-3\xd7 average \u2248 30,000 req/s"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"storage-estimates",children:"Storage Estimates"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": 1M tweets/day, 280 chars average, 5 years retention","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"280 bytes \xd7 1M \xd7 365 \xd7 5 \u2248 500 GB"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"polling-vs-push-vs-long-polling",children:"Polling vs Push vs Long Polling"}),"\n",(0,i.jsx)(n.h4,{id:"polling",children:"Polling"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Client periodically requests updates"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Simple, stateless"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Wasted requests (if no updates), delayed updates"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"push-websockets-sse",children:"Push (WebSockets, SSE)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Server pushes updates when available"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": Real-time, efficient"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Complex, stateful connections"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"long-polling-1",children:"Long Polling"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Client requests, server holds until update available (or timeout)"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pros"}),": More real-time than polling, better compatibility than WebSockets"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cons"}),": Still overhead of reconnections"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"database-connection-pooling",children:"Database Connection Pooling"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Problem"}),": Creating DB connections is expensive (TCP handshake, auth)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),": Pool of reusable connections"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Benefits"}),": Faster response, controlled max connections"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Configuration"}),": Min/max pool size, connection timeout, idle timeout"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"partitioning-vs-sharding",children:"Partitioning vs Sharding"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Often used interchangeably"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Partitioning"}),": Splitting data (can be on same server)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Horizontal: Split rows (same schema)"}),"\n",(0,i.jsx)(n.li,{children:"Vertical: Split columns (different tables)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sharding"}),": Horizontal partitioning across multiple servers"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"webhooks",children:"Webhooks"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Concept"}),": Server calls client URL when event occurs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use cases"}),": Payment notifications, GitHub push events"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Considerations"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Retry logic (client might be down)"}),"\n",(0,i.jsx)(n.li,{children:"Idempotency (duplicates possible)"}),"\n",(0,i.jsx)(n.li,{children:"Security (validate sender, HTTPS)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"reverse-hash-lookup-distributed-hash-table",children:"Reverse Hash Lookup (Distributed Hash Table)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use case"}),": P2P systems (BitTorrent, blockchain)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Concept"}),": Hash key maps to node responsible for storing it"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistent hashing"}),": Add/remove nodes with minimal reshuffling"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"interview-preparation-tips",children:"Interview Preparation Tips"}),"\n",(0,i.jsx)(n.h3,{id:"how-to-approach-system-design-interviews",children:"How to Approach System Design Interviews"}),"\n",(0,i.jsx)(n.h4,{id:"1-clarify-requirements-5-min",children:"1. Clarify Requirements (5 min)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Functional"}),": What features? (read/write, search, notifications)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Non-functional"}),": Scale (users, requests/sec), latency, availability"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Constraints"}),": Budget, timeline, existing infrastructure"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"2-back-of-envelope-estimates-5-min",children:"2. Back-of-Envelope Estimates (5 min)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Calculate QPS, storage, bandwidth"}),"\n",(0,i.jsx)(n.li,{children:"Determine scale tier (thousands vs millions vs billions)"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"3-high-level-design-10-15-min",children:"3. High-Level Design (10-15 min)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Draw main components (client, load balancer, servers, databases, cache)"}),"\n",(0,i.jsx)(n.li,{children:"API design (key endpoints, request/response)"}),"\n",(0,i.jsx)(n.li,{children:"Data model (tables, relationships)"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"4-deep-dive-15-20-min",children:"4. Deep Dive (15-20 min)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Interviewer will probe specific areas"}),"\n",(0,i.jsx)(n.li,{children:"Be ready to discuss: scaling, failures, bottlenecks, trade-offs"}),"\n",(0,i.jsx)(n.li,{children:"Common deep dives: Database choice, caching strategy, consistency model"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"5-wrap-up-5-min",children:"5. Wrap Up (5 min)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Monitoring, metrics, alerts"}),"\n",(0,i.jsx)(n.li,{children:"Potential improvements, future scaling"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"common-mistakes-to-avoid",children:"Common Mistakes to Avoid"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Jumping to solution without clarifying requirements"}),"\n",(0,i.jsx)(n.li,{children:"Over-engineering (don't add Kafka if simple queue suffices)"}),"\n",(0,i.jsx)(n.li,{children:"Ignoring trade-offs (every decision has pros/cons)"}),"\n",(0,i.jsx)(n.li,{children:"Not considering failures (what if DB goes down?)"}),"\n",(0,i.jsx)(n.li,{children:"Forgetting about monitoring/observability"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"key-trade-offs-to-discuss",children:"Key Trade-offs to Discuss"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistency vs Availability"})," (CAP theorem)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Latency vs Throughput"})," (batch processing vs real-time)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Normalization vs Denormalization"})," (storage vs query speed)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SQL vs NoSQL"})," (ACID vs scalability)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monolith vs Microservices"})," (simplicity vs scalability)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Synchronous vs Asynchronous"})," (simplicity vs performance)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"practice-questions",children:"Practice Questions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Design Twitter/Instagram"}),"\n",(0,i.jsx)(n.li,{children:"Design URL shortener"}),"\n",(0,i.jsx)(n.li,{children:"Design video streaming (YouTube/Netflix)"}),"\n",(0,i.jsx)(n.li,{children:"Design messaging system (WhatsApp)"}),"\n",(0,i.jsx)(n.li,{children:"Design ride-sharing (Uber)"}),"\n",(0,i.jsx)(n.li,{children:"Design newsfeed"}),"\n",(0,i.jsx)(n.li,{children:"Design web crawler"}),"\n",(0,i.jsx)(n.li,{children:"Design search autocomplete"}),"\n",(0,i.jsx)(n.li,{children:"Design rate limiter"}),"\n",(0,i.jsx)(n.li,{children:"Design distributed cache"}),"\n",(0,i.jsx)(n.li,{children:"Design key-value store"}),"\n",(0,i.jsx)(n.li,{children:"Design notification system"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"quick-reference-1",children:"Quick Reference"}),"\n",(0,i.jsx)(n.h3,{id:"when-to-use-sql-vs-nosql",children:"When to Use SQL vs NoSQL"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Use SQL when"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Need ACID transactions"}),"\n",(0,i.jsx)(n.li,{children:"Complex queries with joins"}),"\n",(0,i.jsx)(n.li,{children:"Structured, relational data"}),"\n",(0,i.jsx)(n.li,{children:"Data integrity critical"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Use NoSQL when"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Massive scale (horizontal scaling)"}),"\n",(0,i.jsx)(n.li,{children:"Flexible schema"}),"\n",(0,i.jsx)(n.li,{children:"High write throughput"}),"\n",(0,i.jsx)(n.li,{children:"Eventual consistency acceptable"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"caching-decision-tree",children:"Caching Decision Tree"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Frequently accessed data? \u2192 Yes \u2192 Cache it"}),"\n",(0,i.jsxs)(n.li,{children:["Read-heavy or write-heavy?","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Read-heavy \u2192 Cache-aside"}),"\n",(0,i.jsx)(n.li,{children:"Write-heavy \u2192 Write-through or write-behind"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Consistency critical?","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Yes \u2192 Write-through"}),"\n",(0,i.jsx)(n.li,{children:"No \u2192 Cache-aside with TTL"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"database-replication-strategy",children:"Database Replication Strategy"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Read-heavy \u2192 Master-slave"}),"\n",(0,i.jsx)(n.li,{children:"Write-heavy + global \u2192 Master-master"}),"\n",(0,i.jsx)(n.li,{children:"Strong consistency \u2192 Master-slave with sync replication"}),"\n",(0,i.jsx)(n.li,{children:"High availability \u2192 Master-master or multi-region"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"message-queue-vs-database",children:"Message Queue vs Database"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Queue when"}),": Async processing, decoupling, load leveling"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Database when"}),": Need to query data, ACID required, persistent storage"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:'This guide covers the essential system design topics for interviews. Remember: there\'s rarely one "correct" answer in system design. Focus on demonstrating your thought process, understanding trade-offs, and designing for the stated requirements.'})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);