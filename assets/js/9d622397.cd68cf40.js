"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[4701],{24417:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>o,frontMatter:()=>d,metadata:()=>c,toc:()=>a});var r=s(74848),i=s(28453);const d={},t="Java Interview Preparation Roadmap",c={id:"Java/Java Interview Road Map",title:"Java Interview Preparation Roadmap",description:"---",source:"@site/docs/Java/Java Interview Road Map.mdx",sourceDirName:"Java",slug:"/Java/Java Interview Road Map",permalink:"/dev.enigma/docs/Java/Java Interview Road Map",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/Java/Java Interview Road Map.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Java Interview Questions Guide",permalink:"/dev.enigma/docs/Java/Java Interview Questions"},next:{title:"Java Language Basics - Execution, Memory & JVM",permalink:"/dev.enigma/docs/Java/Java Language Basics"}},l={},a=[{value:"1. Core Java",id:"1-core-java",level:2},{value:"2. Java 8+ Features",id:"2-java-8-features",level:2},{value:"3. Multithreading &amp; Concurrency",id:"3-multithreading--concurrency",level:2},{value:"4. Advanced Java / JVM",id:"4-advanced-java--jvm",level:2},{value:"5. Design Patterns &amp; Best Practices",id:"5-design-patterns--best-practices",level:2},{value:"6. Spring &amp; Hibernate (if applicable)",id:"6-spring--hibernate-if-applicable",level:2},{value:"7. Common Coding/Design Questions",id:"7-common-codingdesign-questions",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"java-interview-preparation-roadmap",children:"Java Interview Preparation Roadmap"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1-core-java",children:"1. Core Java"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Topic"}),(0,r.jsx)(n.th,{children:"Subtopics"}),(0,r.jsx)(n.th,{children:"Example Questions / Practice"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"OOP Concepts"})}),(0,r.jsx)(n.td,{children:"Inheritance, Polymorphism (compile/runtime), Abstraction, Encapsulation, Interfaces"}),(0,r.jsxs)(n.td,{children:["Explain runtime vs compile-time polymorphism.",(0,r.jsx)("br",{})," Design a shape class hierarchy with method overriding."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Java Basics"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"main"})," method, packages, access modifiers"]}),(0,r.jsxs)(n.td,{children:["- Difference between ",(0,r.jsx)(n.code,{children:"public"}),", ",(0,r.jsx)(n.code,{children:"private"}),", ",(0,r.jsx)(n.code,{children:"protected"}),", default.",(0,r.jsx)("br",{}),"- Explain ",(0,r.jsx)(n.code,{children:"static"})," keyword and its use cases."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Data Types & Variables"})}),(0,r.jsx)(n.td,{children:"Primitive vs Wrapper, autoboxing/unboxing"}),(0,r.jsxs)(n.td,{children:["- Difference between ",(0,r.jsx)(n.code,{children:"int"})," and ",(0,r.jsx)(n.code,{children:"Integer"}),".",(0,r.jsx)("br",{}),"- What happens during autoboxing?"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Strings"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"String"}),", ",(0,r.jsx)(n.code,{children:"StringBuilder"}),", ",(0,r.jsx)(n.code,{children:"StringBuffer"}),", immutability"]}),(0,r.jsxs)(n.td,{children:["- Why ",(0,r.jsx)(n.code,{children:"String"})," is immutable?",(0,r.jsx)("br",{}),"- Compare ",(0,r.jsx)(n.code,{children:"StringBuilder"})," vs ",(0,r.jsx)(n.code,{children:"StringBuffer"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Collections Framework"})}),(0,r.jsx)(n.td,{children:"List, Set, Map, Queue, implementations, differences"}),(0,r.jsxs)(n.td,{children:["- Difference between ",(0,r.jsx)(n.code,{children:"ArrayList"})," and ",(0,r.jsx)(n.code,{children:"LinkedList"}),".",(0,r.jsx)("br",{}),"- Implement LRU cache using ",(0,r.jsx)(n.code,{children:"LinkedHashMap"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Generics"})}),(0,r.jsx)(n.td,{children:"Bounded types, wildcards, type erasure"}),(0,r.jsxs)(n.td,{children:["- Difference between ",(0,r.jsx)(n.code,{children:"? extends T"})," and ",(0,r.jsx)(n.code,{children:"? super T"}),".",(0,r.jsx)("br",{}),"- Why Java uses type erasure?"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Exception Handling"})}),(0,r.jsxs)(n.td,{children:["Checked vs unchecked, ",(0,r.jsx)(n.code,{children:"throw"})," vs ",(0,r.jsx)(n.code,{children:"throws"}),", custom exceptions"]}),(0,r.jsxs)(n.td,{children:["- Write a custom exception.",(0,r.jsx)("br",{}),"- Explain try-with-resources."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Java Memory Model"})}),(0,r.jsx)(n.td,{children:"Stack vs Heap, GC, memory leaks, references"}),(0,r.jsxs)(n.td,{children:["- Explain strong, weak, soft, phantom references.",(0,r.jsx)("br",{}),"- What is a memory leak in Java?"]})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2-java-8-features",children:"2. Java 8+ Features"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Topic"}),(0,r.jsx)(n.th,{children:"Subtopics"}),(0,r.jsx)(n.th,{children:"Example Questions / Practice"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Functional Interfaces"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"Predicate"}),", ",(0,r.jsx)(n.code,{children:"Function"}),", ",(0,r.jsx)(n.code,{children:"Consumer"}),", ",(0,r.jsx)(n.code,{children:"Supplier"})]}),(0,r.jsxs)(n.td,{children:["- Use ",(0,r.jsx)(n.code,{children:"Predicate"})," to filter a list of strings starting with \u201cA\u201d."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Lambdas"})}),(0,r.jsx)(n.td,{children:"Syntax, capturing variables, method references"}),(0,r.jsxs)(n.td,{children:["- Convert an anonymous class into a lambda.",(0,r.jsx)("br",{}),"- Explain ",(0,r.jsx)(n.code,{children:"this"})," reference inside a lambda."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Streams API"})}),(0,r.jsx)(n.td,{children:"Map, filter, reduce, collect, parallel streams"}),(0,r.jsxs)(n.td,{children:["- Count distinct words in a list.",(0,r.jsx)("br",{}),"- Group employees by department using streams."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Optional"})}),(0,r.jsxs)(n.td,{children:["Avoiding NPE, ",(0,r.jsx)(n.code,{children:"ifPresent"}),", ",(0,r.jsx)(n.code,{children:"orElse"})]}),(0,r.jsx)(n.td,{children:"- How to avoid NullPointerException with Optional?"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Date/Time API"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"LocalDate"}),", ",(0,r.jsx)(n.code,{children:"LocalTime"}),", ",(0,r.jsx)(n.code,{children:"LocalDateTime"}),", formatting"]}),(0,r.jsxs)(n.td,{children:["- Calculate days between two dates using ",(0,r.jsx)(n.code,{children:"java.time"}),"."]})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3-multithreading--concurrency",children:"3. Multithreading & Concurrency"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Topic"}),(0,r.jsx)(n.th,{children:"Subtopics"}),(0,r.jsx)(n.th,{children:"Example Questions / Practice"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Threads"})}),(0,r.jsx)(n.td,{children:"Thread vs Runnable vs Callable, Future"}),(0,r.jsxs)(n.td,{children:["- Implement a multi-threaded task using ",(0,r.jsx)(n.code,{children:"Callable"})," and ",(0,r.jsx)(n.code,{children:"Future"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Synchronization"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"synchronized"}),", Locks, Deadlock"]}),(0,r.jsx)(n.td,{children:"- Write a deadlock example and solve it."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Executor Framework"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"ExecutorService"}),", ",(0,r.jsx)(n.code,{children:"ScheduledExecutorService"})]}),(0,r.jsx)(n.td,{children:"- Schedule a task to run every 5 seconds."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Concurrent Collections"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"ConcurrentHashMap"}),", ",(0,r.jsx)(n.code,{children:"CopyOnWriteArrayList"})]}),(0,r.jsxs)(n.td,{children:["- Difference between ",(0,r.jsx)(n.code,{children:"HashMap"})," and ",(0,r.jsx)(n.code,{children:"ConcurrentHashMap"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Java Memory Visibility"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"volatile"}),", ",(0,r.jsx)(n.code,{children:"happens-before"})]}),(0,r.jsxs)(n.td,{children:["- Explain ",(0,r.jsx)(n.code,{children:"volatile"})," with an example."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"ForkJoinPool"})}),(0,r.jsx)(n.td,{children:"Divide & conquer parallelism"}),(0,r.jsx)(n.td,{children:"- Implement parallel sum of an integer array."})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"4-advanced-java--jvm",children:"4. Advanced Java / JVM"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Topic"}),(0,r.jsx)(n.th,{children:"Subtopics"}),(0,r.jsx)(n.th,{children:"Example Questions / Practice"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"JVM Internals"})}),(0,r.jsx)(n.td,{children:"Class loading, bytecode, JIT"}),(0,r.jsxs)(n.td,{children:["- Explain JVM memory areas.",(0,r.jsx)("br",{}),"- What is classloader hierarchy?"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Garbage Collection"})}),(0,r.jsx)(n.td,{children:"Serial, Parallel, CMS, G1"}),(0,r.jsxs)(n.td,{children:["- How does G1 GC work?",(0,r.jsx)("br",{}),"- Explain memory leak examples."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Annotations & Reflection"})}),(0,r.jsx)(n.td,{children:"Custom annotations, reflection API"}),(0,r.jsx)(n.td,{children:"- Create a custom annotation and process it using reflection."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Serialization"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"Serializable"}),", ",(0,r.jsx)(n.code,{children:"Externalizable"}),", transient"]}),(0,r.jsx)(n.td,{children:"- Explain difference between Serializable and Externalizable."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Java Modules"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"module-info.java"}),", exports, requires"]}),(0,r.jsx)(n.td,{children:"- Explain module system in Java 9+."})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"5-design-patterns--best-practices",children:"5. Design Patterns & Best Practices"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Topic"}),(0,r.jsx)(n.th,{children:"Subtopics"}),(0,r.jsx)(n.th,{children:"Example Questions / Practice"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Design Patterns"})}),(0,r.jsx)(n.td,{children:"Singleton, Factory, Builder, Observer, Strategy"}),(0,r.jsxs)(n.td,{children:["- Implement a thread-safe singleton.",(0,r.jsx)("br",{}),"- Use Builder pattern to create an object."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"SOLID Principles"})}),(0,r.jsx)(n.td,{children:"SRP, OCP, LSP, ISP, DIP"}),(0,r.jsx)(n.td,{children:"- Refactor a class violating SRP."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Effective Java Practices"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"equals()"}),"/",(0,r.jsx)(n.code,{children:"hashCode()"}),", immutability"]}),(0,r.jsxs)(n.td,{children:["- Implement proper ",(0,r.jsx)(n.code,{children:"equals()"})," and ",(0,r.jsx)(n.code,{children:"hashCode()"}),".",(0,r.jsx)("br",{}),"- Make a class immutable."]})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"6-spring--hibernate-if-applicable",children:"6. Spring & Hibernate (if applicable)"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Topic"}),(0,r.jsx)(n.th,{children:"Subtopics"}),(0,r.jsx)(n.th,{children:"Example Questions / Practice"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Spring Core"})}),(0,r.jsx)(n.td,{children:"IoC, DI, Bean lifecycle"}),(0,r.jsx)(n.td,{children:"- Explain constructor vs setter injection."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Spring Boot"})}),(0,r.jsx)(n.td,{children:"Auto-configuration, profiles, starters"}),(0,r.jsx)(n.td,{children:"- How does Spring Boot simplify app setup?"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Spring MVC"})}),(0,r.jsx)(n.td,{children:"Controllers, REST API"}),(0,r.jsx)(n.td,{children:"- Write a REST API to get employee details."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Spring Security"})}),(0,r.jsx)(n.td,{children:"Authentication, JWT, OAuth2"}),(0,r.jsx)(n.td,{children:"- Implement basic JWT authentication."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"JPA & Hibernate"})}),(0,r.jsx)(n.td,{children:"Entity lifecycle, caching, relationships"}),(0,r.jsxs)(n.td,{children:["- Map a ",(0,r.jsx)(n.code,{children:"OneToMany"})," and ",(0,r.jsx)(n.code,{children:"ManyToOne"})," relationship.",(0,r.jsx)("br",{}),"- Difference between lazy vs eager fetch."]})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"7-common-codingdesign-questions",children:"7. Common Coding/Design Questions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Implement ",(0,r.jsx)(n.strong,{children:"LRU Cache"})," using ",(0,r.jsx)(n.code,{children:"LinkedHashMap"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Producer-Consumer problem"})," with threads."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Deadlock demonstration"})," and resolution."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Custom comparator"})," for sorting."]}),"\n",(0,r.jsx)(n.li,{children:"Stream-based grouping/filtering/counting problems."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Thread-safe singleton"})," & object pool implementation."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,r.jsx)(n.strong,{children:"Preparation Tips:"})]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Start with ",(0,r.jsx)(n.strong,{children:"Core Java"})," \u2192 practice ",(0,r.jsx)(n.strong,{children:"coding + conceptual questions"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Move to ",(0,r.jsx)(n.strong,{children:"Java 8 features + Collections + OOP"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Dive into ",(0,r.jsx)(n.strong,{children:"Multithreading + Concurrency"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Cover ",(0,r.jsx)(n.strong,{children:"JVM internals + Garbage Collection + Serialization"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Finally, ",(0,r.jsx)(n.strong,{children:"Spring/Hibernate + Design Patterns + Advanced coding"}),"."]}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var r=s(96540);const i={},d=r.createContext(i);function t(e){const n=r.useContext(d);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);