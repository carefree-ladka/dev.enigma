"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2625],{20099:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>o,frontMatter:()=>t,metadata:()=>l,toc:()=>h});var i=r(74848),s=r(28453);const t={},d="Caching Strategies for System Design",l={id:"Backend System Design/Caching Strategies",title:"Caching Strategies for System Design",description:"Overview Comparison",source:"@site/docs/Backend System Design/Caching Strategies.mdx",sourceDirName:"Backend System Design",slug:"/Backend System Design/Caching Strategies",permalink:"/dev.enigma/docs/Backend System Design/Caching Strategies",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/Backend System Design/Caching Strategies.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Caching Patterns in System Design",permalink:"/dev.enigma/docs/Backend System Design/Cache Patterns"},next:{title:"Complete System Design Study Guide",permalink:"/dev.enigma/docs/Backend System Design/Complete System Design Study Guide"}},c={},h=[{value:"Overview Comparison",id:"overview-comparison",level:2},{value:"1. Write-through Caching",id:"1-write-through-caching",level:2},{value:"Definition",id:"definition",level:3},{value:"How It Works",id:"how-it-works",level:3},{value:"Pros",id:"pros",level:3},{value:"Cons",id:"cons",level:3},{value:"When to Use",id:"when-to-use",level:3},{value:"Real-World Example: E-Commerce Inventory",id:"real-world-example-e-commerce-inventory",level:3},{value:"2. Write-back (Write-behind) Caching",id:"2-write-back-write-behind-caching",level:2},{value:"Definition",id:"definition-1",level:3},{value:"How It Works",id:"how-it-works-1",level:3},{value:"Pros",id:"pros-1",level:3},{value:"Cons",id:"cons-1",level:3},{value:"When to Use",id:"when-to-use-1",level:3},{value:"Real-World Example: Product View Counter",id:"real-world-example-product-view-counter",level:3},{value:"3. Write-around Caching",id:"3-write-around-caching",level:2},{value:"Definition",id:"definition-2",level:3},{value:"How It Works",id:"how-it-works-2",level:3},{value:"Pros",id:"pros-2",level:3},{value:"Cons",id:"cons-2",level:3},{value:"When to Use",id:"when-to-use-2",level:3},{value:"Real-World Example: Product Reviews",id:"real-world-example-product-reviews",level:3},{value:"Decision Matrix",id:"decision-matrix",level:2},{value:"E-Commerce System: Hybrid Approach",id:"e-commerce-system-hybrid-approach",level:2},{value:"Interview Talking Points",id:"interview-talking-points",level:2},{value:"Quick Rule of Thumb",id:"quick-rule-of-thumb",level:3},{value:"Strong Answer Template",id:"strong-answer-template",level:3},{value:"Key Tradeoffs Summary",id:"key-tradeoffs-summary",level:2},{value:"Additional Considerations",id:"additional-considerations",level:2},{value:"Failure Scenarios",id:"failure-scenarios",level:3},{value:"Scalability",id:"scalability",level:3}];function a(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"caching-strategies-for-system-design",children:"Caching Strategies for System Design"})}),"\n",(0,i.jsx)(n.h2,{id:"overview-comparison",children:"Overview Comparison"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Pattern"}),(0,i.jsx)(n.th,{children:"Writes Go To"}),(0,i.jsx)(n.th,{children:"DB Consistency"}),(0,i.jsx)(n.th,{children:"Read Freshness"}),(0,i.jsx)(n.th,{children:"Write Latency"}),(0,i.jsx)(n.th,{children:"Data Loss Risk"}),(0,i.jsx)(n.th,{children:"Best For"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Write-through"})}),(0,i.jsx)(n.td,{children:"Cache \u2192 DB (sync)"}),(0,i.jsx)(n.td,{children:"Strong"}),(0,i.jsx)(n.td,{children:"Always fresh"}),(0,i.jsx)(n.td,{children:"Higher"}),(0,i.jsx)(n.td,{children:"Low"}),(0,i.jsx)(n.td,{children:"Banking, orders, inventory"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Write-back"})}),(0,i.jsx)(n.td,{children:"Cache \u2192 DB (async)"}),(0,i.jsx)(n.td,{children:"Eventual"}),(0,i.jsx)(n.td,{children:"Fresh (cache), Stale (DB)"}),(0,i.jsx)(n.td,{children:"Low"}),(0,i.jsx)(n.td,{children:"High (cache crash)"}),(0,i.jsx)(n.td,{children:"Social media likes, analytics"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Write-around"})}),(0,i.jsx)(n.td,{children:"DB only (cache on read)"}),(0,i.jsx)(n.td,{children:"Strong"}),(0,i.jsx)(n.td,{children:"May be stale"}),(0,i.jsx)(n.td,{children:"Normal"}),(0,i.jsx)(n.td,{children:"Low"}),(0,i.jsx)(n.td,{children:"IoT logs, cold data"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"1-write-through-caching",children:"1. Write-through Caching"}),"\n",(0,i.jsx)(n.h3,{id:"definition",children:"Definition"}),"\n",(0,i.jsxs)(n.p,{children:["Every write operation first goes to the cache, then ",(0,i.jsx)(n.strong,{children:"synchronously"})," writes to the database. Cache and DB are always in sync."]}),"\n",(0,i.jsx)(n.h3,{id:"how-it-works",children:"How It Works"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"User Request \u2192 Update Cache \u2192 Update DB (sync) \u2192 Response\n"})}),"\n",(0,i.jsx)(n.h3,{id:"pros",children:"Pros"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 Strong consistency between cache and DB"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 No data loss risk on cache eviction/crash"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Reads are always fresh"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Simplified failure recovery"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cons",children:"Cons"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u274c Higher write latency (extra step to DB)"}),"\n",(0,i.jsx)(n.li,{children:"\u274c Increased DB load (every write propagates immediately)"}),"\n",(0,i.jsx)(n.li,{children:"\u274c Wasted writes for rarely-read data"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-use",children:"When to Use"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Systems requiring ",(0,i.jsx)(n.strong,{children:"strong consistency"})]}),"\n",(0,i.jsx)(n.li,{children:"Financial transactions"}),"\n",(0,i.jsx)(n.li,{children:"Inventory management"}),"\n",(0,i.jsx)(n.li,{children:"Booking systems (flights, hotels, tickets)"}),"\n",(0,i.jsx)(n.li,{children:"E-commerce checkout"}),"\n",(0,i.jsx)(n.li,{children:"Shopping cart synchronization"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"real-world-example-e-commerce-inventory",children:"Real-World Example: E-Commerce Inventory"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"User buys product\n  \u2193\nUpdate cache (quantity: 100 \u2192 99)\n  \u2193\nUpdate DB synchronously\n  \u2193\nReturn success to user\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"2-write-back-write-behind-caching",children:"2. Write-back (Write-behind) Caching"}),"\n",(0,i.jsx)(n.h3,{id:"definition-1",children:"Definition"}),"\n",(0,i.jsxs)(n.p,{children:["Writes go to the cache ",(0,i.jsx)(n.strong,{children:"only"}),". The cache asynchronously flushes data to the DB later (batched or scheduled)."]}),"\n",(0,i.jsx)(n.h3,{id:"how-it-works-1",children:"How It Works"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"User Request \u2192 Update Cache \u2192 Response (fast)\n                      \u2193\n              Async batch write to DB (later)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"pros-1",children:"Pros"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 Low write latency (fast response)"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Can batch updates \u2192 fewer DB writes"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Better throughput for high-write workloads"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Reduced DB load"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cons-1",children:"Cons"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u274c Risk of data loss if cache crashes before flush"}),"\n",(0,i.jsx)(n.li,{children:"\u274c DB may be eventually consistent"}),"\n",(0,i.jsx)(n.li,{children:"\u274c Harder failure recovery"}),"\n",(0,i.jsx)(n.li,{children:"\u274c Reads from DB can be stale"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-use-1",children:"When to Use"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Systems where ",(0,i.jsx)(n.strong,{children:"performance > strict consistency"})]}),"\n",(0,i.jsx)(n.li,{children:"Analytics and metrics"}),"\n",(0,i.jsx)(n.li,{children:"Logging systems"}),"\n",(0,i.jsx)(n.li,{children:"Recommendation engines"}),"\n",(0,i.jsx)(n.li,{children:"Social media counters (likes, views, shares)"}),"\n",(0,i.jsx)(n.li,{children:"High write volume with tolerable persistence lag"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"real-world-example-product-view-counter",children:"Real-World Example: Product View Counter"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"User views product\n  \u2193\nIncrement counter in cache (fast)\n  \u2193\nReturn response immediately\n  \u2193\nFlush to DB every 5 minutes (batched)\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"3-write-around-caching",children:"3. Write-around Caching"}),"\n",(0,i.jsx)(n.h3,{id:"definition-2",children:"Definition"}),"\n",(0,i.jsxs)(n.p,{children:["Writes go ",(0,i.jsx)(n.strong,{children:"directly to the DB"}),", bypassing the cache. Cache is populated only when data is read later (lazy loading)."]}),"\n",(0,i.jsx)(n.h3,{id:"how-it-works-2",children:"How It Works"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Write: User Request \u2192 Update DB only \u2192 Response\nRead:  User Request \u2192 Check Cache \u2192 Miss \u2192 Read DB \u2192 Populate Cache\n"})}),"\n",(0,i.jsx)(n.h3,{id:"pros-2",children:"Pros"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 Reduces cache pollution"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Cache stores only frequently read data"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Good when writes are rarely followed by reads"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Efficient cache utilization"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cons-2",children:"Cons"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u274c First read after write = cache miss \u2192 higher latency"}),"\n",(0,i.jsx)(n.li,{children:"\u274c Cache may remain stale until next read"}),"\n",(0,i.jsx)(n.li,{children:"\u274c Higher DB read load initially"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-use-2",children:"When to Use"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Write-heavy data that's ",(0,i.jsx)(n.strong,{children:"rarely read"})]}),"\n",(0,i.jsx)(n.li,{children:"Large datasets where caching everything isn't practical"}),"\n",(0,i.jsx)(n.li,{children:"IoT sensor data / telemetry"}),"\n",(0,i.jsx)(n.li,{children:"Historical logs and archives"}),"\n",(0,i.jsx)(n.li,{children:"Cold storage scenarios"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"real-world-example-product-reviews",children:"Real-World Example: Product Reviews"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"User submits review\n  \u2193\nWrite directly to DB\n  \u2193\nCache not updated\n  \u2193\nWhen someone reads reviews \u2192 Cache miss \u2192 Load from DB \u2192 Cache it\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"decision-matrix",children:"Decision Matrix"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Requirement"}),(0,i.jsx)(n.th,{children:"Recommended Pattern"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Strong consistency needed"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Write-through"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"High write performance needed"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Write-back"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Avoid cache pollution"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Write-around"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Financial transactions"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Write-through"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Analytics/metrics"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Write-back"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Cold/historical data"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Write-around"})})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"e-commerce-system-hybrid-approach",children:"E-Commerce System: Hybrid Approach"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Component"}),(0,i.jsx)(n.th,{children:"Strategy"}),(0,i.jsx)(n.th,{children:"Reason"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Product Inventory"})}),(0,i.jsx)(n.td,{children:"Write-through"}),(0,i.jsx)(n.td,{children:"Strong consistency required"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Order Status"})}),(0,i.jsx)(n.td,{children:"Write-through"}),(0,i.jsx)(n.td,{children:"Critical transactional data"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Shopping Cart"})}),(0,i.jsx)(n.td,{children:"Write-through"}),(0,i.jsx)(n.td,{children:"Multi-device consistency"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Product Views"})}),(0,i.jsx)(n.td,{children:"Write-back"}),(0,i.jsx)(n.td,{children:"High volume, eventual consistency OK"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"User Activity Logs"})}),(0,i.jsx)(n.td,{children:"Write-back"}),(0,i.jsx)(n.td,{children:"Performance over consistency"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Recommendation Data"})}),(0,i.jsx)(n.td,{children:"Write-back"}),(0,i.jsx)(n.td,{children:"Can tolerate lag"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Old Reviews"})}),(0,i.jsx)(n.td,{children:"Write-around"}),(0,i.jsx)(n.td,{children:"Rarely accessed"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Archived Orders"})}),(0,i.jsx)(n.td,{children:"Write-around"}),(0,i.jsx)(n.td,{children:"Cold data"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Historical Sales"})}),(0,i.jsx)(n.td,{children:"Write-around"}),(0,i.jsx)(n.td,{children:"Low read frequency"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"interview-talking-points",children:"Interview Talking Points"}),"\n",(0,i.jsx)(n.h3,{id:"quick-rule-of-thumb",children:"Quick Rule of Thumb"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Write-through"})," \u2192 Consistency matters most"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Write-back"})," \u2192 Performance matters most"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Write-around"})," \u2192 Avoid cache pollution"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"strong-answer-template",children:"Strong Answer Template"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\"I'd use ",(0,i.jsx)(n.strong,{children:"write-through"})," for critical transactional data like orders and payments where consistency is paramount. For high-throughput non-critical updates like view counts and metrics, I'd use ",(0,i.jsx)(n.strong,{children:"write-back"})," to optimize performance. Finally, ",(0,i.jsx)(n.strong,{children:"write-around"})," would handle data that's written frequently but rarely read, such as logs or cold storage. Often, a ",(0,i.jsx)(n.strong,{children:"hybrid strategy"}),' is employed based on access patterns and consistency requirements."']}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"key-tradeoffs-summary",children:"Key Tradeoffs Summary"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Criteria"}),(0,i.jsx)(n.th,{children:"Write-through"}),(0,i.jsx)(n.th,{children:"Write-back"}),(0,i.jsx)(n.th,{children:"Write-around"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Consistency"})}),(0,i.jsx)(n.td,{children:"Strong"}),(0,i.jsx)(n.td,{children:"Eventual"}),(0,i.jsx)(n.td,{children:"Strong"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Write Speed"})}),(0,i.jsx)(n.td,{children:"Slower"}),(0,i.jsx)(n.td,{children:"Faster"}),(0,i.jsx)(n.td,{children:"Normal"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Read Speed"})}),(0,i.jsx)(n.td,{children:"Fast"}),(0,i.jsx)(n.td,{children:"Fast"}),(0,i.jsx)(n.td,{children:"Slow (first read)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Cache Freshness"})}),(0,i.jsx)(n.td,{children:"Always"}),(0,i.jsx)(n.td,{children:"Always"}),(0,i.jsx)(n.td,{children:"On-demand"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Data Loss Risk"})}),(0,i.jsx)(n.td,{children:"Low"}),(0,i.jsx)(n.td,{children:"High"}),(0,i.jsx)(n.td,{children:"Low"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"DB Load"})}),(0,i.jsx)(n.td,{children:"High"}),(0,i.jsx)(n.td,{children:"Low"}),(0,i.jsx)(n.td,{children:"Medium"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Complexity"})}),(0,i.jsx)(n.td,{children:"Low"}),(0,i.jsx)(n.td,{children:"High"}),(0,i.jsx)(n.td,{children:"Low"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"additional-considerations",children:"Additional Considerations"}),"\n",(0,i.jsx)(n.h3,{id:"failure-scenarios",children:"Failure Scenarios"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Write-through"}),": If cache fails, writes still reach DB (durable)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Write-back"}),": If cache fails before flush, data is lost (requires backup strategies)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Write-around"}),": If DB fails, writes fail (but no cache inconsistency)"]}),"\n",(0,i.jsx)(n.h3,{id:"scalability",children:"Scalability"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Write-through"}),": DB becomes bottleneck under high write load"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Write-back"}),": Scales well for writes, requires robust async processing"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Write-around"}),": Scales based on read patterns, cache stays lean"]})]})}function o(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>l});var i=r(96540);const s={},t=i.createContext(s);function d(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);