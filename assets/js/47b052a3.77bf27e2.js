"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9603],{3715:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>o});var r=i(4848),l=i(8453);const s={},a="Web Accessibility (a11y) Guide",t={id:"WebDev/Machine Coding Round/Accessibility",title:"Web Accessibility (a11y) Guide",description:"Web Accessibility (a11y) ensures that websites are usable by people of all abilities and disabilities. It involves best practices, semantic HTML, ARIA roles, attributes, and tools to provide an inclusive user experience.",source:"@site/docs/WebDev/Machine Coding Round/Accessibility.mdx",sourceDirName:"WebDev/Machine Coding Round",slug:"/WebDev/Machine Coding Round/Accessibility",permalink:"/js.enigma/docs/WebDev/Machine Coding Round/Accessibility",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/WebDev/Machine Coding Round/Accessibility.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Webpack 5",permalink:"/js.enigma/docs/WebDev/JavaScript/Webpack"},next:{title:"Machine Coding Round",permalink:"/js.enigma/docs/WebDev/Machine Coding Round/MachineCodingRounds"}},c={},o=[{value:"Why Accessibility Matters",id:"why-accessibility-matters",level:2},{value:"Web Content Accessibility Guidelines (WCAG)",id:"web-content-accessibility-guidelines-wcag",level:2},{value:"ARIA (Accessible Rich Internet Applications)",id:"aria-accessible-rich-internet-applications",level:2},{value:"ARIA Roles",id:"aria-roles",level:3},{value:"ARIA States &amp; Properties",id:"aria-states--properties",level:3},{value:"ARIA Attributes",id:"aria-attributes",level:3},{value:"Common Accessibility Practices",id:"common-accessibility-practices",level:2},{value:"Semantic HTML",id:"semantic-html",level:3},{value:"Skip Links",id:"skip-links",level:3},{value:"Focus Management",id:"focus-management",level:3},{value:"Accessible Widgets",id:"accessible-widgets",level:2},{value:"Accessible Typeahead (Autocomplete)",id:"accessible-typeahead-autocomplete",level:3},{value:"Accessible Accordion",id:"accessible-accordion",level:3},{value:"Accessible Tooltip",id:"accessible-tooltip",level:3},{value:"Accessible Combobox",id:"accessible-combobox",level:3},{value:"Accessible Dropdown",id:"accessible-dropdown",level:3},{value:"Accessible Pagination",id:"accessible-pagination",level:3},{value:"Accessibility Testing Tools",id:"accessibility-testing-tools",level:2},{value:"Alert/Notification Pattern",id:"alertnotification-pattern",level:2},{value:"Modal Dialog",id:"modal-dialog",level:2},{value:"Tabs",id:"tabs",level:2},{value:"Switch/Toggle",id:"switchtoggle",level:2},{value:"Dropdown/Combobox",id:"dropdowncombobox",level:2},{value:"Menu Button",id:"menu-button",level:2},{value:"Accordion",id:"accordion",level:2},{value:"Key Principles",id:"key-principles",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"web-accessibility-a11y-guide",children:"Web Accessibility (a11y) Guide"})}),"\n",(0,r.jsx)(n.p,{children:"Web Accessibility (a11y) ensures that websites are usable by people of all abilities and disabilities. It involves best practices, semantic HTML, ARIA roles, attributes, and tools to provide an inclusive user experience."}),"\n",(0,r.jsx)(n.h2,{id:"why-accessibility-matters",children:"Why Accessibility Matters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Legal Compliance"}),": WCAG, ADA, Section 508."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Better UX"}),": Improves usability for all users."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SEO Benefits"}),": Search engines prioritize accessible content."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Inclusivity"}),": Everyone, including people with disabilities, can use the web effectively."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"web-content-accessibility-guidelines-wcag",children:"Web Content Accessibility Guidelines (WCAG)"}),"\n",(0,r.jsx)(n.p,{children:"WCAG defines four principles:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Perceivable"}),": Users must be able to perceive the content."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Operable"}),": Navigation must be possible via keyboard and assistive devices."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Understandable"}),": Content should be clear and predictable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Robust"}),": Compatible with various assistive technologies."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"aria-accessible-rich-internet-applications",children:"ARIA (Accessible Rich Internet Applications)"}),"\n",(0,r.jsx)(n.p,{children:"ARIA improves accessibility for dynamic content and advanced user interface controls."}),"\n",(0,r.jsx)(n.h3,{id:"aria-roles",children:"ARIA Roles"}),"\n",(0,r.jsx)(n.p,{children:"Roles provide meaning to elements:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'role="button"'})," \u2013 Identifies an element as a button."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'role="alert"'})," \u2013 Alerts users to important messages."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'role="dialog"'})," \u2013 Defines a modal dialog."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'role="navigation"'})," \u2013 Denotes a navigation region."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'role="tooltip"'})," \u2013 Provides extra information."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'role="combobox"'})," \u2013 Used for autocomplete inputs."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"aria-states--properties",children:"ARIA States & Properties"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'aria-expanded="true"'})," \u2013 Indicates if an element is expanded."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'aria-hidden="true"'})," \u2013 Hides an element from screen readers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'aria-live="polite"'})," \u2013 Announces dynamic changes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'aria-describedby="id"'})," \u2013 Associates description text."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'aria-label="label"'})," \u2013 Provides an accessible label."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"aria-attributes",children:"ARIA Attributes"}),"\n",(0,r.jsx)(n.p,{children:"ARIA attributes enhance accessibility by providing additional context:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'aria-labelledby="id"'})," \u2013 Associates an element with a label."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'aria-checked="true"'})," \u2013 Indicates a checked state in checkboxes and radio buttons."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'aria-disabled="true"'})," \u2013 Marks an element as disabled."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'aria-required="true"'})," \u2013 Denotes a required field."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'aria-selected="true"'})," \u2013 Highlights selected elements in a list or grid."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'aria-invalid="true"'})," \u2013 Indicates invalid input fields."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'aria-pressed="true"'})," \u2013 Represents a toggle button's state."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'aria-busy="true"'})," \u2013 Signals that an element is loading or processing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'aria-multiselectable="true"'})," \u2013 Allows multiple selections in listboxes."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-accessibility-practices",children:"Common Accessibility Practices"}),"\n",(0,r.jsx)(n.h3,{id:"semantic-html",children:"Semantic HTML"}),"\n",(0,r.jsx)(n.p,{children:"Use elements appropriately:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<button>Submit</button> \x3c!-- Correct --\x3e\r\n<div onclick="submit()">Submit</div> \x3c!-- Incorrect --\x3e\n'})}),"\n",(0,r.jsx)(n.h3,{id:"skip-links",children:"Skip Links"}),"\n",(0,r.jsx)(n.p,{children:"Provide a way to skip to content:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<a href="#main-content" class="skip-link">Skip to main content</a>\r\n<main id="main-content">Content here...</main>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"focus-management",children:"Focus Management"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'const button = document.querySelector("#open-dialog");\r\nbutton.addEventListener("click", () => {\r\n  document.querySelector("#dialog").focus();\r\n});\n'})}),"\n",(0,r.jsx)(n.h2,{id:"accessible-widgets",children:"Accessible Widgets"}),"\n",(0,r.jsx)(n.h3,{id:"accessible-typeahead-autocomplete",children:"Accessible Typeahead (Autocomplete)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'<input type="text" role="combobox" aria-expanded="false" aria-autocomplete="list">\r\n<ul role="listbox">\r\n  <li role="option">Option 1</li>\r\n</ul>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"accessible-accordion",children:"Accessible Accordion"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<button aria-expanded="false" aria-controls="panel1" id="accordion1">Toggle</button>\r\n<div id="panel1" role="region" aria-labelledby="accordion1" hidden>\r\n  Panel Content\r\n</div>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"accessible-tooltip",children:"Accessible Tooltip"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<button aria-describedby="tooltip1">Hover me</button>\r\n<div id="tooltip1" role="tooltip" hidden>Tooltip content</div>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"accessible-combobox",children:"Accessible Combobox"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<input type="text" role="combobox" aria-controls="listbox1" aria-expanded="false">\r\n<ul id="listbox1" role="listbox" hidden>\r\n  <li role="option">Item 1</li>\r\n</ul>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"accessible-dropdown",children:"Accessible Dropdown"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<button aria-haspopup="true" aria-expanded="false" id="menu-button">Menu</button>\r\n<ul role="menu" hidden>\r\n  <li role="menuitem">Option 1</li>\r\n</ul>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"accessible-pagination",children:"Accessible Pagination"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<nav aria-label="Pagination">\r\n  <ul>\r\n    <li><a href="#" aria-label="Previous Page">Prev</a></li>\r\n    <li><a href="#">1</a></li>\r\n    <li><a href="#">2</a></li>\r\n    <li><a href="#" aria-label="Next Page">Next</a></li>\r\n  </ul>\r\n</nav>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"accessibility-testing-tools",children:"Accessibility Testing Tools"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lighthouse"}),": Google Chrome DevTools."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"axe DevTools"}),": Browser extension for testing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NVDA, JAWS"}),": Screen readers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"WAVE"}),": Web accessibility evaluation tool."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"tota11y"}),": Accessibility visualization."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"alertnotification-pattern",children:"Alert/Notification Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'\x3c!-- Live Region for Dynamic Content --\x3e\r\n<div \r\n  role="alert" \r\n  aria-live="assertive" \r\n  aria-atomic="true"\r\n>\r\n  Error: Failed to save changes\r\n</div>\r\n\r\n\x3c!-- Status Message (Less Urgent) --\x3e\r\n<div \r\n  role="status" \r\n  aria-live="polite" \r\n  aria-atomic="true"\r\n>\r\n  Changes saved successfully\r\n</div>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"modal-dialog",children:"Modal Dialog"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<div \r\n  role="dialog" \r\n  aria-labelledby="dialog-title" \r\n  aria-modal="true"\r\n  aria-describedby="dialog-desc"\r\n>\r\n  <h2 id="dialog-title">Confirm Action</h2>\r\n  <p id="dialog-desc">Are you sure you want to proceed?</p>\r\n  \r\n  \x3c!-- Focus trap needed in JS --\x3e\r\n  <button autofocus>Confirm</button>\r\n  <button>Cancel</button>\r\n</div>\r\n\r\n<script>\r\n// Key handling\r\ndocument.addEventListener(\'keydown\', (e) => {\r\n  if (e.key === \'Escape\') closeDialog();\r\n  if (e.key === \'Tab\') manageFocusTrap(e);\r\n});\r\n<\/script>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"tabs",children:"Tabs"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<div class="tabs">\r\n  <div role="tablist" aria-label="Programming Options">\r\n    <button \r\n      role="tab" \r\n      aria-selected="true" \r\n      aria-controls="panel-1" \r\n      id="tab-1"\r\n      tabindex="0"\r\n    >\r\n      First Tab\r\n    </button>\r\n    <button \r\n      role="tab" \r\n      aria-selected="false" \r\n      aria-controls="panel-2" \r\n      id="tab-2"\r\n      tabindex="-1"\r\n    >\r\n      Second Tab\r\n    </button>\r\n  </div>\r\n\r\n  <div \r\n    role="tabpanel" \r\n    id="panel-1" \r\n    aria-labelledby="tab-1"\r\n    tabindex="0"\r\n  >\r\n    Panel 1 content\r\n  </div>\r\n  <div \r\n    role="tabpanel" \r\n    id="panel-2" \r\n    aria-labelledby="tab-2"\r\n    tabindex="0"\r\n    hidden\r\n  >\r\n    Panel 2 content\r\n  </div>\r\n</div>\r\n\r\n<script>\r\n// Key handling for tabs\r\ndocument.addEventListener(\'keydown\', (e) => {\r\n  switch(e.key) {\r\n    case \'ArrowLeft\': \r\n      // Focus previous tab\r\n      break;\r\n    case \'ArrowRight\':\r\n      // Focus next tab\r\n      break;\r\n    case \'Home\':\r\n      // Focus first tab\r\n      break;\r\n    case \'End\':\r\n      // Focus last tab\r\n      break;\r\n  }\r\n});\r\n<\/script>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"switchtoggle",children:"Switch/Toggle"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:"<button \r\n  role=\"switch\" \r\n  aria-checked=\"false\" \r\n  aria-label=\"Dark mode\"\r\n>\r\n  <span class=\"switch-thumb\"></span>\r\n  <span class=\"switch-track\"></span>\r\n</button>\r\n\r\n<script>\r\n// Handle both click and keyboard events\r\nbutton.addEventListener('click', toggle);\r\nbutton.addEventListener('keydown', (e) => {\r\n  if (e.key === ' ' || e.key === 'Enter') toggle();\r\n});\r\n\r\nfunction toggle() {\r\n  const checked = button.getAttribute('aria-checked') === 'true';\r\n  button.setAttribute('aria-checked', !checked);\r\n}\r\n<\/script>\n"})}),"\n",(0,r.jsx)(n.h2,{id:"dropdowncombobox",children:"Dropdown/Combobox"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<div class="combobox">\r\n  <label id="combo-label">Select an option</label>\r\n  \r\n  <input \r\n    type="text"\r\n    role="combobox"\r\n    aria-expanded="false"\r\n    aria-controls="listbox-1"\r\n    aria-labelledby="combo-label"\r\n    aria-autocomplete="list"\r\n  />\r\n  \r\n  <ul \r\n    id="listbox-1"\r\n    role="listbox"\r\n    aria-labelledby="combo-label"\r\n  >\r\n    <li \r\n      role="option" \r\n      aria-selected="false"\r\n      id="option-1"\r\n    >\r\n      Option 1\r\n    </li>\r\n    \x3c!-- More options --\x3e\r\n  </ul>\r\n</div>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"menu-button",children:"Menu Button"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<div class="menu">\r\n  <button \r\n    aria-haspopup="true" \r\n    aria-expanded="false"\r\n    aria-controls="menu-items"\r\n  >\r\n    Menu\r\n  </button>\r\n  \r\n  <ul \r\n    id="menu-items" \r\n    role="menu" \r\n    hidden\r\n  >\r\n    <li>\r\n      <button role="menuitem">Option 1</button>\r\n    </li>\r\n    <li>\r\n      <button role="menuitem">Option 2</button>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n<script>\r\n// Key handling\r\ndocument.addEventListener(\'keydown\', (e) => {\r\n  switch(e.key) {\r\n    case \'ArrowDown\':\r\n    case \'ArrowUp\':\r\n      // Navigate menu items\r\n      break;\r\n    case \'Escape\':\r\n      // Close menu\r\n      break;\r\n    case \'Enter\':\r\n    case \' \':\r\n      // Select item\r\n      break;\r\n  }\r\n});\r\n<\/script>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"accordion",children:"Accordion"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<div class="accordion">\r\n  <h3>\r\n    <button \r\n      aria-expanded="false"\r\n      aria-controls="sect1"\r\n      class="accordion-trigger"\r\n    >\r\n      Section 1\r\n    </button>\r\n  </h3>\r\n  \r\n  <div \r\n    id="sect1" \r\n    role="region" \r\n    aria-labelledby="accordion1"\r\n    hidden\r\n  >\r\n    \x3c!-- Content --\x3e\r\n  </div>\r\n</div>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"key-principles",children:"Key Principles"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Keyboard Navigation:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"All interactive elements must be focusable"}),"\n",(0,r.jsx)(n.li,{children:'Logical tab order (tabindex="0" or natural order)'}),"\n",(0,r.jsx)(n.li,{children:"Visible focus indicators"}),"\n",(0,r.jsx)(n.li,{children:"Handle both mouse and keyboard events"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"ARIA States:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"aria-expanded: For expandable elements"}),"\n",(0,r.jsx)(n.li,{children:"aria-selected: For selected items"}),"\n",(0,r.jsx)(n.li,{children:"aria-checked: For toggles/switches"}),"\n",(0,r.jsx)(n.li,{children:"aria-hidden: To hide decorative elements"}),"\n",(0,r.jsx)(n.li,{children:"aria-pressed: For toggle buttons"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Screen Reader Support:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Meaningful labels (aria-label, aria-labelledby)"}),"\n",(0,r.jsx)(n.li,{children:"Descriptive text (aria-describedby)"}),"\n",(0,r.jsx)(n.li,{children:"Role definitions"}),"\n",(0,r.jsx)(n.li,{children:"Status updates (aria-live)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Focus Management:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Trap focus in modals"}),"\n",(0,r.jsx)(n.li,{children:"Return focus after closing dialogs"}),"\n",(0,r.jsx)(n.li,{children:"Skip links for main content"}),"\n",(0,r.jsxs)(n.li,{children:["Focus visible (",":focus-visible",")"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Common Keyboard Interactions:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Enter/Space: Activate buttons"}),"\n",(0,r.jsx)(n.li,{children:"Escape: Close dialogs/modals"}),"\n",(0,r.jsx)(n.li,{children:"Arrow keys: Navigate menus/lists"}),"\n",(0,r.jsx)(n.li,{children:"Tab: Move between focusable elements"}),"\n",(0,r.jsx)(n.li,{children:"Home/End: Jump to start/end"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>t});var r=i(6540);const l={},s=r.createContext(l);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);