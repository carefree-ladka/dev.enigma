"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[9993],{28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>l});var i=s(96540);const r={},t=i.createContext(r);function d(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(t.Provider,{value:n},e.children)}},54504:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>a});var i=s(74848),r=s(28453);const t={},d="Different Rendering Techniques",l={id:"Frontend System Design/RenderingTechniques",title:"Different Rendering Techniques",description:"1. Client-Side Rendering (CSR)",source:"@site/docs/Frontend System Design/RenderingTechniques.mdx",sourceDirName:"Frontend System Design",slug:"/Frontend System Design/RenderingTechniques",permalink:"/dev.enigma/docs/Frontend System Design/RenderingTechniques",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/Frontend System Design/RenderingTechniques.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"REST vs GraphQL",permalink:"/dev.enigma/docs/Frontend System Design/RESTvsGraphQL"},next:{title:"Different Styling Techniques",permalink:"/dev.enigma/docs/Frontend System Design/StyleTechnoques"}},o={},a=[{value:"1. Client-Side Rendering (CSR)",id:"1-client-side-rendering-csr",level:2},{value:"<strong>Theory</strong>",id:"theory",level:3},{value:"<strong>How It Works?</strong>",id:"how-it-works",level:3},{value:"<strong>Use Cases</strong>",id:"use-cases",level:3},{value:"<strong>Limitations</strong>",id:"limitations",level:3},{value:"2. Server-Side Rendering (SSR)",id:"2-server-side-rendering-ssr",level:2},{value:"<strong>Theory</strong>",id:"theory-1",level:3},{value:"<strong>How It Works?</strong>",id:"how-it-works-1",level:3},{value:"<strong>Use Cases</strong>",id:"use-cases-1",level:3},{value:"<strong>Limitations</strong>",id:"limitations-1",level:3},{value:"3. Static Site Generation (SSG)",id:"3-static-site-generation-ssg",level:2},{value:"<strong>Theory</strong>",id:"theory-2",level:3},{value:"<strong>How It Works?</strong>",id:"how-it-works-2",level:3},{value:"<strong>Use Cases</strong>",id:"use-cases-2",level:3},{value:"<strong>Limitations</strong>",id:"limitations-2",level:3},{value:"4. Incremental Static Regeneration (ISR)",id:"4-incremental-static-regeneration-isr",level:2},{value:"<strong>Theory</strong>",id:"theory-3",level:3},{value:"<strong>How It Works?</strong>",id:"how-it-works-3",level:3},{value:"<strong>Use Cases</strong>",id:"use-cases-3",level:3},{value:"<strong>Limitations</strong>",id:"limitations-3",level:3},{value:"5. Progressive Hydration",id:"5-progressive-hydration",level:2},{value:"<strong>Theory</strong>",id:"theory-4",level:3},{value:"<strong>Use Cases</strong>",id:"use-cases-4",level:3},{value:"<strong>Limitations</strong>",id:"limitations-4",level:3},{value:"<strong>Comparison Table</strong>",id:"comparison-table",level:2}];function c(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"different-rendering-techniques",children:"Different Rendering Techniques"})}),"\n",(0,i.jsx)(n.h2,{id:"1-client-side-rendering-csr",children:"1. Client-Side Rendering (CSR)"}),"\n",(0,i.jsx)(n.h3,{id:"theory",children:(0,i.jsx)(n.strong,{children:"Theory"})}),"\n",(0,i.jsxs)(n.p,{children:["Client-Side Rendering (CSR) means that the browser initially loads a minimal HTML file with an empty ",(0,i.jsx)(n.code,{children:"<div>"}),". JavaScript (typically React, Vue, or Angular) then runs on the client side to fetch data and dynamically render the content."]}),"\n",(0,i.jsx)(n.h3,{id:"how-it-works",children:(0,i.jsx)(n.strong,{children:"How It Works?"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"The browser loads an empty HTML shell."}),"\n",(0,i.jsx)(n.li,{children:"JavaScript fetches data from an API."}),"\n",(0,i.jsx)(n.li,{children:"The frontend framework (React, Vue, etc.) updates the DOM dynamically."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"use-cases",children:(0,i.jsx)(n.strong,{children:"Use Cases"})}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 Interactive applications (e.g., dashboards, single-page applications).",(0,i.jsx)(n.br,{}),"\n","\u2705 Web apps with frequent user interactions.",(0,i.jsx)(n.br,{}),"\n","\u2705 Cases where SEO is not a priority."]}),"\n",(0,i.jsx)(n.h3,{id:"limitations",children:(0,i.jsx)(n.strong,{children:"Limitations"})}),"\n",(0,i.jsxs)(n.p,{children:["\u274c Slower first-page load due to JavaScript execution.",(0,i.jsx)(n.br,{}),"\n","\u274c Bad for SEO if search engines cannot parse JavaScript properly."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"2-server-side-rendering-ssr",children:"2. Server-Side Rendering (SSR)"}),"\n",(0,i.jsx)(n.h3,{id:"theory-1",children:(0,i.jsx)(n.strong,{children:"Theory"})}),"\n",(0,i.jsx)(n.p,{children:"Server-Side Rendering (SSR) means that the HTML is pre-generated on the server and sent to the client. The JavaScript then hydrates the page for interactivity."}),"\n",(0,i.jsx)(n.h3,{id:"how-it-works-1",children:(0,i.jsx)(n.strong,{children:"How It Works?"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"The client requests a page."}),"\n",(0,i.jsx)(n.li,{children:"The server renders the full HTML with data."}),"\n",(0,i.jsx)(n.li,{children:"The browser receives the rendered HTML and displays it immediately."}),"\n",(0,i.jsx)(n.li,{children:"JavaScript loads to make the page interactive (hydration)."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"use-cases-1",children:(0,i.jsx)(n.strong,{children:"Use Cases"})}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 Improves SEO (since HTML content is available upfront).",(0,i.jsx)(n.br,{}),"\n","\u2705 Faster first-paint for performance-focused applications.",(0,i.jsx)(n.br,{}),"\n","\u2705 News websites, blogs, e-commerce sites."]}),"\n",(0,i.jsx)(n.h3,{id:"limitations-1",children:(0,i.jsx)(n.strong,{children:"Limitations"})}),"\n",(0,i.jsxs)(n.p,{children:["\u274c Increased server load compared to CSR.",(0,i.jsx)(n.br,{}),"\n","\u274c More complex implementation."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"3-static-site-generation-ssg",children:"3. Static Site Generation (SSG)"}),"\n",(0,i.jsx)(n.h3,{id:"theory-2",children:(0,i.jsx)(n.strong,{children:"Theory"})}),"\n",(0,i.jsxs)(n.p,{children:["Static Site Generation (SSG) generates static HTML pages at ",(0,i.jsx)(n.strong,{children:"build time"}),", meaning content is pre-built and served as static files."]}),"\n",(0,i.jsx)(n.h3,{id:"how-it-works-2",children:(0,i.jsx)(n.strong,{children:"How It Works?"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"At build time, all pages are pre-rendered into static HTML."}),"\n",(0,i.jsx)(n.li,{children:"When a user requests a page, the static file is served instantly."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"use-cases-2",children:(0,i.jsx)(n.strong,{children:"Use Cases"})}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 Best for SEO and performance.",(0,i.jsx)(n.br,{}),"\n","\u2705 Blogs, landing pages, marketing websites.",(0,i.jsx)(n.br,{}),"\n","\u2705 Content that doesn\u2019t change frequently."]}),"\n",(0,i.jsx)(n.h3,{id:"limitations-2",children:(0,i.jsx)(n.strong,{children:"Limitations"})}),"\n",(0,i.jsxs)(n.p,{children:["\u274c Requires rebuilding the entire site for content updates.",(0,i.jsx)(n.br,{}),"\n","\u274c Not ideal for highly dynamic content."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"4-incremental-static-regeneration-isr",children:"4. Incremental Static Regeneration (ISR)"}),"\n",(0,i.jsx)(n.h3,{id:"theory-3",children:(0,i.jsx)(n.strong,{children:"Theory"})}),"\n",(0,i.jsxs)(n.p,{children:["ISR is an advanced version of SSG that allows static pages to be rebuilt ",(0,i.jsx)(n.strong,{children:"incrementally"})," instead of regenerating the entire site."]}),"\n",(0,i.jsx)(n.h3,{id:"how-it-works-3",children:(0,i.jsx)(n.strong,{children:"How It Works?"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Pre-renders static pages at build time."}),"\n",(0,i.jsx)(n.li,{children:"When data updates, only the affected pages are re-generated."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"use-cases-3",children:(0,i.jsx)(n.strong,{children:"Use Cases"})}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 Best for SEO with dynamic content.",(0,i.jsx)(n.br,{}),"\n","\u2705 Blogs, news sites, product pages that update occasionally."]}),"\n",(0,i.jsx)(n.h3,{id:"limitations-3",children:(0,i.jsx)(n.strong,{children:"Limitations"})}),"\n",(0,i.jsx)(n.p,{children:"\u274c More complex setup than SSG."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"5-progressive-hydration",children:"5. Progressive Hydration"}),"\n",(0,i.jsx)(n.h3,{id:"theory-4",children:(0,i.jsx)(n.strong,{children:"Theory"})}),"\n",(0,i.jsx)(n.p,{children:"Progressive Hydration delays JavaScript execution, allowing the page to load quickly and then become interactive in phases."}),"\n",(0,i.jsx)(n.h3,{id:"use-cases-4",children:(0,i.jsx)(n.strong,{children:"Use Cases"})}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 Large-scale applications where performance is critical.",(0,i.jsx)(n.br,{}),"\n","\u2705 Complex interactive UIs where a full hydration delay would hurt UX."]}),"\n",(0,i.jsx)(n.h3,{id:"limitations-4",children:(0,i.jsx)(n.strong,{children:"Limitations"})}),"\n",(0,i.jsx)(n.p,{children:"\u274c Requires careful optimization and testing."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"comparison-table",children:(0,i.jsx)(n.strong,{children:"Comparison Table"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Technique"}),(0,i.jsx)(n.th,{children:"First Load Speed"}),(0,i.jsx)(n.th,{children:"SEO"}),(0,i.jsx)(n.th,{children:"Best Use Case"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"CSR"})}),(0,i.jsx)(n.td,{children:"Slow"}),(0,i.jsx)(n.td,{children:"Poor"}),(0,i.jsx)(n.td,{children:"Interactive SPAs"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"SSR"})}),(0,i.jsx)(n.td,{children:"Fast"}),(0,i.jsx)(n.td,{children:"Good"}),(0,i.jsx)(n.td,{children:"Blogs, E-commerce"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"SSG"})}),(0,i.jsx)(n.td,{children:"Very Fast"}),(0,i.jsx)(n.td,{children:"Excellent"}),(0,i.jsx)(n.td,{children:"Static websites"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"ISR"})}),(0,i.jsx)(n.td,{children:"Fast"}),(0,i.jsx)(n.td,{children:"Excellent"}),(0,i.jsx)(n.td,{children:"Dynamic blogs, news"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Progressive Hydration"})}),(0,i.jsx)(n.td,{children:"Fast"}),(0,i.jsx)(n.td,{children:"Good"}),(0,i.jsx)(n.td,{children:"Complex apps"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\ude80 ",(0,i.jsx)(n.strong,{children:"Conclusion"}),"\nThe choice of rendering technique depends on the application\u2019s needs. ",(0,i.jsx)(n.strong,{children:"CSR"})," is good for interactivity, ",(0,i.jsx)(n.strong,{children:"SSR"})," helps with SEO, ",(0,i.jsx)(n.strong,{children:"SSG"})," is great for static sites, and ",(0,i.jsx)(n.strong,{children:"ISR"})," is ideal for frequently updated content. ",(0,i.jsx)(n.strong,{children:"Progressive Hydration"})," optimizes performance for large applications."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);