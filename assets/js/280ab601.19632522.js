"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6165],{28453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>l});var a=i(96540);const o={},t=a.createContext(o);function r(n){const e=a.useContext(t);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),a.createElement(t.Provider,{value:e},n.children)}},60084:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var a=i(74848),o=i(28453);const t={},r="JavaScript Execution in Browser",l={id:"WebDev/JavaScript/JSExecution",title:"JavaScript Execution in Browser",description:"1. Loading Phase",source:"@site/docs/WebDev/JavaScript/JSExecution.mdx",sourceDirName:"WebDev/JavaScript",slug:"/WebDev/JavaScript/JSExecution",permalink:"/dev.enigma/docs/WebDev/JavaScript/JSExecution",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/WebDev/JavaScript/JSExecution.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Canceling an API Call",permalink:"/dev.enigma/docs/WebDev/JavaScript/HowToCancelAPICalls"},next:{title:"Memoization",permalink:"/dev.enigma/docs/WebDev/JavaScript/Memoization"}},s={},c=[{value:"1. Loading Phase",id:"1-loading-phase",level:2},{value:"HTML Parsing",id:"html-parsing",level:3},{value:"Loading Sequence",id:"loading-sequence",level:3},{value:"2. Compilation Phase",id:"2-compilation-phase",level:2},{value:"Just-In-Time (JIT) Compilation",id:"just-in-time-jit-compilation",level:3},{value:"3. Creation Phase (Memory Allocation)",id:"3-creation-phase-memory-allocation",level:2},{value:"Global Execution Context Creation",id:"global-execution-context-creation",level:3},{value:"Scope Chain Creation",id:"scope-chain-creation",level:3},{value:"4. Execution Phase",id:"4-execution-phase",level:2},{value:"Call Stack Operations",id:"call-stack-operations",level:3},{value:"Event Loop and Task Queues",id:"event-loop-and-task-queues",level:3},{value:"5. Memory Management",id:"5-memory-management",level:2},{value:"Garbage Collection",id:"garbage-collection",level:3},{value:"Memory Leaks",id:"memory-leaks",level:3},{value:"6. Error Handling",id:"6-error-handling",level:2},{value:"Error Propagation",id:"error-propagation",level:3},{value:"7. Browser APIs and Web APIs",id:"7-browser-apis-and-web-apis",level:2},{value:"DOM Manipulation",id:"dom-manipulation",level:3},{value:"Event Handling",id:"event-handling",level:3},{value:"8. Performance Optimization",id:"8-performance-optimization",level:2},{value:"Critical Rendering Path",id:"critical-rendering-path",level:3},{value:"Code Splitting",id:"code-splitting",level:3},{value:"9. Debugging Tips",id:"9-debugging-tips",level:2},{value:"Console Methods",id:"console-methods",level:3},{value:"Source Maps",id:"source-maps",level:3},{value:"10. Common Pitfalls and Solutions",id:"10-common-pitfalls-and-solutions",level:2},{value:"Performance Issues",id:"performance-issues",level:3},{value:"Memory Management",id:"memory-management",level:3},{value:"1. Engine Components",id:"1-engine-components",level:2},{value:"Main Components",id:"main-components",level:3},{value:"2. Parsing Phase",id:"2-parsing-phase",level:2},{value:"Lexical Analysis (Tokenization)",id:"lexical-analysis-tokenization",level:3},{value:"Abstract Syntax Tree (AST)",id:"abstract-syntax-tree-ast",level:3},{value:"3. Compilation Pipeline",id:"3-compilation-pipeline",level:2},{value:"Interpreter (Ignition in V8)",id:"interpreter-ignition-in-v8",level:3},{value:"JIT Compilation (TurboFan in V8)",id:"jit-compilation-turbofan-in-v8",level:3},{value:"4. Memory Management",id:"4-memory-management",level:2},{value:"Memory Spaces",id:"memory-spaces",level:3},{value:"Garbage Collection Process",id:"garbage-collection-process",level:3},{value:"5. Execution Context",id:"5-execution-context",level:2},{value:"Context Creation",id:"context-creation",level:3},{value:"Scope Chain",id:"scope-chain",level:3},{value:"6. Optimization Techniques",id:"6-optimization-techniques",level:2},{value:"Inline Caching",id:"inline-caching",level:3},{value:"Hidden Classes",id:"hidden-classes",level:3},{value:"7. Performance Monitoring",id:"7-performance-monitoring",level:2},{value:"Profiling",id:"profiling",level:3},{value:"8. Common Optimizations",id:"8-common-optimizations",level:2},{value:"Function Inlining",id:"function-inlining",level:3},{value:"Deoptimization",id:"deoptimization",level:3},{value:"9. Engine-specific Features (V8)",id:"9-engine-specific-features-v8",level:2},{value:"Turbofan Optimizations",id:"turbofan-optimizations",level:3},{value:"Orinoco Garbage Collector",id:"orinoco-garbage-collector",level:3}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"javascript-execution-in-browser",children:"JavaScript Execution in Browser"})}),"\n",(0,a.jsx)(e.h2,{id:"1-loading-phase",children:"1. Loading Phase"}),"\n",(0,a.jsx)(e.h3,{id:"html-parsing",children:"HTML Parsing"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:'// Regular script loading - blocks parsing\n<script src="app.js"><\/script>\n\n// Async loading - doesn\'t block parsing\n<script async src="app.js"><\/script>\n\n// Defer loading - executes after HTML parsing\n<script defer src="app.js"><\/script>\n'})}),"\n",(0,a.jsx)(e.h3,{id:"loading-sequence",children:"Loading Sequence"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:"Browser receives HTML"}),"\n",(0,a.jsx)(e.li,{children:"HTML parser starts parsing HTML document"}),"\n",(0,a.jsx)(e.li,{children:"Creates DOM (Document Object Model)"}),"\n",(0,a.jsxs)(e.li,{children:["Encounters ",(0,a.jsx)(e.code,{children:"<script>"})," tag","\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Without async/defer: Stops parsing, downloads, executes"}),"\n",(0,a.jsx)(e.li,{children:"With async: Downloads in parallel, executes when ready"}),"\n",(0,a.jsx)(e.li,{children:"With defer: Downloads in parallel, executes after parsing"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"2-compilation-phase",children:"2. Compilation Phase"}),"\n",(0,a.jsx)(e.h3,{id:"just-in-time-jit-compilation",children:"Just-In-Time (JIT) Compilation"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:'// V8 Engine Phases:\n// 1. Source Code\nfunction add(a, b) {\n    return a + b;\n}\n\n// 2. Abstract Syntax Tree (AST)\n{\n    "type": "FunctionDeclaration",\n    "id": { "type": "Identifier", "name": "add" },\n    "params": [\n        { "type": "Identifier", "name": "a" },\n        { "type": "Identifier", "name": "b" }\n    ],\n    // ... more AST nodes\n}\n\n// 3. Bytecode\n// 4. Machine Code (for hot functions)\n'})}),"\n",(0,a.jsx)(e.h2,{id:"3-creation-phase-memory-allocation",children:"3. Creation Phase (Memory Allocation)"}),"\n",(0,a.jsx)(e.h3,{id:"global-execution-context-creation",children:"Global Execution Context Creation"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:'// 1. Global Object Creation\nwindow; // or global in Node.js\n\n// 2. this Binding\nthis === window; // true in browser\'s global scope\n\n// 3. Variable Hoisting\nconsole.log(name); // undefined\nvar name = "John";\n\n// 4. Function Hoisting\nsayHello(); // "Hello"\nfunction sayHello() {\n    console.log("Hello");\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"scope-chain-creation",children:"Scope Chain Creation"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:'// Lexical Scope Example\nconst global = "I\'m global";\n\nfunction outer() {\n    const outer = "I\'m outer";\n    \n    function inner() {\n        const inner = "I\'m inner";\n        console.log(global, outer, inner);\n    }\n    \n    inner();\n}\n\n// Scope Chain: inner -> outer -> global\n'})}),"\n",(0,a.jsx)(e.h2,{id:"4-execution-phase",children:"4. Execution Phase"}),"\n",(0,a.jsx)(e.h3,{id:"call-stack-operations",children:"Call Stack Operations"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"function first() {\n    console.log('First');\n    second();\n}\n\nfunction second() {\n    console.log('Second');\n    third();\n}\n\nfunction third() {\n    console.log('Third');\n}\n\nfirst();\n\n// Call Stack Sequence:\n// 1. main()\n// 2. first()\n// 3. second()\n// 4. third()\n// Then unwinding...\n"})}),"\n",(0,a.jsx)(e.h3,{id:"event-loop-and-task-queues",children:"Event Loop and Task Queues"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// 1. Synchronous Code\nconsole.log('Start');\n\n// 2. Macrotask (setTimeout)\nsetTimeout(() => {\n    console.log('Timeout');\n}, 0);\n\n// 3. Microtask (Promise)\nPromise.resolve()\n    .then(() => console.log('Promise'));\n\nconsole.log('End');\n\n// Output:\n// Start\n// End\n// Promise\n// Timeout\n"})}),"\n",(0,a.jsx)(e.h2,{id:"5-memory-management",children:"5. Memory Management"}),"\n",(0,a.jsx)(e.h3,{id:"garbage-collection",children:"Garbage Collection"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:'// Reference Counting\nlet obj = { data: "some data" };\nobj = null; // Object becomes eligible for GC\n\n// Mark and Sweep\nfunction process() {\n    const temp = { x: 123 };\n    // temp is only reachable within this function\n} // temp becomes eligible for GC\n'})}),"\n",(0,a.jsx)(e.h3,{id:"memory-leaks",children:"Memory Leaks"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// 1. Global Variables\nwindow.globalData = { /* large data */ };\n\n// 2. Forgotten Timers\nsetInterval(() => {\n    const data = { /* large data */ };\n}, 1000);\n\n// 3. Closures\nfunction createLeak() {\n    const largeData = { /* large data */ };\n    return () => console.log(largeData);\n}\n"})}),"\n",(0,a.jsx)(e.h2,{id:"6-error-handling",children:"6. Error Handling"}),"\n",(0,a.jsx)(e.h3,{id:"error-propagation",children:"Error Propagation"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"try {\n    throw new Error('Something went wrong');\n} catch (error) {\n    console.error(error);\n} finally {\n    console.log('Cleanup');\n}\n\n// Async Error Handling\nasync function fetchData() {\n    try {\n        const response = await fetch('api/data');\n        return await response.json();\n    } catch (error) {\n        console.error('Fetch error:', error);\n    }\n}\n"})}),"\n",(0,a.jsx)(e.h2,{id:"7-browser-apis-and-web-apis",children:"7. Browser APIs and Web APIs"}),"\n",(0,a.jsx)(e.h3,{id:"dom-manipulation",children:"DOM Manipulation"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Batched DOM Updates\nrequestAnimationFrame(() => {\n    element.style.transform = 'translateX(100px)';\n});\n\n// MutationObserver\nconst observer = new MutationObserver(mutations => {\n    console.log('DOM changed');\n});\n\nobserver.observe(document.body, {\n    childList: true,\n    subtree: true\n});\n"})}),"\n",(0,a.jsx)(e.h3,{id:"event-handling",children:"Event Handling"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Event Bubbling\ndocument.body.addEventListener('click', function(event) {\n    console.log('Body clicked');\n}, false);\n\n// Event Capturing\ndocument.body.addEventListener('click', function(event) {\n    console.log('Capture phase');\n}, true);\n"})}),"\n",(0,a.jsx)(e.h2,{id:"8-performance-optimization",children:"8. Performance Optimization"}),"\n",(0,a.jsx)(e.h3,{id:"critical-rendering-path",children:"Critical Rendering Path"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Optimize loading\ndocument.addEventListener('DOMContentLoaded', () => {\n    // DOM is ready\n});\n\nwindow.addEventListener('load', () => {\n    // Everything is loaded\n});\n\n// Avoid layout thrashing\nconst height = element.offsetHeight; // Read\nelement.style.height = height + 100 + 'px'; // Write\n"})}),"\n",(0,a.jsx)(e.h3,{id:"code-splitting",children:"Code Splitting"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Dynamic Import\nbutton.addEventListener('click', async () => {\n    const module = await import('./feature.js');\n    module.doSomething();\n});\n"})}),"\n",(0,a.jsx)(e.h2,{id:"9-debugging-tips",children:"9. Debugging Tips"}),"\n",(0,a.jsx)(e.h3,{id:"console-methods",children:"Console Methods"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Performance Measurement\nconsole.time('operation');\n// ... some operations\nconsole.timeEnd('operation');\n\n// Stack Trace\nconsole.trace('Trace message');\n\n// Memory Snapshot\nconsole.memory\n"})}),"\n",(0,a.jsx)(e.h3,{id:"source-maps",children:"Source Maps"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:'// Enable source maps\n{\n    "version": 3,\n    "sources": ["original.js"],\n    "names": ["add", "a", "b"],\n    "mappings": "AAAA,SAASA,IAAIC,EAAGC"\n}\n'})}),"\n",(0,a.jsx)(e.h2,{id:"10-common-pitfalls-and-solutions",children:"10. Common Pitfalls and Solutions"}),"\n",(0,a.jsx)(e.h3,{id:"performance-issues",children:"Performance Issues"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Bad\nfor (let i = 0; i < array.length; i++) {}\n\n// Good\nconst length = array.length;\nfor (let i = 0; i < length; i++) {}\n\n// Better\narray.forEach(item => {});\n"})}),"\n",(0,a.jsx)(e.h3,{id:"memory-management",children:"Memory Management"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Bad - Memory Leak\nclass Component {\n    constructor() {\n        this.listener = () => this.update();\n        window.addEventListener('resize', this.listener);\n    }\n}\n\n// Good - Cleanup\nclass Component {\n    constructor() {\n        this.listener = () => this.update();\n        window.addEventListener('resize', this.listener);\n    }\n    \n    destroy() {\n        window.removeEventListener('resize', this.listener);\n    }\n}\n"})}),"\n",(0,a.jsx)(e.h1,{id:"javascript-engine-execution-process",children:"JavaScript Engine Execution Process"}),"\n",(0,a.jsx)(e.h2,{id:"1-engine-components",children:"1. Engine Components"}),"\n",(0,a.jsx)(e.h3,{id:"main-components",children:"Main Components"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// JavaScript Engine Architecture\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 JavaScript Engine (e.g., V8)        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Parser \u2192 AST \u2192 Interpreter (Ignition)\u2502\n\u2502          \u2193                          \u2502\n\u2502    Compiler (TurboFan)              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,a.jsx)(e.h2,{id:"2-parsing-phase",children:"2. Parsing Phase"}),"\n",(0,a.jsx)(e.h3,{id:"lexical-analysis-tokenization",children:"Lexical Analysis (Tokenization)"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Source Code\nfunction sum(a, b) { return a + b; }\n\n// Tokens\n[\n    { type: 'keyword', value: 'function' },\n    { type: 'identifier', value: 'sum' },\n    { type: 'punctuation', value: '(' },\n    { type: 'identifier', value: 'a' },\n    { type: 'punctuation', value: ',' },\n    { type: 'identifier', value: 'b' },\n    { type: 'punctuation', value: ')' },\n    { type: 'punctuation', value: '{' },\n    { type: 'keyword', value: 'return' },\n    { type: 'identifier', value: 'a' },\n    { type: 'operator', value: '+' },\n    { type: 'identifier', value: 'b' },\n    { type: 'punctuation', value: ';' },\n    { type: 'punctuation', value: '}' }\n]\n"})}),"\n",(0,a.jsx)(e.h3,{id:"abstract-syntax-tree-ast",children:"Abstract Syntax Tree (AST)"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:'// AST Structure\n{\n    "type": "Program",\n    "body": [{\n        "type": "FunctionDeclaration",\n        "id": {\n            "type": "Identifier",\n            "name": "sum"\n        },\n        "params": [\n            {\n                "type": "Identifier",\n                "name": "a"\n            },\n            {\n                "type": "Identifier",\n                "name": "b"\n            }\n        ],\n        "body": {\n            "type": "BlockStatement",\n            "body": [{\n                "type": "ReturnStatement",\n                "argument": {\n                    "type": "BinaryExpression",\n                    "operator": "+",\n                    "left": {\n                        "type": "Identifier",\n                        "name": "a"\n                    },\n                    "right": {\n                        "type": "Identifier",\n                        "name": "b"\n                    }\n                }\n            }]\n        }\n    }]\n}\n'})}),"\n",(0,a.jsx)(e.h2,{id:"3-compilation-pipeline",children:"3. Compilation Pipeline"}),"\n",(0,a.jsx)(e.h3,{id:"interpreter-ignition-in-v8",children:"Interpreter (Ignition in V8)"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Bytecode Generation\nfunction example() {\n    let x = 1;\n    x += 2;\n    return x;\n}\n\n// Simplified Bytecode\nLdaZero            // Load accumulator with 0\nStar r0           // Store accumulator to register 0\nLdaSmi #1         // Load small integer 1\nAdd r0            // Add register 0 to accumulator\nReturn            // Return accumulator\n"})}),"\n",(0,a.jsx)(e.h3,{id:"jit-compilation-turbofan-in-v8",children:"JIT Compilation (TurboFan in V8)"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Hot Function Detection\nfunction hotFunction(a, b) {\n    return a + b;  // Called many times\n}\n\n// Optimization Tiers\n// Tier 1: Interpreted\n// Tier 2: Baseline compiled\n// Tier 3: Optimized machine code\n"})}),"\n",(0,a.jsx)(e.h2,{id:"4-memory-management",children:"4. Memory Management"}),"\n",(0,a.jsx)(e.h3,{id:"memory-spaces",children:"Memory Spaces"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Memory Layout\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Code Space      \u2502 // Executable code\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 New Space       \u2502 // Young objects\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Old Space       \u2502 // Long-lived objects\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Large Object    \u2502 // Objects > 1MB\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,a.jsx)(e.h3,{id:"garbage-collection-process",children:"Garbage Collection Process"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Mark and Sweep Algorithm\nfunction createObjects() {\n    let obj1 = { name: 'obj1' };\n    let obj2 = { name: 'obj2' };\n    obj1.ref = obj2;  // Create reference\n    obj2 = null;      // Break reference\n    return obj1;      // obj2 eligible for GC\n}\n\n// Generation-based Collection\n// Young Generation (Minor GC)\n// Old Generation (Major GC)\n"})}),"\n",(0,a.jsx)(e.h2,{id:"5-execution-context",children:"5. Execution Context"}),"\n",(0,a.jsx)(e.h3,{id:"context-creation",children:"Context Creation"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Global Execution Context\nGlobalExecutionContext = {\n    ThisBinding: window, // or global\n    VariableEnvironment: { /* variables */ },\n    LexicalEnvironment: { /* let/const */ }\n}\n\n// Function Execution Context\nFunctionExecutionContext = {\n    ThisBinding: <determined by call>,\n    VariableEnvironment: { /* variables */ },\n    LexicalEnvironment: { /* let/const */ }\n}\n"})}),"\n",(0,a.jsx)(e.h3,{id:"scope-chain",children:"Scope Chain"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"function outer() {\n    const a = 1;\n    function inner() {\n        const b = 2;\n        console.log(a, b);\n    }\n    inner();\n}\n\n// Scope Chain: inner \u2192 outer \u2192 global\n"})}),"\n",(0,a.jsx)(e.h2,{id:"6-optimization-techniques",children:"6. Optimization Techniques"}),"\n",(0,a.jsx)(e.h3,{id:"inline-caching",children:"Inline Caching"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Before Optimization\nfunction getProperty(obj, prop) {\n    return obj[prop];\n}\n\n// After Inline Caching\n// Engine caches the location of prop\n// for subsequent lookups\n"})}),"\n",(0,a.jsx)(e.h3,{id:"hidden-classes",children:"Hidden Classes"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Bad for optimization\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\nlet p1 = new Point(1, 2);\np1.z = 3;  // Creates new hidden class\n\n// Good for optimization\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n    this.z = undefined;  // Declare all properties upfront\n}\n"})}),"\n",(0,a.jsx)(e.h2,{id:"7-performance-monitoring",children:"7. Performance Monitoring"}),"\n",(0,a.jsx)(e.h3,{id:"profiling",children:"Profiling"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// CPU Profiling\nconsole.profile('MyProfile');\n// ... code to profile\nconsole.profileEnd('MyProfile');\n\n// Memory Profiling\nconst heap = process.memoryUsage();\nconsole.log(heap);\n"})}),"\n",(0,a.jsx)(e.h2,{id:"8-common-optimizations",children:"8. Common Optimizations"}),"\n",(0,a.jsx)(e.h3,{id:"function-inlining",children:"Function Inlining"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Before Inlining\nfunction add(a, b) {\n    return a + b;\n}\nlet result = add(1, 2);\n\n// After Inlining (Internal)\nlet result = 1 + 2;  // Function call removed\n"})}),"\n",(0,a.jsx)(e.h3,{id:"deoptimization",children:"Deoptimization"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:'function add(a, b) {\n    // Optimized for numbers\n    return a + b;\n}\n\nadd(1, 2);        // Optimized\nadd("1", "2");    // Deoptimized due to type change\n'})}),"\n",(0,a.jsx)(e.h2,{id:"9-engine-specific-features-v8",children:"9. Engine-specific Features (V8)"}),"\n",(0,a.jsx)(e.h3,{id:"turbofan-optimizations",children:"Turbofan Optimizations"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Type Specialization\nfunction add(a, b) {\n    return a + b;\n}\n\n// After many number-only calls\n// Engine creates specialized version for numbers\n"})}),"\n",(0,a.jsx)(e.h3,{id:"orinoco-garbage-collector",children:"Orinoco Garbage Collector"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Concurrent Marking\n// Incremental Marking\n// Lazy Sweeping\n// Parallel Scavenging\n"})})]})}function p(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}}}]);