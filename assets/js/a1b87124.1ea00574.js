"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[265],{9012:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>i,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var t=r(4848),o=r(8453);const l={},a="Debounce and Throttle",c={id:"WebDev/React/DebounceThrottle",title:"Debounce and Throttle",description:"",source:"@site/docs/WebDev/React/DebounceThrottle.mdx",sourceDirName:"WebDev/React",slug:"/WebDev/React/DebounceThrottle",permalink:"/js.enigma/docs/WebDev/React/DebounceThrottle",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/WebDev/React/DebounceThrottle.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Custom Events",permalink:"/js.enigma/docs/WebDev/React/CustomEvents"},next:{title:"Error Boundary",permalink:"/js.enigma/docs/WebDev/React/ErrorBoundary"}},s={},u=[];function d(e){const n={code:"code",h1:"h1",header:"header",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"debounce-and-throttle",children:"Debounce and Throttle"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'// Custom hook for debouncing\r\nimport { useState, useEffect, useCallback } from \'react\';\r\n\r\nfunction useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}\r\n\r\n// Custom hook for throttling\r\nfunction useThrottle(value, delay) {\r\n  const [throttledValue, setThrottledValue] = useState(value);\r\n  const [lastExecuted, setLastExecuted] = useState(Date.now());\r\n\r\n  useEffect(() => {\r\n    const now = Date.now();\r\n    const timeSinceLastExecution = now - lastExecuted;\r\n\r\n    if (timeSinceLastExecution >= delay) {\r\n      setThrottledValue(value);\r\n      setLastExecuted(now);\r\n    } else {\r\n      const timer = setTimeout(() => {\r\n        setThrottledValue(value);\r\n        setLastExecuted(Date.now());\r\n      }, delay - timeSinceLastExecution);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [value, delay, lastExecuted]);\r\n\r\n  return throttledValue;\r\n}\r\n\r\n// Example component using both debounce and throttle\r\nfunction SearchComponent() {\r\n  const [searchTerm, setSearchTerm] = useState(\'\');\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n\r\n  // Debounced search term - only updates after user stops typing for 500ms\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\r\n\r\n  // Throttled scroll position - only updates once every 200ms maximum\r\n  const throttledScrollPosition = useThrottle(scrollPosition, 200);\r\n\r\n  // Simulated API call using debounced value\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm) {\r\n      console.log(`Making API call with: ${debouncedSearchTerm}`);\r\n      // Actual API call would go here\r\n    }\r\n  }, [debouncedSearchTerm]);\r\n\r\n  // Scroll handler using throttled value\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setScrollPosition(window.scrollY);\r\n    };\r\n\r\n    window.addEventListener(\'scroll\', handleScroll);\r\n    return () => window.removeEventListener(\'scroll\', handleScroll);\r\n  }, []);\r\n\r\n  return (\r\n    <div className="p-4">\r\n      <div className="mb-4">\r\n        <h3 className="text-lg font-bold mb-2">Debounced Search</h3>\r\n        <input\r\n          type="text"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          placeholder="Search..."\r\n          className="border p-2 rounded"\r\n        />\r\n        <p className="mt-2">\r\n          Immediate value: {searchTerm}\r\n          <br />\r\n          Debounced value: {debouncedSearchTerm}\r\n        </p>\r\n      </div>\r\n\r\n      <div>\r\n        <h3 className="text-lg font-bold mb-2">Throttled Scroll</h3>\r\n        <p>\r\n          Immediate scroll position: {scrollPosition}px\r\n          <br />\r\n          Throttled scroll position: {throttledScrollPosition}px\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Alternative implementation using pure functions\r\nconst debounce = (func, delay) => {\r\n  let timeoutId;\r\n\r\n  return (...args) => {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n\r\n    timeoutId = setTimeout(() => {\r\n      func.apply(null, args);\r\n    }, delay);\r\n  };\r\n};\r\n\r\nconst throttle = (func, delay) => {\r\n  let lastExecuted = 0;\r\n  let timeoutId;\r\n\r\n  return (...args) => {\r\n    const now = Date.now();\r\n\r\n    if (now - lastExecuted >= delay) {\r\n      func.apply(null, args);\r\n      lastExecuted = now;\r\n    } else {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = setTimeout(() => {\r\n        func.apply(null, args);\r\n        lastExecuted = Date.now();\r\n      }, delay - (now - lastExecuted));\r\n    }\r\n  };\r\n};\r\n\r\n// Example usage of pure functions\r\nfunction EventHandlingComponent() {\r\n  const handleSearch = useCallback(\r\n    debounce((term) => {\r\n      console.log(`Searching for: ${term}`);\r\n      // API call would go here\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  const handleScroll = useCallback(\r\n    throttle((position) => {\r\n      console.log(`Scroll position: ${position}`);\r\n      // Handle scroll logic here\r\n    }, 200),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type="text"\r\n        onChange={(e) => handleSearch(e.target.value)}\r\n        placeholder="Search with debounce..."\r\n        className="border p-2 rounded"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { \r\n  useDebounce, \r\n  useThrottle, \r\n  SearchComponent, \r\n  EventHandlingComponent,\r\n  debounce,\r\n  throttle \r\n};\n'})})]})}function i(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>c});var t=r(6540);const o={},l=t.createContext(o);function a(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);