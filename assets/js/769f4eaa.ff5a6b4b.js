"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5342],{28453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>a});var t=i(96540);const s={},r=t.createContext(s);function l(n){const e=t.useContext(r);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:l(n.components),t.createElement(r.Provider,{value:e},n.children)}},71306:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var t=i(74848),s=i(28453);const r={},l="Gaussian Elimination",a={id:"DSA/DSA with JavaScript/GaussianElimination",title:"Gaussian Elimination",description:"Introduction",source:"@site/docs/DSA/DSA with JavaScript/GaussianElimination.mdx",sourceDirName:"DSA/DSA with JavaScript",slug:"/DSA/DSA with JavaScript/GaussianElimination",permalink:"/js.enigma/docs/DSA/DSA with JavaScript/GaussianElimination",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/DSA/DSA with JavaScript/GaussianElimination.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Frequency Counter Technique",permalink:"/js.enigma/docs/DSA/DSA with JavaScript/FrequencyCounter"},next:{title:"Bipartite Graphs",permalink:"/js.enigma/docs/DSA/DSA with JavaScript/GraphBipartile"}},o={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Theory",id:"theory",level:2},{value:"Key Concepts",id:"key-concepts",level:3},{value:"Algorithm Steps",id:"algorithm-steps",level:3},{value:"Implementation",id:"implementation",level:2},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Applications and Extensions",id:"applications-and-extensions",level:2},{value:"1. Linear System Applications",id:"1-linear-system-applications",level:3},{value:"2. Extensions",id:"2-extensions",level:3},{value:"3. Related Algorithms",id:"3-related-algorithms",level:3}];function h(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"gaussian-elimination",children:"Gaussian Elimination"})}),"\n",(0,t.jsx)(e.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(e.p,{children:"Gaussian elimination is a fundamental algorithm in linear algebra used to solve systems of linear equations. It transforms a matrix into row echelon form through a sequence of elementary row operations."}),"\n",(0,t.jsx)(e.h2,{id:"theory",children:"Theory"}),"\n",(0,t.jsx)(e.h3,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Row Echelon Form (REF)"}),"\nA matrix is in row echelon form when:"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"All zero rows are at the bottom"}),"\n",(0,t.jsx)(e.li,{children:"The leading coefficient (pivot) of each nonzero row is to the right of the pivot above it"}),"\n",(0,t.jsx)(e.li,{children:"All entries below a pivot are zero"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Elementary Row Operations"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Swapping two rows"}),"\n",(0,t.jsx)(e.li,{children:"Multiplying a row by a nonzero scalar"}),"\n",(0,t.jsx)(e.li,{children:"Adding a multiple of one row to another"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"algorithm-steps",children:"Algorithm Steps"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Forward Elimination (Converting to REF)"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Start from the leftmost column"}),"\n",(0,t.jsx)(e.li,{children:"Find the pivot element"}),"\n",(0,t.jsx)(e.li,{children:"Make all elements below the pivot zero"}),"\n",(0,t.jsx)(e.li,{children:"Repeat for remaining submatrix"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Back Substitution"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Start from the bottom row"}),"\n",(0,t.jsx)(e.li,{children:"Solve for each variable"}),"\n",(0,t.jsx)(e.li,{children:"Substitute back into previous equations"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["For more : ",(0,t.jsx)(e.a,{href:"https://linearalgebra.math.umanitoba.ca/math1220/section-12.html",children:"https://linearalgebra.math.umanitoba.ca/math1220/section-12.html"})]}),"\n",(0,t.jsx)(e.h2,{id:"implementation",children:"Implementation"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-JavaScript",children:'/**\n * Gaussian elimination method\n * @param {Array} A - Augmented matrix (includes the constants in the last column)\n * @return {Array} x - Solution vector\n */\nfunction gauss(A) {\n  const n = A.length;\n\n  // Perform Gaussian elimination\n  for (let i = 0; i < n; i++) {\n    // Find the pivot row with the largest element in the current column\n    let maxRow = i;\n    let maxEl = Math.abs(A[i][i]);\n    for (let k = i + 1; k < n; k++) {\n      if (Math.abs(A[k][i]) > maxEl) {\n        maxEl = Math.abs(A[k][i]);\n        maxRow = k;\n      }\n    }\n\n    // Swap the pivot row with the current row\n    [A[i], A[maxRow]] = [A[maxRow], A[i]];\n\n    // Eliminate all rows below this one\n    for (let k = i + 1; k < n; k++) {\n      const c = -A[k][i] / A[i][i];\n      for (let j = i; j < n + 1; j++) {\n        A[k][j] += c * A[i][j];\n      }\n    }\n  }\n\n  // Back substitution to solve for the values in the solution vector\n  const res = Array(n).fill(0)\n  for (let i = n - 1; i >= 0; i--) {\n    res[i] = parseFloat((A[i][n] / A[i][i]).toFixed(6)); // Round to 6 decimal places\n    for (let k = i - 1; k >= 0; k--) {\n      A[k][n] -= A[k][i] * res[i];\n    }\n  }\n\n  return res;\n}\n\n// Test Cases\n\nfunction runTestCases() {\n  const testCases = [\n    {\n      testcase: \'am1\',\n      am: [\n        [2, 1, -1, 8],    //  2x + y -z = 8\n        [-3, -1, 2, -11], // -3x - y +2z = -11\n        [-2, 1, 2, -3],   // -2x + y +2z = -3\n      ],\n      expected: [2, 3, -1]\n    },\n    {\n      testcase: \'am2\',\n      am: [\n        [1, 2, -1, 2],  // x + 2y - z = 2\n        [1, 1, -1, 0],  // x + y - z = 0\n        [2, -1, 1, 3]   // 2x - y + z = 3\n      ],\n      expected: [1, 2, 3]\n    }\n  ];\n\n  testCases.forEach(({ testcase, am, expected }) => {\n    const result = gauss(am);\n    console.log(`${testcase}:`, JSON.stringify(result), \'Expected:\', JSON.stringify(expected));\n    console.log(`Pass: ${JSON.stringify(result) === JSON.stringify(expected)}`);\n  });\n}\n\nrunTestCases();\n\n/* \n"am1:" "[2,3,-1]" "Expected:" "[2,3,-1]"\n"Pass: true"\n"am2:" "[1,2,3]" "Expected:" "[1,2,3]"\n"Pass: true"\n */\n'})}),"\n",(0,t.jsx)(e.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Time Complexity"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Forward Elimination: O(n\xb3)"}),"\n",(0,t.jsx)(e.li,{children:"Back Substitution: O(n\xb2)"}),"\n",(0,t.jsx)(e.li,{children:"Overall: O(n\xb3)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Space Complexity"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"O(n\xb2) for storing the matrix"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Optimization Tips"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Use partial pivoting for numerical stability"}),"\n",(0,t.jsx)(e.li,{children:"Implement sparse matrix optimizations for large, sparse systems"}),"\n",(0,t.jsx)(e.li,{children:"Consider using WebAssembly for large matrices"}),"\n",(0,t.jsx)(e.li,{children:"Use typed arrays for better performance with large datasets"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"applications-and-extensions",children:"Applications and Extensions"}),"\n",(0,t.jsx)(e.h3,{id:"1-linear-system-applications",children:"1. Linear System Applications"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Circuit analysis"}),"\n",(0,t.jsx)(e.li,{children:"Economic models"}),"\n",(0,t.jsx)(e.li,{children:"Computer graphics transformations"}),"\n",(0,t.jsx)(e.li,{children:"Chemical reaction balancing"}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"2-extensions",children:"2. Extensions"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"LU Decomposition"}),"\n",(0,t.jsx)(e.li,{children:"QR Factorization"}),"\n",(0,t.jsx)(e.li,{children:"Iterative methods for large systems"}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"3-related-algorithms",children:"3. Related Algorithms"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Gauss-Jordan Elimination"}),"\n",(0,t.jsx)(e.li,{children:"Crout's Method"}),"\n",(0,t.jsx)(e.li,{children:"Cholesky Decomposition"}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(h,{...n})}):h(n)}}}]);