"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4097],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var i=s(96540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}},98938:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>d});var i=s(74848),r=s(28453);const l={title:"Spotify System Design",description:"Complete system design for Spotify music streaming platform",author:"System Design Template",date:"2025-10-05",tags:["system-design","streaming","spotify","music","audio"]},t="Spotify System Design",a={id:"System Design Problems/Spotify System Design",title:"Spotify System Design",description:"Complete system design for Spotify music streaming platform",source:"@site/docs/System Design Problems/Spotify System Design.mdx",sourceDirName:"System Design Problems",slug:"/System Design Problems/Spotify System Design",permalink:"/js.enigma/docs/System Design Problems/Spotify System Design",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/System Design Problems/Spotify System Design.mdx",tags:[{inline:!0,label:"system-design",permalink:"/js.enigma/docs/tags/system-design"},{inline:!0,label:"streaming",permalink:"/js.enigma/docs/tags/streaming"},{inline:!0,label:"spotify",permalink:"/js.enigma/docs/tags/spotify"},{inline:!0,label:"music",permalink:"/js.enigma/docs/tags/music"},{inline:!0,label:"audio",permalink:"/js.enigma/docs/tags/audio"}],version:"current",frontMatter:{title:"Spotify System Design",description:"Complete system design for Spotify music streaming platform",author:"System Design Template",date:"2025-10-05",tags:["system-design","streaming","spotify","music","audio"]},sidebar:"tutorialSidebar",previous:{title:"Rate Limiter System Design",permalink:"/js.enigma/docs/System Design Problems/Rate Limiter System Design"},next:{title:"Twitter System Design",permalink:"/js.enigma/docs/System Design Problems/Twitter System Design"}},c={},d=[{value:"1. Requirements (~5 minutes)",id:"1-requirements-5-minutes",level:2},{value:"Functional Requirements",id:"functional-requirements",level:3},{value:"Non-functional Requirements",id:"non-functional-requirements",level:3},{value:"Capacity Estimation",id:"capacity-estimation",level:3},{value:"2. Core Entities (~2 minutes)",id:"2-core-entities-2-minutes",level:2},{value:"User",id:"user",level:3},{value:"Track",id:"track",level:3},{value:"Artist",id:"artist",level:3},{value:"Album",id:"album",level:3},{value:"Playlist",id:"playlist",level:3},{value:"ListeningHistory",id:"listeninghistory",level:3},{value:"SocialActivity",id:"socialactivity",level:3},{value:"3. API Interface (~5 minutes)",id:"3-api-interface-5-minutes",level:2},{value:"Protocol Choice",id:"protocol-choice",level:3},{value:"API Endpoints",id:"api-endpoints",level:3},{value:"Authentication",id:"authentication",level:4},{value:"Search &amp; Browse",id:"search--browse",level:4},{value:"Playback",id:"playback",level:4},{value:"Playlists",id:"playlists",level:4},{value:"Social Features",id:"social-features",level:4},{value:"4. Data Flow (~5 minutes)",id:"4-data-flow-5-minutes",level:2},{value:"Music Streaming Flow",id:"music-streaming-flow",level:3},{value:"5. High Level Design (~10-15 minutes)",id:"5-high-level-design-10-15-minutes",level:2},{value:"Architecture Components",id:"architecture-components",level:3},{value:"6. Architecture Diagram",id:"6-architecture-diagram",level:2},{value:"7. Deep Dives (~10 minutes)",id:"7-deep-dives-10-minutes",level:2},{value:"7.1 Audio Streaming Architecture",id:"71-audio-streaming-architecture",level:3},{value:"Audio Formats &amp; Quality Levels",id:"audio-formats--quality-levels",level:4},{value:"Streaming Protocol",id:"streaming-protocol",level:4},{value:"7.2 Search System (Elasticsearch)",id:"72-search-system-elasticsearch",level:3},{value:"Index Structure",id:"index-structure",level:4},{value:"Query Strategy",id:"query-strategy",level:4},{value:"7.3 Playlist Management (MongoDB)",id:"73-playlist-management-mongodb",level:3},{value:"Document Structure",id:"document-structure",level:4},{value:"Operations",id:"operations",level:4},{value:"7.4 Listening History &amp; Scrobbling (Cassandra)",id:"74-listening-history--scrobbling-cassandra",level:3},{value:"Table Design",id:"table-design",level:4},{value:"Scrobble Processing",id:"scrobble-processing",level:4},{value:"7.5 Caching Strategy (Multi-Tier)",id:"75-caching-strategy-multi-tier",level:3},{value:"Layer 1: CDN Cache (Audio Files)",id:"layer-1-cdn-cache-audio-files",level:4},{value:"Layer 2: Redis Cache (Hot Metadata)",id:"layer-2-redis-cache-hot-metadata",level:4},{value:"Layer 3: Application-Level Cache",id:"layer-3-application-level-cache",level:4},{value:"7.6 Real-Time Social Features (WebSocket)",id:"76-real-time-social-features-websocket",level:3},{value:"WebSocket Architecture",id:"websocket-architecture",level:4},{value:"Message Flow",id:"message-flow",level:4},{value:"7.7 Recommendation Engine",id:"77-recommendation-engine",level:3},{value:"Data Sources",id:"data-sources",level:4},{value:"Pipeline",id:"pipeline",level:4},{value:"Serving Layer",id:"serving-layer",level:4},{value:"7.8 Multi-Device Synchronization (Spotify Connect)",id:"78-multi-device-synchronization-spotify-connect",level:3},{value:"State Management",id:"state-management",level:4},{value:"Device Handoff Flow",id:"device-handoff-flow",level:4},{value:"7.9 Handling Peak Traffic &amp; Rate Limiting",id:"79-handling-peak-traffic--rate-limiting",level:3},{value:"Auto-Scaling Strategy",id:"auto-scaling-strategy",level:4},{value:"Rate Limiting (Redis Token Bucket)",id:"rate-limiting-redis-token-bucket",level:4},{value:"7.10 Offline Mode (Premium Feature)",id:"710-offline-mode-premium-feature",level:3},{value:"Download Flow",id:"download-flow",level:4},{value:"DRM &amp; Licensing",id:"drm--licensing",level:4},{value:"7.11 Monitoring &amp; Observability",id:"711-monitoring--observability",level:3},{value:"Key Metrics",id:"key-metrics",level:4},{value:"Alerting Examples",id:"alerting-examples",level:4},{value:"Summary",id:"summary",level:2},{value:"Key Design Decisions",id:"key-design-decisions",level:3},{value:"Scalability Achieved",id:"scalability-achieved",level:3},{value:"Trade-offs &amp; Considerations",id:"trade-offs--considerations",level:2},{value:"Key Differences from Netflix",id:"key-differences-from-netflix",level:2},{value:"Future Enhancements",id:"future-enhancements",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"spotify-system-design",children:"Spotify System Design"})}),"\n",(0,i.jsx)(n.h2,{id:"1-requirements-5-minutes",children:"1. Requirements (~5 minutes)"}),"\n",(0,i.jsx)(n.h3,{id:"functional-requirements",children:"Functional Requirements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u2705 Users should be able to ",(0,i.jsx)(n.strong,{children:"search and browse"})," music (songs, albums, artists, playlists)"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 Users should be able to ",(0,i.jsx)(n.strong,{children:"stream music"})," with offline download support"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 Users should be able to ",(0,i.jsx)(n.strong,{children:"create and share playlists"})]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 Users should be able to ",(0,i.jsx)(n.strong,{children:"follow artists"})," and get personalized recommendations"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 System should support ",(0,i.jsx)(n.strong,{children:"real-time lyrics"})," and podcast streaming"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 Users should be able to ",(0,i.jsx)(n.strong,{children:"connect to multiple devices"})," (seamless handoff)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"non-functional-requirements",children:"Non-functional Requirements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u2705 The system should prioritize ",(0,i.jsx)(n.strong,{children:"availability"})," over consistency (CAP - users should always stream)"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 The system should scale to support ",(0,i.jsx)(n.strong,{children:"500M+ users"})," (100M concurrent)"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 Audio streaming should have ",(0,i.jsx)(n.strong,{children:"instant playback"})," (< 200ms latency)"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 The system should be ",(0,i.jsx)(n.strong,{children:"highly available"})," (99.99% uptime)"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 The system should handle ",(0,i.jsx)(n.strong,{children:"320 kbps high-quality audio"})," streaming"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 The system should provide ",(0,i.jsx)(n.strong,{children:"real-time social features"})," (collaborative playlists, friend activity)"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 Search results should be ",(0,i.jsx)(n.strong,{children:"fast"})," (< 100ms P99)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"capacity-estimation",children:"Capacity Estimation"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Assumptions:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Total Users: 500M"}),"\n",(0,i.jsx)(n.li,{children:"Daily Active Users (DAU): 200M"}),"\n",(0,i.jsx)(n.li,{children:"Concurrent listeners (peak): 100M"}),"\n",(0,i.jsx)(n.li,{children:"Average song size: 3-5 MB (320 kbps)"}),"\n",(0,i.jsx)(n.li,{children:"Average listening time: 2.5 hours/day (~50 songs)"}),"\n",(0,i.jsx)(n.li,{children:"Catalog size: 100M tracks"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Storage:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Audio Storage = 100M tracks \xd7 5 MB \xd7 3 quality levels = 1.5 PB\nWith CDN replication (\xd730 regions) = 45 PB\nMetadata Storage = 100M tracks \xd7 10 KB = 1 TB\nUser Data (playlists, history) = 500M users \xd7 5 MB = 2.5 PB\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bandwidth:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Peak Concurrent Streams = 100M users\nAverage Bitrate = 320 kbps = 40 KB/s\nPeak Bandwidth = 100M \xd7 40 KB/s = 4 TB/s = 32 Tbps\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"QPS:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Metadata Requests = 200M DAU \xd7 100 requests/day / 86400s = ~230K QPS\nAudio Chunk Requests = 100M concurrent \xd7 10 chunks/sec = 1B requests/sec (CDN)\nSearch Queries = 200M DAU \xd7 10 searches/day / 86400s = ~23K QPS\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"2-core-entities-2-minutes",children:"2. Core Entities (~2 minutes)"}),"\n",(0,i.jsx)(n.h3,{id:"user",children:"User"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"userId"}),", ",(0,i.jsx)(n.code,{children:"email"}),", ",(0,i.jsx)(n.code,{children:"displayName"}),", ",(0,i.jsx)(n.code,{children:"subscriptionType"})," (Free/Premium), ",(0,i.jsx)(n.code,{children:"country"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"track",children:"Track"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"trackId"}),", ",(0,i.jsx)(n.code,{children:"title"}),", ",(0,i.jsx)(n.code,{children:"artistIds[]"}),", ",(0,i.jsx)(n.code,{children:"albumId"}),", ",(0,i.jsx)(n.code,{children:"duration"}),", ",(0,i.jsx)(n.code,{children:"releaseDate"}),", ",(0,i.jsx)(n.code,{children:"genres[]"}),", ",(0,i.jsx)(n.code,{children:"isrc"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"artist",children:"Artist"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"artistId"}),", ",(0,i.jsx)(n.code,{children:"name"}),", ",(0,i.jsx)(n.code,{children:"bio"}),", ",(0,i.jsx)(n.code,{children:"imageUrl"}),", ",(0,i.jsx)(n.code,{children:"followerCount"}),", ",(0,i.jsx)(n.code,{children:"verified"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"album",children:"Album"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"albumId"}),", ",(0,i.jsx)(n.code,{children:"title"}),", ",(0,i.jsx)(n.code,{children:"artistId"}),", ",(0,i.jsx)(n.code,{children:"releaseDate"}),", ",(0,i.jsx)(n.code,{children:"trackIds[]"}),", ",(0,i.jsx)(n.code,{children:"coverArtUrl"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"playlist",children:"Playlist"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"playlistId"}),", ",(0,i.jsx)(n.code,{children:"name"}),", ",(0,i.jsx)(n.code,{children:"ownerId"}),", ",(0,i.jsx)(n.code,{children:"trackIds[]"}),", ",(0,i.jsx)(n.code,{children:"isPublic"}),", ",(0,i.jsx)(n.code,{children:"isCollaborative"}),", ",(0,i.jsx)(n.code,{children:"followerCount"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"listeninghistory",children:"ListeningHistory"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"userId"}),", ",(0,i.jsx)(n.code,{children:"trackId"}),", ",(0,i.jsx)(n.code,{children:"playedAt"}),", ",(0,i.jsx)(n.code,{children:"duration"}),", ",(0,i.jsx)(n.code,{children:"context"})," (playlist/album/radio)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"socialactivity",children:"SocialActivity"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"userId"}),", ",(0,i.jsx)(n.code,{children:"activityType"})," (listening/playlist_created), ",(0,i.jsx)(n.code,{children:"trackId"}),", ",(0,i.jsx)(n.code,{children:"timestamp"})]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"3-api-interface-5-minutes",children:"3. API Interface (~5 minutes)"}),"\n",(0,i.jsx)(n.h3,{id:"protocol-choice",children:"Protocol Choice"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"REST"})," for metadata and user operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"WebSocket"})," for real-time features (friend activity, collaborative playlists)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"HTTP/2"})," for audio streaming with range requests"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,i.jsx)(n.h4,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:'POST /v1/auth/login\n{ "email": "user@example.com", "password": "hash" }\nResponse: { "accessToken": "jwt", "refreshToken": "refresh_jwt" }\n'})}),"\n",(0,i.jsx)(n.h4,{id:"search--browse",children:"Search & Browse"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:'GET /v1/search?q=bohemian&type=track,artist&limit=20\nResponse: {\n  "tracks": [Track],\n  "artists": [Artist],\n  "albums": [Album]\n}\n\nGET /v1/browse/featured-playlists?country=US\nGET /v1/browse/new-releases\nGET /v1/browse/categories/{categoryId}/playlists\n'})}),"\n",(0,i.jsx)(n.h4,{id:"playback",children:"Playback"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:'GET /v1/tracks/{trackId}/stream?quality=high\nResponse: Binary audio stream (MP3/OGG/AAC)\n\nPOST /v1/me/player/play\n{\n  "context_uri": "spotify:playlist:xyz",\n  "offset": { "position": 5 },\n  "position_ms": 0\n}\n\nPUT /v1/me/player/pause\nPUT /v1/me/player/next\nPUT /v1/me/player/previous\nGET /v1/me/player/currently-playing\n'})}),"\n",(0,i.jsx)(n.h4,{id:"playlists",children:"Playlists"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:'GET /v1/playlists/{playlistId}\nPOST /v1/users/{userId}/playlists\n{ "name": "My Playlist", "public": true }\n\nPOST /v1/playlists/{playlistId}/tracks\n{ "uris": ["spotify:track:abc", "spotify:track:def"] }\n\nDELETE /v1/playlists/{playlistId}/tracks\n'})}),"\n",(0,i.jsx)(n.h4,{id:"social-features",children:"Social Features"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:'GET /v1/me/following?type=artist\nPUT /v1/me/following?type=artist&ids=artistId1,artistId2\n\nGET /v1/me/player/recently-played?limit=50\nGET /v1/me/top/tracks?time_range=short_term\n\nWebSocket: wss://realtime.spotify.com/social\nMessages: { "type": "friend_activity", "data": {...} }\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"4-data-flow-5-minutes",children:"4. Data Flow (~5 minutes)"}),"\n",(0,i.jsx)(n.h3,{id:"music-streaming-flow",children:"Music Streaming Flow"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User Searches"}),": Client queries search service (Elasticsearch)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Select Track"}),": User selects track, client fetches metadata from cache/DB"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Request Stream"}),": Client requests audio stream URL from API"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CDN Delivery"}),": Client streams audio chunks from nearest CDN edge"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Buffer Ahead"}),": Client buffers 30-60 seconds ahead for seamless playback"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Track Progress"}),": Client sends scrobbles (every 30s) to backend asynchronously"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Update Feed"}),": Background service updates user's listening history and social feed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Generate Recommendations"}),": ML pipeline processes listening patterns"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"5-high-level-design-10-15-minutes",children:"5. High Level Design (~10-15 minutes)"}),"\n",(0,i.jsx)(n.h3,{id:"architecture-components",children:"Architecture Components"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Client Layer:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Desktop/Mobile/Web Apps with audio player"}),"\n",(0,i.jsx)(n.li,{children:"Offline storage for downloaded tracks (Premium users)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Edge Layer:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"CDN (CloudFront/Fastly) - caches audio files globally"}),"\n",(0,i.jsx)(n.li,{children:"Edge Servers - 200-300 PoPs worldwide"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"API Layer:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"API Gateway - authentication, rate limiting"}),"\n",(0,i.jsx)(n.li,{children:"Load Balancer - distributes traffic"}),"\n",(0,i.jsxs)(n.li,{children:["Microservices:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Playback Service"})," - stream management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Search Service"})," - query processing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Playlist Service"})," - CRUD operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Social Service"})," - friend activity, following"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User Service"})," - profiles, subscriptions"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Data Layer:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PostgreSQL"})," - users, tracks, albums, artists (normalized)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cassandra"})," - listening history, scrobbles (time-series)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"MongoDB"})," - playlists (flexible schema, nested arrays)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Redis"})," - caching, session management, real-time features"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Elasticsearch"})," - full-text search index"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"S3/Object Storage"})," - audio files, images"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Processing Layer:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Kafka"})," - event streaming (scrobbles, social events)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Recommendation Engine"})," - ML model (collaborative filtering)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Analytics Pipeline"})," - Spark jobs for insights"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Background Workers"})," - async processing"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Real-time Layer:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"WebSocket Servers"})," - friend activity, collaborative editing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Redis Pub/Sub"})," - message broadcasting"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"6-architecture-diagram",children:"6. Architecture Diagram"}),"\n",(0,i.jsx)(n.mermaid,{value:'graph TB\n    subgraph "Client Layer"\n        Desktop[Desktop App]\n        Mobile[Mobile App]\n        Web[Web Player]\n    end\n\n    subgraph "Edge Layer - CDN"\n        CDN1[CDN Edge<br/>North America]\n        CDN2[CDN Edge<br/>Europe]\n        CDN3[CDN Edge<br/>Asia]\n    end\n\n    subgraph "API Gateway Layer"\n        Gateway[API Gateway<br/>Auth, Rate Limit]\n        WSGateway[WebSocket Gateway<br/>Real-time Features]\n    end\n\n    subgraph "Microservices Layer"\n        PlaybackSvc[Playback Service]\n        SearchSvc[Search Service]\n        PlaylistSvc[Playlist Service]\n        SocialSvc[Social Service]\n        UserSvc[User Service]\n        RecommendSvc[Recommendation Service]\n    end\n\n    subgraph "Cache Layer"\n        Redis[(Redis Cluster<br/>Cache, Sessions)]\n        RedisPubSub[Redis Pub/Sub<br/>Real-time Messages]\n    end\n\n    subgraph "Database Layer"\n        Postgres[(PostgreSQL<br/>Tracks, Artists,<br/>Albums, Users)]\n        Cassandra[(Cassandra<br/>Listening History,<br/>Scrobbles)]\n        MongoDB[(MongoDB<br/>Playlists,<br/>User Preferences)]\n        Elasticsearch[(Elasticsearch<br/>Search Index)]\n    end\n\n    subgraph "Storage Layer"\n        S3[S3/Object Storage<br/>Audio Files<br/>Images]\n    end\n\n    subgraph "Streaming Layer"\n        Kafka[Kafka<br/>Event Streaming]\n        Workers[Workers<br/>Async Processing]\n        MLEngine[ML Recommendation<br/>Engine]\n        Analytics[Spark Analytics<br/>Pipeline]\n    end\n\n    %% Client to CDN\n    Desktop --\x3e|Stream Audio| CDN1\n    Mobile --\x3e|Stream Audio| CDN2\n    Web --\x3e|Stream Audio| CDN3\n\n    %% Client to API\n    Desktop --\x3e|Search, Browse| Gateway\n    Mobile --\x3e|Playback Control| Gateway\n    Web --\x3e|Playlist CRUD| Gateway\n\n    %% WebSocket for Real-time\n    Desktop -.Real-time Updates.-> WSGateway\n    Mobile -.Friend Activity.-> WSGateway\n\n    %% Gateway to Services\n    Gateway --\x3e PlaybackSvc\n    Gateway --\x3e SearchSvc\n    Gateway --\x3e PlaylistSvc\n    Gateway --\x3e SocialSvc\n    Gateway --\x3e UserSvc\n\n    WSGateway --\x3e SocialSvc\n    WSGateway --\x3e RedisPubSub\n\n    %% Services to Cache\n    PlaybackSvc --\x3e Redis\n    SearchSvc --\x3e Redis\n    PlaylistSvc --\x3e Redis\n\n    %% Services to Databases\n    PlaybackSvc --\x3e Postgres\n    SearchSvc --\x3e Elasticsearch\n    PlaylistSvc --\x3e MongoDB\n    SocialSvc --\x3e Cassandra\n    UserSvc --\x3e Postgres\n\n    %% Audio Storage\n    S3 --\x3e CDN1\n    S3 --\x3e CDN2\n    S3 --\x3e CDN3\n\n    %% Event Processing\n    PlaybackSvc --\x3e|Scrobble Events| Kafka\n    SocialSvc --\x3e|Activity Events| Kafka\n\n    Kafka --\x3e Workers\n    Kafka --\x3e MLEngine\n    Kafka --\x3e Analytics\n\n    Workers --\x3e Cassandra\n    MLEngine --\x3e Redis\n    Analytics --\x3e Cassandra\n\n    style Desktop fill:#e1f5ff\n    style Mobile fill:#e1f5ff\n    style Web fill:#e1f5ff\n    style CDN1 fill:#fff4e1\n    style CDN2 fill:#fff4e1\n    style CDN3 fill:#fff4e1\n    style Kafka fill:#ffe1f5\n    style MLEngine fill:#ffe1f5'}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"7-deep-dives-10-minutes",children:"7. Deep Dives (~10 minutes)"}),"\n",(0,i.jsx)(n.h3,{id:"71-audio-streaming-architecture",children:"7.1 Audio Streaming Architecture"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Key Difference from Video"}),": Audio files are smaller (3-5 MB vs 1 GB), so we can:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Stream entire file vs chunked delivery"}),"\n",(0,i.jsx)(n.li,{children:"Support offline downloads easily"}),"\n",(0,i.jsx)(n.li,{children:"Cache more aggressively"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"audio-formats--quality-levels",children:"Audio Formats & Quality Levels"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Quality"}),(0,i.jsx)(n.th,{children:"Bitrate"}),(0,i.jsx)(n.th,{children:"Format"}),(0,i.jsx)(n.th,{children:"Use Case"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Low"}),(0,i.jsx)(n.td,{children:"96 kbps"}),(0,i.jsx)(n.td,{children:"OGG Vorbis"}),(0,i.jsx)(n.td,{children:"Mobile data saver"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Normal"}),(0,i.jsx)(n.td,{children:"160 kbps"}),(0,i.jsx)(n.td,{children:"OGG Vorbis"}),(0,i.jsx)(n.td,{children:"Free tier, default"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"High"}),(0,i.jsx)(n.td,{children:"320 kbps"}),(0,i.jsx)(n.td,{children:"OGG Vorbis"}),(0,i.jsx)(n.td,{children:"Premium users"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Lossless"}),(0,i.jsx)(n.td,{children:"1411 kbps"}),(0,i.jsx)(n.td,{children:"FLAC"}),(0,i.jsx)(n.td,{children:"Audiophiles (HiFi tier)"})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"streaming-protocol",children:"Streaming Protocol"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:"GET /v1/tracks/{trackId}/stream?quality=high\nRange: bytes=0-1048575\n\nResponse:\nHTTP/1.1 206 Partial Content\nContent-Range: bytes 0-1048575/4500000\nContent-Type: audio/ogg\nAccept-Ranges: bytes\n\n[Binary audio data]\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Client Logic:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Request file in 1MB chunks"}),"\n",(0,i.jsx)(n.li,{children:"Buffer 30-60 seconds ahead"}),"\n",(0,i.jsx)(n.li,{children:"Prefetch next 2-3 tracks in queue"}),"\n",(0,i.jsx)(n.li,{children:"Adjust quality based on network speed"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"72-search-system-elasticsearch",children:"7.2 Search System (Elasticsearch)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Challenge"}),": Search across 100M tracks, artists, albums with sub-100ms latency"]}),"\n",(0,i.jsx)(n.h4,{id:"index-structure",children:"Index Structure"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "tracks": {\n    "properties": {\n      "title": { "type": "text", "analyzer": "standard", "boost": 2.0 },\n      "artist_name": { "type": "text", "boost": 1.5 },\n      "album_name": { "type": "text" },\n      "lyrics": { "type": "text", "analyzer": "english" },\n      "genres": { "type": "keyword" },\n      "popularity": { "type": "integer" },\n      "release_date": { "type": "date" }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"query-strategy",children:"Query Strategy"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// Multi-field search with boosting\nGET /tracks/_search\n{\n  "query": {\n    "multi_match": {\n      "query": "bohemian rhapsody",\n      "fields": ["title^3", "artist_name^2", "album_name"],\n      "type": "best_fields",\n      "fuzziness": "AUTO"\n    }\n  },\n  "sort": [\n    { "_score": "desc" },\n    { "popularity": "desc" }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Optimization:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Index sharding: 50 shards \xd7 3 replicas"}),"\n",(0,i.jsx)(n.li,{children:"Search across shards in parallel"}),"\n",(0,i.jsx)(n.li,{children:"Cache top 10K queries (60% hit rate)"}),"\n",(0,i.jsx)(n.li,{children:"Autocomplete with prefix queries"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"73-playlist-management-mongodb",children:"7.3 Playlist Management (MongoDB)"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Why MongoDB?"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Flexible schema for nested arrays"}),"\n",(0,i.jsx)(n.li,{children:"Fast array operations (add/remove tracks)"}),"\n",(0,i.jsx)(n.li,{children:"Horizontal scaling with sharding"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"document-structure",children:"Document Structure"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'{\n  _id: "playlist-123",\n  name: "Chill Vibes",\n  owner_id: "user-456",\n  is_public: true,\n  is_collaborative: false,\n  tracks: [\n    {\n      track_id: "track-789",\n      added_by: "user-456",\n      added_at: ISODate("2025-01-15T10:30:00Z")\n    },\n    // ... up to 10,000 tracks\n  ],\n  follower_count: 15420,\n  image_url: "https://cdn.spotify.com/...",\n  created_at: ISODate("2024-06-01T00:00:00Z"),\n  updated_at: ISODate("2025-10-05T08:15:00Z")\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"operations",children:"Operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// Add tracks (atomic operation)\ndb.playlists.updateOne(\n  { _id: "playlist-123" },\n  {\n    $push: {\n      tracks: {\n        $each: [{ track_id: "new-track", added_by: "user-456", added_at: new Date() }],\n        $position: 0  // Add to beginning\n      }\n    },\n    $set: { updated_at: new Date() }\n  }\n)\n\n// Remove tracks\ndb.playlists.updateOne(\n  { _id: "playlist-123" },\n  { $pull: { tracks: { track_id: "track-789" } } }\n)\n\n// Collaborative playlists (optimistic locking)\ndb.playlists.updateOne(\n  { _id: "playlist-123", version: 5 },\n  { $push: { tracks: {...} }, $inc: { version: 1 } }\n)\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Sharding Strategy:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Shard key: ",(0,i.jsx)(n.code,{children:"owner_id"})," (co-locate user's playlists)"]}),"\n",(0,i.jsx)(n.li,{children:"Hot shard problem: Popular public playlists cached in Redis"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"74-listening-history--scrobbling-cassandra",children:"7.4 Listening History & Scrobbling (Cassandra)"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Why Cassandra?"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Write-heavy: 100M concurrent users \xd7 1 scrobble/30s = 3.3M writes/sec"}),"\n",(0,i.jsx)(n.li,{children:"Time-series data (query by user + time range)"}),"\n",(0,i.jsx)(n.li,{children:"Eventual consistency acceptable"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"table-design",children:"Table Design"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE listening_history (\n    user_id UUID,\n    played_at TIMESTAMP,\n    track_id UUID,\n    duration_ms INT,\n    context TEXT,  -- \"playlist:xyz\" or \"album:abc\"\n    shuffle BOOLEAN,\n    repeat_mode TEXT,\n    PRIMARY KEY ((user_id), played_at)\n) WITH CLUSTERING ORDER BY (played_at DESC)\nAND compaction = {'class': 'TimeWindowCompactionStrategy'};\n\n-- Secondary index for analytics\nCREATE TABLE tracks_by_popularity (\n    date DATE,\n    track_id UUID,\n    play_count COUNTER,\n    PRIMARY KEY ((date), track_id)\n);\n"})}),"\n",(0,i.jsx)(n.h4,{id:"scrobble-processing",children:"Scrobble Processing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Client --(every 30s)--\x3e Kafka --\x3e Batch Worker --\x3e Cassandra\n                                     |\n                                     +--\x3e Update Analytics (daily charts)\n                                     +--\x3e ML Pipeline (recommendations)\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Batching Strategy:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Buffer 1000 scrobbles or 10 seconds"}),"\n",(0,i.jsx)(n.li,{children:"Batch insert to Cassandra"}),"\n",(0,i.jsx)(n.li,{children:"Reduces write amplification"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"75-caching-strategy-multi-tier",children:"7.5 Caching Strategy (Multi-Tier)"}),"\n",(0,i.jsx)(n.h4,{id:"layer-1-cdn-cache-audio-files",children:"Layer 1: CDN Cache (Audio Files)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"95% hit rate for popular tracks (top 1M tracks)"}),"\n",(0,i.jsx)(n.li,{children:"TTL: 90 days"}),"\n",(0,i.jsx)(n.li,{children:"Cache warming: Push new releases to all edges"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"layer-2-redis-cache-hot-metadata",children:"Layer 2: Redis Cache (Hot Metadata)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Track metadata caching\nCACHE_TTL = {\n    "track:metadata": 3600,      # 1 hour\n    "playlist:tracks": 300,       # 5 minutes\n    "user:recent": 600,           # 10 minutes\n    "search:results": 1800,       # 30 minutes\n    "daily:top:tracks": 86400     # 24 hours\n}\n\n# Cache-aside pattern\ndef get_track(track_id):\n    cache_key = f"track:{track_id}"\n    cached = redis.get(cache_key)\n\n    if cached:\n        return json.loads(cached)\n\n    track = db.query(f"SELECT * FROM tracks WHERE id = {track_id}")\n    redis.setex(cache_key, CACHE_TTL["track:metadata"], json.dumps(track))\n    return track\n'})}),"\n",(0,i.jsx)(n.h4,{id:"layer-3-application-level-cache",children:"Layer 3: Application-Level Cache"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@Cacheable(value = "popularTracks", key = "#country")\npublic List<Track> getPopularTracks(String country) {\n    return trackRepository.findTop50ByCountry(country);\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"76-real-time-social-features-websocket",children:"7.6 Real-Time Social Features (WebSocket)"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Use Cases:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Friend activity feed (who's listening to what)"}),"\n",(0,i.jsx)(n.li,{children:"Collaborative playlist editing"}),"\n",(0,i.jsx)(n.li,{children:"Live lyrics synchronization"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"websocket-architecture",children:"WebSocket Architecture"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Client <--WebSocket--\x3e Gateway <--Redis Pub/Sub--\x3e Services\n                          |\n                     Load Balanced\n                    (100K connections/server)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"message-flow",children:"Message Flow"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// Client subscribes to friend activity\nws.send({\n  type: "subscribe",\n  channel: "user:123:friends_activity"\n})\n\n// Backend publishes when friend plays song\nredis.publish("user:123:friends_activity", {\n  friend_id: "user-456",\n  track_id: "track-789",\n  artist_name: "Queen",\n  track_name: "Bohemian Rhapsody",\n  timestamp: 1696512000\n})\n\n// Client receives real-time update\nws.onmessage = (event) => {\n  // Update friend activity UI\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Scaling WebSockets:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Sticky sessions (user always connects to same server)"}),"\n",(0,i.jsx)(n.li,{children:"Redis Pub/Sub for cross-server messaging"}),"\n",(0,i.jsx)(n.li,{children:"Auto-scale based on connection count"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"77-recommendation-engine",children:"7.7 Recommendation Engine"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Approach"}),": Collaborative Filtering + Audio Features + Contextual Data"]}),"\n",(0,i.jsx)(n.h4,{id:"data-sources",children:"Data Sources"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Listening History"})," (Cassandra)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Audio Features"})," (Spotify's Audio Analysis API)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Tempo, key, energy, danceability, valence"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Contextual Data"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Time of day, day of week"}),"\n",(0,i.jsx)(n.li,{children:"Listening device (mobile, desktop, car)"}),"\n",(0,i.jsx)(n.li,{children:"Current playlist/album context"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"pipeline",children:"Pipeline"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Kafka (Scrobbles) --\x3e Feature Engineering --\x3e ML Model --\x3e Redis Cache\n                                                  |\n                                            TensorFlow/PyTorch\n                                       (Matrix Factorization + DNNs)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"serving-layer",children:"Serving Layer"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Pre-computed recommendations (batch job runs every 6 hours)\ndef get_recommendations(user_id):\n    cache_key = f"rec:daily:{user_id}"\n    cached = redis.lrange(cache_key, 0, 49)  # Top 50 tracks\n\n    if cached:\n        return [get_track(tid) for tid in cached]\n\n    # Fallback to genre-based or popular tracks\n    return get_popular_by_user_genres(user_id)\n\n# Real-time recommendations (session-based)\ndef get_radio_next_track(user_id, current_track_id):\n    # Use current track\'s audio features + user preferences\n    # Return similar tracks with some randomness\n    pass\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"78-multi-device-synchronization-spotify-connect",children:"7.8 Multi-Device Synchronization (Spotify Connect)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Feature"}),": Start playing on phone, seamlessly continue on laptop"]}),"\n",(0,i.jsx)(n.h4,{id:"state-management",children:"State Management"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// User\'s playback state stored in Redis\n{\n  "user:123:playback_state": {\n    "track_id": "track-789",\n    "position_ms": 45000,\n    "is_playing": true,\n    "device_id": "desktop-abc",\n    "volume": 80,\n    "shuffle": false,\n    "repeat_mode": "context",\n    "updated_at": 1696512000\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"device-handoff-flow",children:"Device Handoff Flow"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Device A"})," (phone) playing track \u2192 pushes state to Redis every 5s"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User switches to Device B"})," (laptop)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Device B"})," fetches latest state from Redis"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Device B"})," resumes playback from ",(0,i.jsx)(n.code,{children:"position_ms"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Device A"})," receives notification to pause via WebSocket"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// WebSocket message to old device\n{\n  "type": "transfer_playback",\n  "new_device_id": "laptop-xyz",\n  "action": "pause"\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"79-handling-peak-traffic--rate-limiting",children:"7.9 Handling Peak Traffic & Rate Limiting"}),"\n",(0,i.jsx)(n.h4,{id:"auto-scaling-strategy",children:"Auto-Scaling Strategy"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# Kubernetes HPA\nmin_replicas: 100\nmax_replicas: 2000\ntarget_cpu_utilization: 70%\n\n# Peak hours: 6 PM - 11 PM (3x traffic)\n# Scale up 30 minutes before peak\n"})}),"\n",(0,i.jsx)(n.h4,{id:"rate-limiting-redis-token-bucket",children:"Rate Limiting (Redis Token Bucket)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def is_rate_limited(user_id, action):\n    key = f"ratelimit:{action}:{user_id}"\n\n    # Token bucket algorithm\n    current = redis.get(key) or 0\n\n    if current >= MAX_REQUESTS_PER_MINUTE[action]:\n        return True\n\n    redis.incr(key)\n    redis.expire(key, 60)  # 1 minute window\n    return False\n\n# Limits\nMAX_REQUESTS_PER_MINUTE = {\n    "search": 30,\n    "playlist_modify": 20,\n    "track_play": 100  # Higher for playback\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"710-offline-mode-premium-feature",children:"7.10 Offline Mode (Premium Feature)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Challenge"}),": Allow users to download songs for offline playback"]}),"\n",(0,i.jsx)(n.h4,{id:"download-flow",children:"Download Flow"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"User marks playlist for offline"}),"\n",(0,i.jsx)(n.li,{children:"Client downloads tracks in background (when on WiFi)"}),"\n",(0,i.jsx)(n.li,{children:"Tracks encrypted with AES-256 + user-specific key"}),"\n",(0,i.jsx)(n.li,{children:"Stored in local database (SQLite)"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"drm--licensing",children:"DRM & Licensing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Encrypted Track = AES_256(audio_data, user_key)\nuser_key = HMAC(user_id + device_id, master_secret)\n\nPlayback:\n1. Check if user subscription is active (heartbeat every 30 days)\n2. Decrypt track with user_key\n3. Play decrypted audio\n4. If subscription expires, delete all offline tracks\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Storage Limits:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Free tier: 0 downloads"}),"\n",(0,i.jsx)(n.li,{children:"Premium: 10,000 tracks across 5 devices"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"711-monitoring--observability",children:"7.11 Monitoring & Observability"}),"\n",(0,i.jsx)(n.h4,{id:"key-metrics",children:"Key Metrics"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Playback Quality:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Time to First Byte (TTFB)"}),": < 200ms"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Buffering Ratio"}),": < 1% of playback time"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Failed Streams"}),": < 0.1%"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Audio Quality Distribution"})," (96/160/320 kbps)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Application:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"API latency (P50, P95, P99)"}),"\n",(0,i.jsx)(n.li,{children:"Search latency (< 100ms P99)"}),"\n",(0,i.jsx)(n.li,{children:"Error rates (4xx, 5xx)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Infrastructure:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"CDN hit ratio (target: > 95%)"}),"\n",(0,i.jsx)(n.li,{children:"Database query latency"}),"\n",(0,i.jsx)(n.li,{children:"Kafka lag (< 10s)"}),"\n",(0,i.jsx)(n.li,{children:"Redis hit ratio (> 90%)"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"alerting-examples",children:"Alerting Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"Alert: High Buffering Rate\nCondition: buffering_ratio > 2% for 5 minutes in any region\nAction: Check CDN health, scale edge servers\n\nAlert: Search Latency Spike\nCondition: P99 search latency > 200ms\nAction: Check Elasticsearch cluster, increase cache TTL\n\nAlert: Scrobble Lag\nCondition: Kafka consumer lag > 60 seconds\nAction: Scale consumer groups, check Cassandra write performance\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsx)(n.h3,{id:"key-design-decisions",children:"Key Design Decisions"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CDN-Heavy Architecture"}),": 95% of audio traffic served from edge"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Polyglot Persistence"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"PostgreSQL (normalized metadata)"}),"\n",(0,i.jsx)(n.li,{children:"Cassandra (time-series, high writes)"}),"\n",(0,i.jsx)(n.li,{children:"MongoDB (flexible playlists)"}),"\n",(0,i.jsx)(n.li,{children:"Elasticsearch (full-text search)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Real-Time Features"}),": WebSocket + Redis Pub/Sub for social features"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Aggressive Caching"}),": Multi-tier (CDN \u2192 Redis \u2192 DB)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Async Processing"}),": Kafka for scrobbles, non-blocking analytics"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Horizontal Scaling"}),": Stateless microservices, auto-scaling"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Offline Support"}),": Encrypted local storage for Premium users"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"scalability-achieved",children:"Scalability Achieved"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 500M+ users, 100M concurrent streams"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 < 200ms playback latency"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 99.99% availability"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Sub-100ms search results"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Real-time social features"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"trade-offs--considerations",children:"Trade-offs & Considerations"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Decision"}),(0,i.jsx)(n.th,{children:"Pro"}),(0,i.jsx)(n.th,{children:"Con"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"CDN Push Strategy"}),(0,i.jsx)(n.td,{children:"Lower latency, predictable performance"}),(0,i.jsx)(n.td,{children:"Higher storage costs (~45 PB)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MongoDB for Playlists"}),(0,i.jsx)(n.td,{children:"Flexible schema, fast array ops"}),(0,i.jsx)(n.td,{children:"Complex queries limited, need indexing"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Cassandra for History"}),(0,i.jsx)(n.td,{children:"Massive write throughput"}),(0,i.jsx)(n.td,{children:"Eventual consistency, complex query patterns"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"WebSocket for Social"}),(0,i.jsx)(n.td,{children:"Real-time updates, low latency"}),(0,i.jsx)(n.td,{children:"Connection management complexity, server costs"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Pre-computed Recommendations"}),(0,i.jsx)(n.td,{children:"Fast serving"}),(0,i.jsx)(n.td,{children:"Stale data (6-hour refresh cycle)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Offline DRM"}),(0,i.jsx)(n.td,{children:"Enables offline playback"}),(0,i.jsx)(n.td,{children:"Complex licensing, key management"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"key-differences-from-netflix",children:"Key Differences from Netflix"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Aspect"}),(0,i.jsx)(n.th,{children:"Spotify"}),(0,i.jsx)(n.th,{children:"Netflix"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"File Size"}),(0,i.jsx)(n.td,{children:"3-5 MB (songs)"}),(0,i.jsx)(n.td,{children:"1-5 GB (movies)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Streaming"}),(0,i.jsx)(n.td,{children:"Entire file or chunked"}),(0,i.jsx)(n.td,{children:"Always chunked (HLS/DASH)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Offline"}),(0,i.jsx)(n.td,{children:"Common (Premium feature)"}),(0,i.jsx)(n.td,{children:"Rare (limited catalog)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Social Features"}),(0,i.jsx)(n.td,{children:"Heavy (friend activity, collaborative playlists)"}),(0,i.jsx)(n.td,{children:"Light (shared profiles)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Content Creation"}),(0,i.jsx)(n.td,{children:"Artist uploads, licensing"}),(0,i.jsx)(n.td,{children:"Original + licensed content"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Recommendation"}),(0,i.jsx)(n.td,{children:"Track-level, session-based"}),(0,i.jsx)(n.td,{children:"Title-level, slower refresh"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Real-time Sync"}),(0,i.jsx)(n.td,{children:"Multi-device handoff critical"}),(0,i.jsx)(n.td,{children:"Less critical"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"future-enhancements",children:"Future Enhancements"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AI DJ"}),": Personalized radio with AI-generated commentary"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Spatial Audio"}),": Immersive 3D audio experience"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Live Concerts"}),": Exclusive live streaming events"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Social Listening Rooms"}),": Real-time listening parties"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Artist Direct Uploads"}),": SoundCloud-style creator tools"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Blockchain NFTs"}),": Digital collectibles for super fans"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Voice Commands"}),": Hands-free playback control"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Mood Detection"}),": Auto-adjust music based on user sentiment"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);