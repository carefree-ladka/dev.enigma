"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2738],{6513:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=t(4848),o=t(8453);const a={title:"Prototypal Inheritance"},s=void 0,l={id:"tutorial-extras/JSFrequentlyAsked/PrototypalInheritance",title:"Prototypal Inheritance",description:"Object Literal Based",source:"@site/docs/tutorial-extras/JSFrequentlyAsked/PrototypalInheritance.mdx",sourceDirName:"tutorial-extras/JSFrequentlyAsked",slug:"/tutorial-extras/JSFrequentlyAsked/PrototypalInheritance",permalink:"/js.enigma/docs/tutorial-extras/JSFrequentlyAsked/PrototypalInheritance",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/tutorial-extras/JSFrequentlyAsked/PrototypalInheritance.mdx",tags:[],version:"current",frontMatter:{title:"Prototypal Inheritance"},sidebar:"tutorialSidebar",previous:{title:"Promise Polyfills",permalink:"/js.enigma/docs/tutorial-extras/JSFrequentlyAsked/PromisePolyfills"},next:{title:"Regular Expressions Cheatsheet",permalink:"/js.enigma/docs/tutorial-extras/JSFrequentlyAsked/Regex"}},i={},c=[{value:"Object Literal Based",id:"object-literal-based",level:2},{value:"Constructor Functions and Prototypal Inheritance",id:"constructor-functions-and-prototypal-inheritance",level:3},{value:"ES6 Classes and Prototypes",id:"es6-classes-and-prototypes",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"object-literal-based",children:"Object Literal Based"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-JavaScript",children:'// Define a prototype object\r\nconst animal = {\r\n  eats: true,\r\n  walk() {\r\n    console.log("Animal walks");\r\n  }\r\n};\r\n\r\n// Create a new object that inherits from \'animal\'\r\nconst dog = Object.create(animal);\r\ndog.bark = function() {\r\n  console.log("Dog barks");\r\n};\r\n\r\ndog.walk(); // Inherited from \'animal\': "Animal walks"\r\ndog.bark(); // Specific to \'dog\': "Dog barks"\r\n\r\nconsole.log(dog.eats); // Inherited property: true\n'})}),"\n",(0,r.jsx)(n.h3,{id:"constructor-functions-and-prototypal-inheritance",children:"Constructor Functions and Prototypal Inheritance"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-JavaScript",children:'function Person(name) {\r\n  this.name = name;\r\n}\r\n\r\nPerson.prototype.greet = function() {\r\n  console.log("Hello, my name is " + this.name);\r\n};\r\n\r\nconst john = new Person("John");\r\njohn.greet(); // "Hello, my name is John"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"es6-classes-and-prototypes",children:"ES6 Classes and Prototypes"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-JavaScript",children:'class Animal {\r\n  constructor(name) {\r\n    this.name = name;\r\n  }\r\n  \r\n  speak() {\r\n    console.log(`${this.name} makes a noise`);\r\n  }\r\n}\r\n\r\nclass Dog extends Animal {\r\n  speak() {\r\n    console.log(`${this.name} barks`);\r\n  }\r\n}\r\n\r\nconst myDog = new Dog("Rex");\r\nmyDog.speak(); // Rex barks\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var r=t(6540);const o={},a=r.createContext(o);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);