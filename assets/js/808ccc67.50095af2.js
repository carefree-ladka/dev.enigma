"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[411],{15682:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var s=i(74848),t=i(28453);const r={title:"Google Docs System Design",description:"Complete system design for Google Docs collaborative document editor",author:"System Design Template",date:"2025-10-05",tags:["system-design","collaboration","google-docs","real-time","crdt"]},o="Google Docs System Design",l={id:"System Design Problems/Google Docs System Design",title:"Google Docs System Design",description:"Complete system design for Google Docs collaborative document editor",source:"@site/docs/System Design Problems/Google Docs System Design.mdx",sourceDirName:"System Design Problems",slug:"/System Design Problems/Google Docs System Design",permalink:"/js.enigma/docs/System Design Problems/Google Docs System Design",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/System Design Problems/Google Docs System Design.mdx",tags:[{inline:!0,label:"system-design",permalink:"/js.enigma/docs/tags/system-design"},{inline:!0,label:"collaboration",permalink:"/js.enigma/docs/tags/collaboration"},{inline:!0,label:"google-docs",permalink:"/js.enigma/docs/tags/google-docs"},{inline:!0,label:"real-time",permalink:"/js.enigma/docs/tags/real-time"},{inline:!0,label:"crdt",permalink:"/js.enigma/docs/tags/crdt"}],version:"current",frontMatter:{title:"Google Docs System Design",description:"Complete system design for Google Docs collaborative document editor",author:"System Design Template",date:"2025-10-05",tags:["system-design","collaboration","google-docs","real-time","crdt"]},sidebar:"tutorialSidebar",previous:{title:"System Design",permalink:"/js.enigma/docs/category/system-design"},next:{title:"Google Drive System Design",permalink:"/js.enigma/docs/System Design Problems/Google Drive System Design"}},c={},a=[{value:"1. Requirements (~5 minutes)",id:"1-requirements-5-minutes",level:2},{value:"Functional Requirements",id:"functional-requirements",level:3},{value:"Non-functional Requirements",id:"non-functional-requirements",level:3},{value:"Capacity Estimation",id:"capacity-estimation",level:3},{value:"2. Core Entities (~2 minutes)",id:"2-core-entities-2-minutes",level:2},{value:"Document",id:"document",level:3},{value:"DocumentContent",id:"documentcontent",level:3},{value:"User",id:"user",level:3},{value:"Permission",id:"permission",level:3},{value:"Comment",id:"comment",level:3},{value:"Revision",id:"revision",level:3},{value:"Session",id:"session",level:3},{value:"3. API Interface (~5 minutes)",id:"3-api-interface-5-minutes",level:2},{value:"Protocol Choice",id:"protocol-choice",level:3},{value:"API Endpoints",id:"api-endpoints",level:3},{value:"Document Management",id:"document-management",level:4},{value:"Collaboration (WebSocket)",id:"collaboration-websocket",level:4},{value:"Permissions &amp; Sharing",id:"permissions--sharing",level:4},{value:"Comments",id:"comments",level:4},{value:"Version History",id:"version-history",level:4},{value:"4. Data Flow (~5 minutes)",id:"4-data-flow-5-minutes",level:2},{value:"Real-Time Collaborative Editing Flow",id:"real-time-collaborative-editing-flow",level:3},{value:"5. High Level Design (~10-15 minutes)",id:"5-high-level-design-10-15-minutes",level:2},{value:"Architecture Components",id:"architecture-components",level:3},{value:"6. Architecture Diagram",id:"6-architecture-diagram",level:2},{value:"7. Deep Dives (~10 minutes)",id:"7-deep-dives-10-minutes",level:2},{value:"7.1 Operational Transformation (OT) for Conflict Resolution",id:"71-operational-transformation-ot-for-conflict-resolution",level:3},{value:"OT Algorithm (Simplified)",id:"ot-algorithm-simplified",level:4},{value:"7.2 Real-Time Collaboration Service Architecture",id:"72-real-time-collaboration-service-architecture",level:3},{value:"WebSocket Connection Management",id:"websocket-connection-management",level:4},{value:"Operation Handling Flow",id:"operation-handling-flow",level:4},{value:"7.3 Document Storage Strategy",id:"73-document-storage-strategy",level:3},{value:"Hybrid Storage Model",id:"hybrid-storage-model",level:4},{value:"Storage Distribution",id:"storage-distribution",level:4},{value:"7.4 Caching Strategy (Multi-Layer)",id:"74-caching-strategy-multi-layer",level:3},{value:"Layer 1: Client-Side Cache (IndexedDB)",id:"layer-1-client-side-cache-indexeddb",level:4},{value:"Layer 2: Server-Side Cache (Redis)",id:"layer-2-server-side-cache-redis",level:4},{value:"Layer 3: CDN Cache",id:"layer-3-cdn-cache",level:4},{value:"7.5 Permission &amp; Access Control",id:"75-permission--access-control",level:3},{value:"Permission Model",id:"permission-model",level:4},{value:"Authorization Check",id:"authorization-check",level:4},{value:"Sharing Flow",id:"sharing-flow",level:4},{value:"7.6 Version History &amp; Revision Management",id:"76-version-history--revision-management",level:3},{value:"Storage Strategy",id:"storage-strategy",level:4},{value:"Revision Restoration",id:"revision-restoration",level:4},{value:"Revision Comparison (Diff)",id:"revision-comparison-diff",level:4},{value:"7.7 Offline Mode &amp; Sync",id:"77-offline-mode--sync",level:3},{value:"Offline Capabilities",id:"offline-capabilities",level:4},{value:"7.8 Commenting &amp; Suggesting System",id:"78-commenting--suggesting-system",level:3},{value:"Comment Storage",id:"comment-storage",level:4},{value:"Range Tracking Problem",id:"range-tracking-problem",level:4},{value:"7.9 Performance Optimizations",id:"79-performance-optimizations",level:3},{value:"1. Lazy Loading for Large Documents",id:"1-lazy-loading-for-large-documents",level:4},{value:"2. Operation Batching",id:"2-operation-batching",level:4},{value:"3. Differential Sync",id:"3-differential-sync",level:4},{value:"7.10 Search &amp; Indexing",id:"710-search--indexing",level:3},{value:"Full-Text Search Across Documents",id:"full-text-search-across-documents",level:4},{value:"Indexing Pipeline",id:"indexing-pipeline",level:4},{value:"7.11 Monitoring &amp; Observability",id:"711-monitoring--observability",level:3},{value:"Key Metrics",id:"key-metrics",level:4},{value:"Alerting Examples",id:"alerting-examples",level:4},{value:"7.12 Security &amp; Data Protection",id:"712-security--data-protection",level:3},{value:"1. Encryption",id:"1-encryption",level:4},{value:"2. Access Control",id:"2-access-control",level:4},{value:"3. DLP (Data Loss Prevention)",id:"3-dlp-data-loss-prevention",level:4},{value:"4. Rate Limiting",id:"4-rate-limiting",level:4},{value:"Summary",id:"summary",level:2},{value:"Key Design Decisions",id:"key-design-decisions",level:3},{value:"Scalability Achieved",id:"scalability-achieved",level:3},{value:"Trade-offs &amp; Considerations",id:"trade-offs--considerations",level:2},{value:"Advanced Topics",id:"advanced-topics",level:2},{value:"7.13 Rich Text Representation",id:"713-rich-text-representation",level:3},{value:"DOM-Based vs Operational Model",id:"dom-based-vs-operational-model",level:4},{value:"Formatting Operations",id:"formatting-operations",level:4},{value:"7.14 Presence &amp; Awareness",id:"714-presence--awareness",level:3},{value:"Real-Time Cursor Tracking",id:"real-time-cursor-tracking",level:4},{value:"7.15 Handling Edge Cases",id:"715-handling-edge-cases",level:3},{value:"1. Network Partitions",id:"1-network-partitions",level:4},{value:"2. Concurrent Formatters",id:"2-concurrent-formatters",level:4},{value:"3. Very Large Documents",id:"3-very-large-documents",level:4},{value:"7.16 Export &amp; Import",id:"716-export--import",level:3},{value:"Export Formats",id:"export-formats",level:4},{value:"Import &amp; OCR",id:"import--ocr",level:4},{value:"Future Enhancements",id:"future-enhancements",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"References &amp; Further Reading",id:"references--further-reading",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"google-docs-system-design",children:"Google Docs System Design"})}),"\n",(0,s.jsx)(n.h2,{id:"1-requirements-5-minutes",children:"1. Requirements (~5 minutes)"}),"\n",(0,s.jsx)(n.h3,{id:"functional-requirements",children:"Functional Requirements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 Users should be able to ",(0,s.jsx)(n.strong,{children:"create, edit, and delete documents"})]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 Users should be able to ",(0,s.jsx)(n.strong,{children:"collaborate in real-time"})," (multiple users editing simultaneously)"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 Users should be able to ",(0,s.jsx)(n.strong,{children:"see live cursors"})," and edits from other users"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 Users should be able to ",(0,s.jsx)(n.strong,{children:"comment, suggest, and review"})," changes"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 Users should be able to ",(0,s.jsx)(n.strong,{children:"share documents"})," with permissions (view, comment, edit)"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 System should support ",(0,s.jsx)(n.strong,{children:"rich text formatting"})," (bold, italic, images, tables)"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 System should maintain ",(0,s.jsx)(n.strong,{children:"version history"})," with ability to restore"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 Users should be able to ",(0,s.jsx)(n.strong,{children:"work offline"})," with sync when reconnected"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"non-functional-requirements",children:"Non-functional Requirements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Low Latency"}),": Real-time collaboration with < 200ms sync latency"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Consistency"}),": Operational Transformation (OT) or CRDT for conflict resolution"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"High Availability"}),": 99.99% uptime for document access"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Scalability"}),": Support millions of concurrent users"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Data Durability"}),": No data loss, multiple backups"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Conflict-Free"}),": Concurrent edits should merge automatically"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Performance"}),": Documents should load in < 2 seconds"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"capacity-estimation",children:"Capacity Estimation"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Assumptions:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Total Users: 2B (Google Workspace + free users)"}),"\n",(0,s.jsx)(n.li,{children:"Daily Active Users (DAU): 300M"}),"\n",(0,s.jsx)(n.li,{children:"Concurrent users: 50M"}),"\n",(0,s.jsx)(n.li,{children:"Average document size: 100 KB"}),"\n",(0,s.jsx)(n.li,{children:"Documents per user: 50"}),"\n",(0,s.jsx)(n.li,{children:"Concurrent editors per document: 10 (average), 100 (max)"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Storage:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Total Documents = 2B users \xd7 50 docs = 100B documents\nDocument Storage = 100B \xd7 100 KB = 10 PB\nVersion History (5x multiplier) = 50 PB\nTotal Storage = 60 PB\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Network:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Active Editing Sessions = 50M concurrent users\nOperations per second per user = 2 ops/sec (typing)\nTotal Operations = 50M \xd7 2 = 100M ops/sec\nAverage operation size = 200 bytes\nBandwidth = 100M \xd7 200 bytes = 20 GB/sec\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"QPS:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Document Opens = 300M DAU \xd7 20 docs/day / 86400s = ~70K QPS\nEdit Operations = 100M ops/sec\nComment/Share Operations = 300M \xd7 5/day / 86400s = ~17K QPS\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"2-core-entities-2-minutes",children:"2. Core Entities (~2 minutes)"}),"\n",(0,s.jsx)(n.h3,{id:"document",children:"Document"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"documentId"}),", ",(0,s.jsx)(n.code,{children:"title"}),", ",(0,s.jsx)(n.code,{children:"ownerId"}),", ",(0,s.jsx)(n.code,{children:"createdAt"}),", ",(0,s.jsx)(n.code,{children:"lastModified"}),", ",(0,s.jsx)(n.code,{children:"size"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"documentcontent",children:"DocumentContent"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"documentId"}),", ",(0,s.jsx)(n.code,{children:"version"}),", ",(0,s.jsx)(n.code,{children:"operations[]"}),", ",(0,s.jsx)(n.code,{children:"snapshot"})," (periodic full state)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"user",children:"User"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"userId"}),", ",(0,s.jsx)(n.code,{children:"email"}),", ",(0,s.jsx)(n.code,{children:"displayName"}),", ",(0,s.jsx)(n.code,{children:"profilePicture"}),", ",(0,s.jsx)(n.code,{children:"storageUsed"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"permission",children:"Permission"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"documentId"}),", ",(0,s.jsx)(n.code,{children:"userId"}),", ",(0,s.jsx)(n.code,{children:"role"})," (owner/editor/commenter/viewer), ",(0,s.jsx)(n.code,{children:"grantedAt"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"comment",children:"Comment"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"commentId"}),", ",(0,s.jsx)(n.code,{children:"documentId"}),", ",(0,s.jsx)(n.code,{children:"userId"}),", ",(0,s.jsx)(n.code,{children:"text"}),", ",(0,s.jsx)(n.code,{children:"range"})," (start, end positions), ",(0,s.jsx)(n.code,{children:"createdAt"}),", ",(0,s.jsx)(n.code,{children:"resolved"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"revision",children:"Revision"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"revisionId"}),", ",(0,s.jsx)(n.code,{children:"documentId"}),", ",(0,s.jsx)(n.code,{children:"userId"}),", ",(0,s.jsx)(n.code,{children:"timestamp"}),", ",(0,s.jsx)(n.code,{children:"operations[]"}),", ",(0,s.jsx)(n.code,{children:"description"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"session",children:"Session"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sessionId"}),", ",(0,s.jsx)(n.code,{children:"documentId"}),", ",(0,s.jsx)(n.code,{children:"userId"}),", ",(0,s.jsx)(n.code,{children:"cursorPosition"}),", ",(0,s.jsx)(n.code,{children:"selection"}),", ",(0,s.jsx)(n.code,{children:"lastActive"})]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"3-api-interface-5-minutes",children:"3. API Interface (~5 minutes)"}),"\n",(0,s.jsx)(n.h3,{id:"protocol-choice",children:"Protocol Choice"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"REST"})," for document CRUD operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"WebSocket"})," for real-time collaborative editing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"gRPC"})," for internal service communication (lower latency)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,s.jsx)(n.h4,{id:"document-management",children:"Document Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'POST /v1/documents\n{ "title": "Untitled Document" }\nResponse: { "documentId": "doc-123", "url": "docs.google.com/d/doc-123" }\n\nGET /v1/documents/{documentId}\nResponse: {\n  "document": { "id", "title", "owner", "createdAt" },\n  "content": "<full document content>",\n  "permissions": [Permission]\n}\n\nPUT /v1/documents/{documentId}\n{ "title": "New Title" }\n\nDELETE /v1/documents/{documentId}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"collaboration-websocket",children:"Collaboration (WebSocket)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Client connects to WebSocket\nws://collab.google.com/documents/{documentId}?token={jwt}\n\n// Client sends operation\n{\n  "type": "operation",\n  "documentId": "doc-123",\n  "userId": "user-456",\n  "operation": {\n    "type": "insert",\n    "position": 150,\n    "text": "Hello",\n    "timestamp": 1696512000\n  }\n}\n\n// Server broadcasts to all clients\n{\n  "type": "operation",\n  "userId": "user-789",\n  "operation": { ... },\n  "version": 1245\n}\n\n// Cursor/selection updates\n{\n  "type": "cursor",\n  "userId": "user-456",\n  "position": 155,\n  "selection": { "start": 150, "end": 155 }\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"permissions--sharing",children:"Permissions & Sharing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'POST /v1/documents/{documentId}/permissions\n{\n  "email": "user@example.com",\n  "role": "editor",\n  "notify": true\n}\n\nGET /v1/documents/{documentId}/permissions\nResponse: { "permissions": [Permission] }\n\nDELETE /v1/documents/{documentId}/permissions/{userId}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"comments",children:"Comments"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'POST /v1/documents/{documentId}/comments\n{\n  "text": "Please review this section",\n  "range": { "start": 100, "end": 150 }\n}\n\nGET /v1/documents/{documentId}/comments\nPUT /v1/comments/{commentId}/resolve\nDELETE /v1/comments/{commentId}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"version-history",children:"Version History"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'GET /v1/documents/{documentId}/revisions\nResponse: {\n  "revisions": [\n    { "id": "rev-1", "timestamp": "2025-10-05T10:00:00Z", "user": "..." }\n  ]\n}\n\nGET /v1/documents/{documentId}/revisions/{revisionId}\nPOST /v1/documents/{documentId}/restore/{revisionId}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"4-data-flow-5-minutes",children:"4. Data Flow (~5 minutes)"}),"\n",(0,s.jsx)(n.h3,{id:"real-time-collaborative-editing-flow",children:"Real-Time Collaborative Editing Flow"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"User Opens Document"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Client requests document from API"}),"\n",(0,s.jsx)(n.li,{children:"Server returns current snapshot + version number"}),"\n",(0,s.jsx)(n.li,{children:"Client establishes WebSocket connection"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"User Types Character"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Client generates operation: ",(0,s.jsx)(n.code,{children:"insert('H', position=150)"})]}),"\n",(0,s.jsx)(n.li,{children:"Operation sent via WebSocket to Collaboration Service"}),"\n",(0,s.jsx)(n.li,{children:"Server applies Operational Transformation (OT)"}),"\n",(0,s.jsx)(n.li,{children:"Server broadcasts to all other connected clients"}),"\n",(0,s.jsx)(n.li,{children:"Clients apply operation to local state"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Conflict Resolution"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Two users edit same position simultaneously"}),"\n",(0,s.jsx)(n.li,{children:"OT algorithm transforms operations to maintain consistency"}),"\n",(0,s.jsx)(n.li,{children:"All clients converge to same final state"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Periodic Snapshots"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Every 100 operations or 5 minutes"}),"\n",(0,s.jsx)(n.li,{children:"Server creates full document snapshot"}),"\n",(0,s.jsx)(n.li,{children:"Stored in database for faster loading"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Auto-Save"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Operations buffered and saved every 5 seconds"}),"\n",(0,s.jsx)(n.li,{children:'No explicit "Save" button needed'}),"\n",(0,s.jsx)(n.li,{children:"Version history updated automatically"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"5-high-level-design-10-15-minutes",children:"5. High Level Design (~10-15 minutes)"}),"\n",(0,s.jsx)(n.h3,{id:"architecture-components",children:"Architecture Components"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Client Layer:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Web/Mobile Apps with rich text editor"}),"\n",(0,s.jsx)(n.li,{children:"Offline storage (IndexedDB) for offline mode"}),"\n",(0,s.jsx)(n.li,{children:"Local operation buffer and sync queue"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Edge Layer:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"CDN for static assets (fonts, icons, templates)"}),"\n",(0,s.jsx)(n.li,{children:"Geographic load balancers"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"API Gateway:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Authentication (OAuth 2.0)"}),"\n",(0,s.jsx)(n.li,{children:"Rate limiting per user"}),"\n",(0,s.jsx)(n.li,{children:"Request routing"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Application Layer:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Document Service"}),": CRUD operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Collaboration Service"}),": Real-time editing (WebSocket servers)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Permission Service"}),": Access control"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Comment Service"}),": Comments and suggestions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Revision Service"}),": Version history management"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Notification Service"}),": Real-time notifications"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Data Layer:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Spanner"})," (Google Cloud Spanner): Global distributed SQL for metadata"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Bigtable"}),": Operational logs and version history (time-series)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Colossus (GFS)"}),": Binary storage for images, embedded files"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Memcached/Redis"}),": Caching hot documents"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Firestore"}),": Real-time sync for mobile apps"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Processing Layer:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pub/Sub"}),": Event streaming for operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dataflow"}),": Stream processing for analytics"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Background Workers"}),": Snapshot generation, indexing"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"6-architecture-diagram",children:"6. Architecture Diagram"}),"\n",(0,s.jsx)(n.mermaid,{value:'graph TB\n    subgraph "Client Layer"\n        WebClient[Web Browser<br/>Rich Text Editor]\n        MobileClient[Mobile App]\n        OfflineStorage[IndexedDB<br/>Offline Cache]\n    end\n\n    subgraph "Edge Layer"\n        LB[Global Load Balancer<br/>Geo-based Routing]\n        CDN[CDN<br/>Static Assets]\n    end\n\n    subgraph "API Gateway"\n        Gateway[API Gateway<br/>Auth, Rate Limit]\n    end\n\n    subgraph "Application Services"\n        DocService[Document Service<br/>CRUD Operations]\n        CollabService[Collaboration Service<br/>WebSocket Servers]\n        PermService[Permission Service<br/>Access Control]\n        CommentService[Comment Service]\n        RevisionService[Revision Service<br/>Version History]\n        NotifyService[Notification Service]\n    end\n\n    subgraph "Cache Layer"\n        Redis[(Redis Cluster<br/>Hot Documents<br/>Active Sessions)]\n    end\n\n    subgraph "Database Layer"\n        Spanner[(Cloud Spanner<br/>Documents Metadata<br/>Permissions)]\n        Bigtable[(Bigtable<br/>Operations Log<br/>Version History)]\n        Colossus[(Colossus/GFS<br/>Binary Storage<br/>Images, Attachments)]\n    end\n\n    subgraph "Event Processing"\n        PubSub[Cloud Pub/Sub<br/>Operation Events]\n        Dataflow[Dataflow<br/>Stream Processing]\n        Workers[Background Workers<br/>Snapshots, Indexing]\n    end\n\n    subgraph "Real-Time Infrastructure"\n        WSGateway[WebSocket Gateway<br/>Persistent Connections]\n        OTEngine[OT/CRDT Engine<br/>Conflict Resolution]\n        PresenceService[Presence Service<br/>Active Users/Cursors]\n    end\n\n    %% Client to Edge\n    WebClient --\x3e|HTTPS| LB\n    MobileClient --\x3e|HTTPS| LB\n    WebClient -.Offline Mode.-> OfflineStorage\n    CDN -.Static Assets.-> WebClient\n\n    %% Client WebSocket\n    WebClient -.WebSocket.-> WSGateway\n    MobileClient -.WebSocket.-> WSGateway\n\n    %% Edge to Gateway\n    LB --\x3e Gateway\n\n    %% Gateway to Services\n    Gateway --\x3e DocService\n    Gateway --\x3e PermService\n    Gateway --\x3e CommentService\n    Gateway --\x3e RevisionService\n\n    %% WebSocket Flow\n    WSGateway --\x3e CollabService\n    CollabService --\x3e OTEngine\n    CollabService --\x3e PresenceService\n\n    %% Services to Cache\n    DocService --\x3e Redis\n    CollabService --\x3e Redis\n    PermService --\x3e Redis\n\n    %% Services to Databases\n    DocService --\x3e Spanner\n    PermService --\x3e Spanner\n    CollabService --\x3e Bigtable\n    RevisionService --\x3e Bigtable\n    DocService --\x3e Colossus\n\n    %% Event Processing\n    CollabService --\x3e|Operations| PubSub\n    PubSub --\x3e Dataflow\n    PubSub --\x3e Workers\n    Workers --\x3e Bigtable\n    Workers --\x3e Spanner\n\n    %% Notification Flow\n    CollabService --\x3e NotifyService\n    CommentService --\x3e NotifyService\n    NotifyService -.Push Notifications.-> MobileClient\n\n    style WebClient fill:#e1f5ff\n    style MobileClient fill:#e1f5ff\n    style WSGateway fill:#fff4e1\n    style OTEngine fill:#ffe1f5\n    style CollabService fill:#ffe1f5'}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"7-deep-dives-10-minutes",children:"7. Deep Dives (~10 minutes)"}),"\n",(0,s.jsx)(n.h3,{id:"71-operational-transformation-ot-for-conflict-resolution",children:"7.1 Operational Transformation (OT) for Conflict Resolution"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"The Problem"}),": Two users edit the same document simultaneously"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example Scenario:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'Initial State: "Hello World"\nUser A: Insert \'X\' at position 6 \u2192 "Hello XWorld"\nUser B: Delete \'World\' (positions 6-10) \u2192 "Hello "\n\nWithout OT: Chaos!\nWith OT: Operations transformed to produce consistent result\n'})}),"\n",(0,s.jsx)(n.h4,{id:"ot-algorithm-simplified",children:"OT Algorithm (Simplified)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Operation types\nclass Operation {\n  constructor(type, position, content) {\n    this.type = type;        // 'insert' or 'delete'\n    this.position = position;\n    this.content = content;\n    this.timestamp = Date.now();\n  }\n}\n\n// Transform operation against another operation\nfunction transform(op1, op2) {\n  if (op1.type === 'insert' && op2.type === 'insert') {\n    if (op1.position < op2.position) {\n      return op2; // No change needed\n    } else if (op1.position > op2.position) {\n      // Adjust position\n      return new Operation('insert', op2.position + op1.content.length, op2.content);\n    } else {\n      // Same position - use timestamp to break tie\n      if (op1.timestamp < op2.timestamp) {\n        return new Operation('insert', op2.position + op1.content.length, op2.content);\n      } else {\n        return op2;\n      }\n    }\n  }\n\n  if (op1.type === 'insert' && op2.type === 'delete') {\n    if (op1.position <= op2.position) {\n      return new Operation('delete', op2.position + op1.content.length, op2.content);\n    }\n    // ... more cases\n  }\n\n  // ... handle delete-delete, delete-insert cases\n}\n\n// Server applies operation\nfunction applyOperation(documentState, operation) {\n  // 1. Get all pending operations from this version\n  const pendingOps = getPendingOperations(operation.version);\n\n  // 2. Transform incoming operation against pending operations\n  let transformedOp = operation;\n  for (const pendingOp of pendingOps) {\n    transformedOp = transform(pendingOp, transformedOp);\n  }\n\n  // 3. Apply to document\n  documentState.apply(transformedOp);\n\n  // 4. Broadcast to all clients\n  broadcast(transformedOp);\n\n  return transformedOp;\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Alternative: CRDT (Conflict-Free Replicated Data Type)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Used by some modern systems (e.g., Figma)"}),"\n",(0,s.jsx)(n.li,{children:"Mathematically guarantees convergence"}),"\n",(0,s.jsx)(n.li,{children:"No central server needed for conflict resolution"}),"\n",(0,s.jsx)(n.li,{children:"Trade-off: More complex data structures, higher memory usage"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"72-real-time-collaboration-service-architecture",children:"7.2 Real-Time Collaboration Service Architecture"}),"\n",(0,s.jsx)(n.h4,{id:"websocket-connection-management",children:"WebSocket Connection Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Server maintains active connections\nconst activeConnections = new Map(); // documentId -> Set<WebSocket>\n\n// Client connects\nio.on('connection', (socket) => {\n  const { documentId, userId, token } = socket.handshake.query;\n\n  // Authenticate\n  if (!verifyToken(token)) {\n    socket.disconnect();\n    return;\n  }\n\n  // Join document room\n  socket.join(documentId);\n\n  // Track connection\n  if (!activeConnections.has(documentId)) {\n    activeConnections.set(documentId, new Set());\n  }\n  activeConnections.get(documentId).add(socket);\n\n  // Notify others of new user\n  socket.to(documentId).emit('user-joined', {\n    userId,\n    userName: getUserName(userId)\n  });\n\n  // Handle operations\n  socket.on('operation', (op) => {\n    handleOperation(documentId, userId, op);\n  });\n\n  // Handle cursor updates\n  socket.on('cursor', (cursor) => {\n    socket.to(documentId).emit('cursor', { userId, ...cursor });\n  });\n\n  // Cleanup on disconnect\n  socket.on('disconnect', () => {\n    activeConnections.get(documentId).delete(socket);\n    socket.to(documentId).emit('user-left', { userId });\n  });\n});\n"})}),"\n",(0,s.jsx)(n.h4,{id:"operation-handling-flow",children:"Operation Handling Flow"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Client \u2192 WebSocket \u2192 Collaboration Service \u2192 OT Engine \u2192 Broadcast\n                             \u2193\n                        Pub/Sub (async)\n                             \u2193\n                    Background Workers \u2192 Bigtable\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Key Optimizations:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Batching"}),": Group operations every 50ms to reduce network overhead"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Compression"}),": Use binary protocol (Protocol Buffers) instead of JSON"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Sticky Sessions"}),": Route user to same server for connection stability"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"73-document-storage-strategy",children:"7.3 Document Storage Strategy"}),"\n",(0,s.jsx)(n.h4,{id:"hybrid-storage-model",children:"Hybrid Storage Model"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"1. Snapshot + Operations Log"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Document Representation:\n- Snapshot (full content) at version 1000\n- Operations 1001-1500 (incremental changes)\n\nLoad Document:\n1. Fetch latest snapshot (version 1000)\n2. Fetch operations 1001-1500\n3. Apply operations to snapshot\n4. Result: Current document state\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"2. Periodic Snapshot Generation"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Background job runs every 100 operations or 5 minutes\nasync function createSnapshot(documentId) {\n  // Get all operations since last snapshot\n  const lastSnapshot = await getLatestSnapshot(documentId);\n  const operations = await getOperationsSince(documentId, lastSnapshot.version);\n\n  // Apply operations to reconstruct document\n  let content = lastSnapshot.content;\n  for (const op of operations) {\n    content = applyOperation(content, op);\n  }\n\n  // Store new snapshot\n  await storeSnapshot({\n    documentId,\n    version: lastSnapshot.version + operations.length,\n    content,\n    timestamp: Date.now()\n  });\n\n  // Optional: Delete old operations (keep for version history)\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"storage-distribution",children:"Storage Distribution"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Cloud Spanner"})," (Document Metadata):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE documents (\n  document_id STRING(36) NOT NULL,\n  title STRING(255),\n  owner_id STRING(36),\n  created_at TIMESTAMP,\n  last_modified TIMESTAMP,\n  current_version INT64,\n  size_bytes INT64\n) PRIMARY KEY (document_id);\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Bigtable"})," (Operations Log):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Row Key: {documentId}#{version}\nColumn Families:\n  - operation: {type, position, content, userId, timestamp}\n  - metadata: {clientId, deviceType}\n\nQuery: Get operations for documentId from version X to Y\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Colossus/GFS"})," (Binary Content):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Path: /docs/{documentId}/images/{imageId}.png\nPath: /docs/{documentId}/attachments/{fileId}.pdf\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"74-caching-strategy-multi-layer",children:"7.4 Caching Strategy (Multi-Layer)"}),"\n",(0,s.jsx)(n.h4,{id:"layer-1-client-side-cache-indexeddb",children:"Layer 1: Client-Side Cache (IndexedDB)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Store document locally for offline access\nasync function cacheDocument(documentId, content) {\n  const db = await openDB('GoogleDocs', 1);\n  await db.put('documents', {\n    id: documentId,\n    content,\n    cachedAt: Date.now()\n  });\n}\n\n// Load from cache if offline\nasync function loadDocument(documentId) {\n  if (!navigator.onLine) {\n    const db = await openDB('GoogleDocs', 1);\n    return await db.get('documents', documentId);\n  }\n  // Otherwise fetch from server\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"layer-2-server-side-cache-redis",children:"Layer 2: Server-Side Cache (Redis)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# Cache hot documents (actively being edited)\ndef get_document(document_id):\n    cache_key = f"doc:{document_id}"\n    cached = redis.get(cache_key)\n\n    if cached:\n        return json.loads(cached)\n\n    # Fetch from database\n    doc = spanner.query(f"SELECT * FROM documents WHERE document_id = \'{document_id}\'")\n\n    # Cache for 10 minutes\n    redis.setex(cache_key, 600, json.dumps(doc))\n    return doc\n\n# Cache active sessions\ndef cache_active_users(document_id, user_ids):\n    key = f"active:{document_id}"\n    redis.sadd(key, *user_ids)\n    redis.expire(key, 300)  # 5 minutes\n'})}),"\n",(0,s.jsx)(n.h4,{id:"layer-3-cdn-cache",children:"Layer 3: CDN Cache"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Static Assets:\n- JavaScript bundles\n- CSS stylesheets\n- Fonts, icons\n- Document templates\n\nTTL: 1 year (with versioned URLs)\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"75-permission--access-control",children:"7.5 Permission & Access Control"}),"\n",(0,s.jsx)(n.h4,{id:"permission-model",children:"Permission Model"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Document Permissions Hierarchy:\n1. Owner (can delete, change permissions)\n2. Editor (can edit, comment, suggest)\n3. Commenter (can only add comments)\n4. Viewer (read-only)\n\nAdditional:\n- Link sharing (anyone with link can view/edit)\n- Organization-wide access\n- Expiring access (temporary permissions)\n"})}),"\n",(0,s.jsx)(n.h4,{id:"authorization-check",children:"Authorization Check"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Service\npublic class PermissionService {\n\n    public boolean canEdit(String userId, String documentId) {\n        // Check cache first\n        String cacheKey = "perm:" + userId + ":" + documentId;\n        String cached = redis.get(cacheKey);\n\n        if (cached != null) {\n            return "editor".equals(cached) || "owner".equals(cached);\n        }\n\n        // Query database\n        Permission perm = spannerClient.query(\n            "SELECT role FROM permissions " +\n            "WHERE document_id = @docId AND user_id = @userId",\n            documentId, userId\n        );\n\n        if (perm == null) {\n            // Check link sharing\n            perm = checkLinkSharing(documentId);\n        }\n\n        // Cache for 5 minutes\n        redis.setex(cacheKey, 300, perm.getRole());\n\n        return perm.isEditor() || perm.isOwner();\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"sharing-flow",children:"Sharing Flow"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'1. User clicks "Share"\n2. Enter email addresses\n3. Select permission level\n4. Optional: Add message\n5. System:\n   - Creates permission records\n   - Sends email notification\n   - Updates cache\n   - Publishes event for audit log\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"76-version-history--revision-management",children:"7.6 Version History & Revision Management"}),"\n",(0,s.jsx)(n.h4,{id:"storage-strategy",children:"Storage Strategy"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Revision Storage:\n- Snapshot every 1 hour (or 1000 operations)\n- Operations between snapshots stored individually\n- Named revisions: User can manually name important versions\n\nTotal Storage:\n- Keep all revisions for 30 days\n- After 30 days: Keep only named revisions + daily snapshots\n"})}),"\n",(0,s.jsx)(n.h4,{id:"revision-restoration",children:"Revision Restoration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"async function restoreRevision(documentId, revisionId) {\n  // 1. Fetch revision snapshot\n  const revision = await getRevision(revisionId);\n\n  // 2. Create new revision from current state (backup)\n  const currentSnapshot = await getCurrentSnapshot(documentId);\n  await createRevision(documentId, currentSnapshot, 'Before restore');\n\n  // 3. Apply revision content as current\n  await updateDocument(documentId, {\n    content: revision.content,\n    version: currentVersion + 1\n  });\n\n  // 4. Notify all active editors\n  broadcastToDocument(documentId, {\n    type: 'document-restored',\n    revisionId\n  });\n\n  return revision;\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"revision-comparison-diff",children:"Revision Comparison (Diff)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Generate diff between two revisions\ndef compare_revisions(rev1_id, rev2_id):\n    rev1 = get_revision(rev1_id)\n    rev2 = get_revision(rev2_id)\n\n    # Use diff algorithm (Myers' diff)\n    diff = myers_diff(rev1.content, rev2.content)\n\n    return {\n        'additions': diff.additions,\n        'deletions': diff.deletions,\n        'modifications': diff.modifications\n    }\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"77-offline-mode--sync",children:"7.7 Offline Mode & Sync"}),"\n",(0,s.jsx)(n.h4,{id:"offline-capabilities",children:"Offline Capabilities"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Edit Offline"}),": Client buffers operations locally"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reconnect"}),": Upload buffered operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Conflict Resolution"}),": Server applies OT to merge changes"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class OfflineManager {\n  constructor() {\n    this.pendingOperations = [];\n    this.isOnline = navigator.onLine;\n\n    window.addEventListener('online', () => this.syncPendingOperations());\n    window.addEventListener('offline', () => this.isOnline = false);\n  }\n\n  async applyOperation(operation) {\n    // Apply locally immediately\n    this.localDocument.apply(operation);\n\n    if (this.isOnline) {\n      try {\n        await this.sendToServer(operation);\n      } catch (error) {\n        // Connection lost, add to pending queue\n        this.pendingOperations.push(operation);\n      }\n    } else {\n      // Offline, buffer operation\n      this.pendingOperations.push(operation);\n      await this.saveToIndexedDB(operation);\n    }\n  }\n\n  async syncPendingOperations() {\n    this.isOnline = true;\n\n    // Upload all pending operations\n    for (const op of this.pendingOperations) {\n      try {\n        const transformed = await this.sendToServer(op);\n        // Server may transform operation due to conflicts\n        this.applyTransformedOperation(transformed);\n      } catch (error) {\n        console.error('Sync failed:', error);\n        return; // Retry later\n      }\n    }\n\n    this.pendingOperations = [];\n    await this.clearIndexedDB();\n  }\n}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"78-commenting--suggesting-system",children:"7.8 Commenting & Suggesting System"}),"\n",(0,s.jsx)(n.h4,{id:"comment-storage",children:"Comment Storage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Comment anchored to text range\n{\n  commentId: "comment-123",\n  documentId: "doc-456",\n  userId: "user-789",\n  text: "Please clarify this point",\n  range: {\n    start: 150,\n    end: 200\n  },\n  createdAt: "2025-10-05T10:30:00Z",\n  resolved: false,\n  replies: [\n    {\n      userId: "user-456",\n      text: "Updated!",\n      createdAt: "2025-10-05T11:00:00Z"\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"range-tracking-problem",children:"Range Tracking Problem"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Challenge"}),": Comment anchored to positions 150-200, but user inserts text at position 100"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Solution"}),": Use anchor points + relative positions"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class CommentAnchor {\n  constructor(startNode, startOffset, endNode, endOffset) {\n    // Anchor to DOM nodes instead of absolute positions\n    this.startNode = startNode;\n    this.startOffset = startOffset;\n    this.endNode = endNode;\n    this.endOffset = endOffset;\n  }\n\n  updateAfterOperation(operation) {\n    if (operation.type === 'insert') {\n      if (operation.position < this.getAbsoluteStart()) {\n        // Shift comment range right\n        this.startOffset += operation.content.length;\n        this.endOffset += operation.content.length;\n      }\n    }\n    // Handle delete, etc.\n  }\n}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"79-performance-optimizations",children:"7.9 Performance Optimizations"}),"\n",(0,s.jsx)(n.h4,{id:"1-lazy-loading-for-large-documents",children:"1. Lazy Loading for Large Documents"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Don't load entire 100-page document at once\nclass DocumentLoader {\n  constructor(documentId) {\n    this.documentId = documentId;\n    this.loadedChunks = new Map();\n    this.viewport = { start: 0, end: 5000 }; // Load first 5000 chars\n  }\n\n  async loadVisible() {\n    const chunk = await fetchChunk(this.documentId, this.viewport);\n    this.loadedChunks.set(this.viewport.start, chunk);\n    this.render(chunk);\n  }\n\n  onScroll() {\n    // User scrolled down, load next chunk\n    const nextViewport = this.calculateViewport();\n    if (!this.loadedChunks.has(nextViewport.start)) {\n      this.loadVisible();\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"2-operation-batching",children:"2. Operation Batching"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Instead of sending every keystroke\nclass OperationBatcher {\n  constructor() {\n    this.buffer = [];\n    this.timer = null;\n  }\n\n  addOperation(op) {\n    this.buffer.push(op);\n\n    // Send batch after 50ms or 10 operations\n    if (this.buffer.length >= 10) {\n      this.flush();\n    } else if (!this.timer) {\n      this.timer = setTimeout(() => this.flush(), 50);\n    }\n  }\n\n  flush() {\n    if (this.buffer.length > 0) {\n      websocket.send({ type: 'batch', operations: this.buffer });\n      this.buffer = [];\n      clearTimeout(this.timer);\n      this.timer = null;\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"3-differential-sync",children:"3. Differential Sync"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Only send changed parts\nfunction createDiff(oldDoc, newDoc) {\n  const changes = [];\n\n  // Use Myers' diff algorithm\n  const diff = myersDiff(oldDoc, newDoc);\n\n  for (const change of diff) {\n    if (change.type === 'add') {\n      changes.push({ type: 'insert', position: change.position, text: change.text });\n    } else if (change.type === 'remove') {\n      changes.push({ type: 'delete', position: change.position, length: change.length });\n    }\n  }\n\n  return changes;\n}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"710-search--indexing",children:"7.10 Search & Indexing"}),"\n",(0,s.jsx)(n.h4,{id:"full-text-search-across-documents",children:"Full-Text Search Across Documents"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'User searches: "quarterly report"\n\nSearch Service:\n1. Query Elasticsearch index\n2. Filter by user permissions (only docs they can access)\n3. Rank by relevance + recency\n4. Return results with snippets\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Elasticsearch query\nconst searchQuery = {\n  query: {\n    bool: {\n      must: [\n        {\n          multi_match: {\n            query: "quarterly report",\n            fields: ["title^3", "content"],\n            type: "best_fields",\n            fuzziness: "AUTO"\n          }\n        }\n      ],\n      filter: [\n        {\n          terms: {\n            "permissions.userId": [currentUserId, "public"]\n          }\n        }\n      ]\n    }\n  },\n  highlight: {\n    fields: {\n      content: {\n        fragment_size: 150,\n        number_of_fragments: 3\n      }\n    }\n  },\n  size: 20\n};\n'})}),"\n",(0,s.jsx)(n.h4,{id:"indexing-pipeline",children:"Indexing Pipeline"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Document Update \u2192 Pub/Sub \u2192 Indexing Worker \u2192 Elasticsearch\n\nIndexing Worker:\n1. Fetch document content\n2. Extract text from rich formatting\n3. Update Elasticsearch index\n4. Debounce: Wait 5 seconds after last edit before indexing\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"711-monitoring--observability",children:"7.11 Monitoring & Observability"}),"\n",(0,s.jsx)(n.h4,{id:"key-metrics",children:"Key Metrics"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Collaboration Quality:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Sync Latency"}),": Time from operation to broadcast (target: < 200ms)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Conflict Rate"}),": % of operations requiring transformation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Operation Throughput"}),": Operations/sec per document"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"WebSocket Reconnections"}),": Stability indicator"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Performance:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Document load time (P50, P95, P99)"}),"\n",(0,s.jsx)(n.li,{children:"Operation apply time"}),"\n",(0,s.jsx)(n.li,{children:"Search latency"}),"\n",(0,s.jsx)(n.li,{children:"API response times"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Availability:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"WebSocket connection success rate"}),"\n",(0,s.jsx)(n.li,{children:"Database query latency"}),"\n",(0,s.jsx)(n.li,{children:"Cache hit ratio"}),"\n",(0,s.jsx)(n.li,{children:"Service uptime (99.99% target)"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"User Experience:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Cursors visible latency"}),"\n",(0,s.jsx)(n.li,{children:"Typing lag (keystroke to screen render)"}),"\n",(0,s.jsx)(n.li,{children:"Auto-save success rate"}),"\n",(0,s.jsx)(n.li,{children:"Offline sync success rate"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"alerting-examples",children:"Alerting Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"Alert: High Sync Latency\nCondition: P95 sync latency > 500ms for 5 minutes\nAction:\n  - Check WebSocket server load\n  - Scale collaboration service\n  - Investigate network issues\n\nAlert: OT Conflict Spike\nCondition: Conflict rate > 10% for 10 minutes\nAction:\n  - Check for corrupted operations\n  - Review recent deployments\n  - Investigate specific documents\n\nAlert: Database Write Lag\nCondition: Bigtable write latency > 1 second\nAction:\n  - Scale Bigtable nodes\n  - Check for hot spots\n  - Review query patterns\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"712-security--data-protection",children:"7.12 Security & Data Protection"}),"\n",(0,s.jsx)(n.h4,{id:"1-encryption",children:"1. Encryption"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"At Rest:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"All documents encrypted with AES-256"}),"\n",(0,s.jsx)(n.li,{children:"Encryption keys managed by Google KMS"}),"\n",(0,s.jsx)(n.li,{children:"Separate keys per organization (Workspace)"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"In Transit:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"TLS 1.3 for all HTTP/WebSocket connections"}),"\n",(0,s.jsx)(n.li,{children:"End-to-end encryption for sensitive documents (optional)"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"2-access-control",children:"2. Access Control"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Every operation checked against permissions\n@PreAuthorize("@permissionService.canEdit(#userId, #documentId)")\npublic void applyOperation(String userId, String documentId, Operation op) {\n    // Apply operation\n}\n\n// Audit logging\n@AfterReturning("@annotation(Audited)")\npublic void logAccess(JoinPoint joinPoint) {\n    AuditLog log = AuditLog.builder()\n        .userId(getCurrentUser())\n        .action(joinPoint.getSignature().getName())\n        .documentId(extractDocumentId(joinPoint))\n        .timestamp(Instant.now())\n        .ipAddress(getClientIp())\n        .build();\n\n    auditLogger.log(log);\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"3-dlp-data-loss-prevention",children:"3. DLP (Data Loss Prevention)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Scan for sensitive data before sharing\nasync function validateSharing(documentId, targetEmail) {\n  const content = await getDocumentContent(documentId);\n\n  // Check for PII, credit cards, SSN, etc.\n  const sensitiveData = await dlpService.scan(content);\n\n  if (sensitiveData.found) {\n    return {\n      allowed: false,\n      reason: "Document contains sensitive information",\n      details: sensitiveData.types\n    };\n  }\n\n  // Check if sharing externally (outside organization)\n  if (!isInternalEmail(targetEmail)) {\n    await requestAdminApproval(documentId, targetEmail);\n  }\n\n  return { allowed: true };\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"4-rate-limiting",children:"4. Rate Limiting"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Prevent abuse\nRATE_LIMITS = {\n    'operations': (1000, 60),      # 1000 operations per minute\n    'document_create': (50, 3600), # 50 docs per hour\n    'share': (100, 3600),          # 100 shares per hour\n    'export': (20, 3600)           # 20 exports per hour\n}\n\ndef check_rate_limit(user_id, action):\n    key = f\"ratelimit:{action}:{user_id}\"\n    limit, window = RATE_LIMITS[action]\n\n    current = redis.incr(key)\n    if current == 1:\n        redis.expire(key, window)\n\n    if current > limit:\n        raise RateLimitExceeded(f\"Too many {action} requests\")\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(n.h3,{id:"key-design-decisions",children:"Key Design Decisions"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Operational Transformation (OT)"}),": Ensures conflict-free collaborative editing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Snapshot + Operations Log"}),": Efficient storage and fast loading"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"WebSocket for Real-Time"}),": Low-latency synchronization (< 200ms)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Distributed Database"}),": Spanner for global consistency, Bigtable for time-series"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multi-Layer Caching"}),": Client (IndexedDB) \u2192 Redis \u2192 Database"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Offline-First"}),": Local operations buffer with sync on reconnect"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Microservices Architecture"}),": Independently scalable services"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"scalability-achieved",children:"Scalability Achieved"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 2B users, 50M concurrent editors"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 < 200ms sync latency"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 99.99% availability"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 100M operations/sec throughput"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Conflict-free merging with OT"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"trade-offs--considerations",children:"Trade-offs & Considerations"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Decision"}),(0,s.jsx)(n.th,{children:"Pro"}),(0,s.jsx)(n.th,{children:"Con"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Operational Transformation"}),(0,s.jsx)(n.td,{children:"Guarantees consistency, proven at scale"}),(0,s.jsx)(n.td,{children:"Complex implementation, requires careful versioning"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Snapshot + Ops Log"}),(0,s.jsx)(n.td,{children:"Fast loading, efficient storage"}),(0,s.jsx)(n.td,{children:"More complex than pure event sourcing"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"WebSocket Persistent Connections"}),(0,s.jsx)(n.td,{children:"Real-time updates, low latency"}),(0,s.jsx)(n.td,{children:"Connection management complexity, server resources"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Spanner for Metadata"}),(0,s.jsx)(n.td,{children:"Global consistency, strong ACID"}),(0,s.jsx)(n.td,{children:"Higher cost than NoSQL alternatives"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Client-Side Caching"}),(0,s.jsx)(n.td,{children:"Offline mode, instant loading"}),(0,s.jsx)(n.td,{children:"Sync complexity, potential staleness"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Periodic Snapshots"}),(0,s.jsx)(n.td,{children:"Bounded replay time"}),(0,s.jsx)(n.td,{children:"Storage overhead (5x multiplier)"})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"advanced-topics",children:"Advanced Topics"}),"\n",(0,s.jsx)(n.h3,{id:"713-rich-text-representation",children:"7.13 Rich Text Representation"}),"\n",(0,s.jsx)(n.h4,{id:"dom-based-vs-operational-model",children:"DOM-Based vs Operational Model"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Google Docs uses custom data structure (not direct DOM)\nclass DocumentModel {\n  constructor() {\n    this.paragraphs = [];\n    this.styles = new Map();\n  }\n\n  // Paragraph with formatting\n  addParagraph(text, formatting) {\n    const para = {\n      id: generateId(),\n      text,\n      formatting: {\n        bold: [],      // Ranges: [{start: 0, end: 5}]\n        italic: [],\n        fontSize: 12,\n        alignment: 'left'\n      },\n      type: 'paragraph' // or 'heading1', 'list-item', etc.\n    };\n    this.paragraphs.push(para);\n  }\n\n  // Apply operation to model\n  applyOperation(op) {\n    const para = this.findParagraph(op.paragraphId);\n\n    if (op.type === 'insert') {\n      para.text = para.text.slice(0, op.position) +\n                  op.content +\n                  para.text.slice(op.position);\n      this.updateFormatting(para, op);\n    }\n\n    // Render to DOM\n    this.renderToDom();\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"formatting-operations",children:"Formatting Operations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Bold operation: Apply bold to range\n{\n  type: 'format',\n  paragraphId: 'para-123',\n  range: { start: 10, end: 20 },\n  style: 'bold',\n  value: true\n}\n\n// Complex: Bold + Italic overlapping ranges\nParagraph text: \"Hello World Everyone\"\nBold: [0-10]\nItalic: [6-15]\n\nResult formatting:\n[0-5]:   Bold only\n[6-10]:  Bold + Italic\n[11-15]: Italic only\n[16-20]: No formatting\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"714-presence--awareness",children:"7.14 Presence & Awareness"}),"\n",(0,s.jsx)(n.h4,{id:"real-time-cursor-tracking",children:"Real-Time Cursor Tracking"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Each user has a color and cursor position\nclass PresenceManager {\n  constructor() {\n    this.users = new Map(); // userId -> cursor state\n    this.colors = ['#FF5733', '#33FF57', '#3357FF', ...];\n  }\n\n  updateCursor(userId, position, selection) {\n    const user = this.users.get(userId) || {\n      color: this.assignColor(userId),\n      name: this.getUserName(userId)\n    };\n\n    user.cursor = position;\n    user.selection = selection;\n    user.lastUpdate = Date.now();\n\n    this.users.set(userId, user);\n\n    // Broadcast to others\n    this.broadcast('cursor-update', {\n      userId,\n      position,\n      selection,\n      color: user.color\n    });\n  }\n\n  renderCursors() {\n    // Draw colored cursors and selection ranges for each user\n    for (const [userId, user] of this.users) {\n      if (Date.now() - user.lastUpdate > 5000) {\n        this.users.delete(userId); // User inactive\n        continue;\n      }\n\n      this.drawCursor(user.cursor, user.color, user.name);\n      if (user.selection) {\n        this.drawSelection(user.selection, user.color);\n      }\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"715-handling-edge-cases",children:"7.15 Handling Edge Cases"}),"\n",(0,s.jsx)(n.h4,{id:"1-network-partitions",children:"1. Network Partitions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Scenario: User edits offline for 2 hours, comes back online\n\nSolution:\n1. Upload all buffered operations\n2. Server applies OT to each operation\n3. If conflicts detected, server sends transformed ops back\n4. Client applies transformations to local state\n5. Eventual convergence guaranteed\n"})}),"\n",(0,s.jsx)(n.h4,{id:"2-concurrent-formatters",children:"2. Concurrent Formatters"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'User A: Bolds "Hello"\nUser B: Deletes "Hello"\n\nOT Resolution:\n- Delete operation wins (text removed)\n- Bold operation becomes no-op (nothing to bold)\n'})}),"\n",(0,s.jsx)(n.h4,{id:"3-very-large-documents",children:"3. Very Large Documents"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Problem: 1000-page document with 10 simultaneous editors\n\nSolution:\n1. Split document into sections\n2. Each section has independent operation log\n3. Load only visible sections + adjacent buffers\n4. Background workers merge section snapshots periodically\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"716-export--import",children:"7.16 Export & Import"}),"\n",(0,s.jsx)(n.h4,{id:"export-formats",children:"Export Formats"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class ExportService {\n  async export(documentId, format) {\n    const doc = await getDocument(documentId);\n\n    switch(format) {\n      case 'docx':\n        return this.convertToDocx(doc);\n      case 'pdf':\n        return this.convertToPdf(doc);\n      case 'html':\n        return this.convertToHtml(doc);\n      case 'markdown':\n        return this.convertToMarkdown(doc);\n    }\n  }\n\n  convertToDocx(doc) {\n    // Use library like docx.js\n    const docx = new Document({\n      sections: doc.paragraphs.map(p => ({\n        children: [\n          new Paragraph({\n            text: p.text,\n            bold: p.formatting.bold,\n            // ... other formatting\n          })\n        ]\n      }))\n    });\n\n    return Packer.toBuffer(docx);\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"import--ocr",children:"Import & OCR"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Import Flow:\n1. User uploads Word/PDF file\n2. Parse file to extract text + formatting\n3. Convert to Google Docs internal format\n4. Create initial snapshot\n5. If PDF: Run OCR (Google Cloud Vision API)\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"future-enhancements",children:"Future Enhancements"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"AI-Powered Features"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Smart Compose (autocomplete sentences)"}),"\n",(0,s.jsx)(n.li,{children:"Grammar and style suggestions"}),"\n",(0,s.jsx)(n.li,{children:"Automatic summarization"}),"\n",(0,s.jsx)(n.li,{children:"Translation in real-time"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Advanced Collaboration"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Video/audio chat integrated in document"}),"\n",(0,s.jsx)(n.li,{children:"Live presentations with audience Q&A"}),"\n",(0,s.jsx)(n.li,{children:"Voting/polling within documents"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Enhanced Rich Media"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Embedded 3D models"}),"\n",(0,s.jsx)(n.li,{children:"Interactive charts/graphs"}),"\n",(0,s.jsx)(n.li,{children:"Code execution environments"}),"\n",(0,s.jsx)(n.li,{children:"Miro-style infinite canvas"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Blockchain Integration"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Immutable revision history"}),"\n",(0,s.jsx)(n.li,{children:"Document provenance tracking"}),"\n",(0,s.jsx)(n.li,{children:"Digital signatures for legal docs"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Improved Offline"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Peer-to-peer sync (no server needed)"}),"\n",(0,s.jsx)(n.li,{children:"Local-first architecture"}),"\n",(0,s.jsx)(n.li,{children:"Conflict resolution on device"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Accessibility"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Real-time transcription for voice input"}),"\n",(0,s.jsx)(n.li,{children:"Screen reader optimizations"}),"\n",(0,s.jsx)(n.li,{children:"Dyslexia-friendly formatting"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Performance"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"WebAssembly for faster OT"}),"\n",(0,s.jsx)(n.li,{children:"CRDT adoption for simpler conflict resolution"}),"\n",(0,s.jsx)(n.li,{children:"Edge computing for global low latency"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsxs)(n.p,{children:["Google Docs is fundamentally a ",(0,s.jsx)(n.strong,{children:"distributed systems problem"})," focused on:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consistency"}),": OT/CRDT ensures all users see the same document"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Low Latency"}),": WebSocket + geographic distribution"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Availability"}),": Offline mode + multi-region replication"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Scalability"}),": Microservices + horizontal scaling"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The core innovation is ",(0,s.jsx)(n.strong,{children:"Operational Transformation"}),", which allows conflict-free merging of concurrent edits. Combined with a robust infrastructure (Spanner, Bigtable, Pub/Sub), Google Docs delivers a seamless collaborative experience to billions of users."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"references--further-reading",children:"References & Further Reading"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Operational Transformation"}),': "Operational Transformation in Real-Time Group Editors" (Ellis & Gibbs, 1989)']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"CRDT"}),': "Conflict-free Replicated Data Types" (Shapiro et al., 2011)']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Google Spanner"}),': "Spanner: Google\'s Globally Distributed Database" (Corbett et al., 2012)']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Real-Time Collaboration"}),': "Jupiter Collaboration System" (Nichols et al., 1995)']}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(96540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);