"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8379],{2958:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var t=n(4848),s=n(8453);const a={title:"Currying Variations"},c=void 0,o={id:"WebDev/JavaScript/Currying",title:"Currying Variations",description:"Type 1",source:"@site/docs/WebDev/JavaScript/Currying.mdx",sourceDirName:"WebDev/JavaScript",slug:"/WebDev/JavaScript/Currying",permalink:"/js.enigma/docs/WebDev/JavaScript/Currying",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/WebDev/JavaScript/Currying.mdx",tags:[],version:"current",frontMatter:{title:"Currying Variations"},sidebar:"tutorialSidebar",previous:{title:"Closures",permalink:"/js.enigma/docs/WebDev/JavaScript/Closure"},next:{title:"Design Patterns",permalink:"/js.enigma/docs/WebDev/JavaScript/DesignPatterns"}},i={},u=[{value:"Type 1",id:"type-1",level:3},{value:"Type 2",id:"type-2",level:3},{value:"Type 3",id:"type-3",level:3}];function l(e){const r={code:"code",h3:"h3",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h3,{id:"type-1",children:"Type 1"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-JavaScript",children:"const sum = (a) => (b) => b ? sum2(a + b) : a\r\nconsole.log(sum(1)(2)(3)());  //6\n"})}),"\n",(0,t.jsx)(r.h3,{id:"type-2",children:"Type 2"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-JavaScript",children:"const sum = (a, b, c) => a + b + c\r\n\r\nconst curry = (fn) => {\r\n  return function curried(...args) {\r\n    return args.length >= fn.length\r\n      ? fn(...args)\r\n      : (...newArgs) => curried(...args, ...newArgs)\r\n  }\r\n}\r\n\r\nconst curriedSum = curry(sum);\r\nconsole.log(curriedSum(1)(2)(3)); // 6\n"})}),"\n",(0,t.jsx)(r.h3,{id:"type-3",children:"Type 3"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-JavaScript",children:"const add = (...args) => args.reduce((acc, curr) => acc + curr, 0);\r\n\r\nconst sum = (...args) => {\r\n  // Initialize total sum with the provided arguments\r\n  let total = add(...args);\r\n\r\n  // Helper function to accumulate sums\r\n  const helper = (...newArgs) => {\r\n    if (newArgs.length === 0) {\r\n      // If no new arguments are provided, return the total sum\r\n      return total;\r\n    }\r\n    // Update the total with new arguments and return the helper function for further chaining\r\n    total += add(...newArgs);\r\n    return helper;\r\n  };\r\n\r\n  return args.length === 0 ? 0 : helper;\r\n};\r\n\r\n// Example usage\r\nconsole.log(sum(1)(2)(3)()); // 6\r\nconsole.log(sum(1, 2)(3)()); // 6\r\nconsole.log(sum(1)(2, 3)()); // 6\r\nconsole.log(sum(1, 2, 3, 4)()); // 10\r\nconsole.log(sum(1)(2, 3, 4)()); // 10\r\nconsole.log(sum()); // 0\n"})})]})}function d(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>c,x:()=>o});var t=n(6540);const s={},a=t.createContext(s);function c(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);