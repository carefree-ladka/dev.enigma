"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7468],{4233:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>c});var i=n(4848),l=n(8453);const t={},r="Different Styling Techniques",d={id:"Frontend System Design/StyleTechnoques",title:"Different Styling Techniques",description:"1. CSS (Cascading Style Sheets)",source:"@site/docs/Frontend System Design/StyleTechnoques.mdx",sourceDirName:"Frontend System Design",slug:"/Frontend System Design/StyleTechnoques",permalink:"/js.enigma/docs/Frontend System Design/StyleTechnoques",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/Frontend System Design/StyleTechnoques.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Different Rendering Techniques",permalink:"/js.enigma/docs/Frontend System Design/RenderingTechniques"},next:{title:"System Design Fundamentals",permalink:"/js.enigma/docs/Frontend System Design/SystemDesignFundamentals"}},a={},c=[{value:"1. CSS (Cascading Style Sheets)",id:"1-css-cascading-style-sheets",level:2},{value:"Theory",id:"theory",level:3},{value:"Use Cases",id:"use-cases",level:3},{value:"Limitations",id:"limitations",level:3},{value:"2. CSS Modules",id:"2-css-modules",level:2},{value:"Theory",id:"theory-1",level:3},{value:"How It Works?",id:"how-it-works",level:3},{value:"Use Cases",id:"use-cases-1",level:3},{value:"Limitations",id:"limitations-1",level:3},{value:"3. CSS-in-JS",id:"3-css-in-js",level:2},{value:"Theory",id:"theory-2",level:3},{value:"How It Works?",id:"how-it-works-1",level:3},{value:"Use Cases",id:"use-cases-2",level:3},{value:"Limitations",id:"limitations-2",level:3},{value:"4. Tailwind CSS",id:"4-tailwind-css",level:2},{value:"Theory",id:"theory-3",level:3},{value:"How It Works?",id:"how-it-works-2",level:3},{value:"Use Cases",id:"use-cases-3",level:3},{value:"Limitations",id:"limitations-3",level:3},{value:"5. SCSS/SASS (Syntactically Awesome Stylesheets)",id:"5-scsssass-syntactically-awesome-stylesheets",level:2},{value:"Theory",id:"theory-4",level:3},{value:"How It Works?",id:"how-it-works-3",level:3},{value:"Use Cases",id:"use-cases-4",level:3},{value:"Limitations",id:"limitations-4",level:3},{value:"Comparison Table",id:"comparison-table",level:2},{value:"Conclusion",id:"conclusion",level:2}];function o(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"different-styling-techniques",children:"Different Styling Techniques"})}),"\n",(0,i.jsx)(s.h2,{id:"1-css-cascading-style-sheets",children:"1. CSS (Cascading Style Sheets)"}),"\n",(0,i.jsx)(s.h3,{id:"theory",children:"Theory"}),"\n",(0,i.jsx)(s.p,{children:"CSS is the fundamental styling language used to design web pages. It allows developers to apply styles globally or locally using classes, IDs, and element selectors."}),"\n",(0,i.jsx)(s.h3,{id:"use-cases",children:"Use Cases"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Traditional websites with static or minimal dynamic styling"}),"\n",(0,i.jsx)(s.li,{children:"Projects where separation of concerns (HTML & CSS) is preferred"}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"limitations",children:"Limitations"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Global scope can lead to style conflicts"}),"\n",(0,i.jsx)(s.li,{children:"Hard to manage styles in large applications"}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"2-css-modules",children:"2. CSS Modules"}),"\n",(0,i.jsx)(s.h3,{id:"theory-1",children:"Theory"}),"\n",(0,i.jsx)(s.p,{children:"CSS Modules provide locally scoped styles, meaning styles are scoped to a specific component rather than being global."}),"\n",(0,i.jsx)(s.h3,{id:"how-it-works",children:"How It Works?"}),"\n",(0,i.jsx)(s.p,{children:"CSS files are imported as JavaScript objects, and class names are automatically scoped to avoid conflicts."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:'import styles from "./Button.module.css";\n\nconst Button = () => (\n  <button className={styles.button}>Click Me</button>\n);\n'})}),"\n",(0,i.jsx)(s.p,{children:"CSS Modules are perfect for component-based architectures like React and Vue!"}),"\n",(0,i.jsx)(s.h3,{id:"use-cases-1",children:"Use Cases"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Component-based architectures (React, Vue, etc.)"}),"\n",(0,i.jsx)(s.li,{children:"Large-scale applications where style encapsulation is required"}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"limitations-1",children:"Limitations"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Extra build configuration required"}),"\n",(0,i.jsx)(s.li,{children:"Not as flexible for dynamic styles"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"3-css-in-js",children:"3. CSS-in-JS"}),"\n",(0,i.jsx)(s.h3,{id:"theory-2",children:"Theory"}),"\n",(0,i.jsx)(s.p,{children:"CSS-in-JS allows writing CSS styles directly within JavaScript files using libraries like Styled Components or Emotion."}),"\n",(0,i.jsx)(s.h3,{id:"how-it-works-1",children:"How It Works?"}),"\n",(0,i.jsx)(s.p,{children:"Styles are defined inside JavaScript and scoped per component, then dynamically generated and injected into the page."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:'import styled from "styled-components";\n\nconst Button = styled.button`\n  background: blue;\n  color: white;\n  padding: 10px;\n`;\n'})}),"\n",(0,i.jsx)(s.h3,{id:"use-cases-2",children:"Use Cases"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"React and component-driven frameworks"}),"\n",(0,i.jsx)(s.li,{children:"Dynamic theming, dark mode support, and runtime styles"}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"limitations-2",children:"Limitations"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Higher runtime cost due to JavaScript execution"}),"\n",(0,i.jsx)(s.li,{children:"Larger bundle sizes"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"4-tailwind-css",children:"4. Tailwind CSS"}),"\n",(0,i.jsx)(s.h3,{id:"theory-3",children:"Theory"}),"\n",(0,i.jsx)(s.p,{children:"Tailwind CSS is a utility-first CSS framework that provides predefined utility classes for faster styling without writing custom CSS."}),"\n",(0,i.jsx)(s.h3,{id:"how-it-works-2",children:"How It Works?"}),"\n",(0,i.jsx)(s.p,{children:"Utility classes are used directly in HTML/JSX, making styles composable and reusable."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-jsx",children:'const Button = () => (\n  <button className="bg-blue-500 text-white p-2 rounded-lg">\n    Click Me\n  </button>\n);\n'})}),"\n",(0,i.jsx)(s.h3,{id:"use-cases-3",children:"Use Cases"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Rapid UI development"}),"\n",(0,i.jsx)(s.li,{children:"Highly customizable and scalable projects"}),"\n",(0,i.jsx)(s.li,{children:"Applications requiring design consistency"}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"limitations-3",children:"Limitations"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Learning curve for beginners"}),"\n",(0,i.jsx)(s.li,{children:"Can lead to bloated class names if not managed properly"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"5-scsssass-syntactically-awesome-stylesheets",children:"5. SCSS/SASS (Syntactically Awesome Stylesheets)"}),"\n",(0,i.jsx)(s.h3,{id:"theory-4",children:"Theory"}),"\n",(0,i.jsx)(s.p,{children:"SCSS is a preprocessor that extends CSS with variables, mixins, nesting, and functions."}),"\n",(0,i.jsx)(s.h3,{id:"how-it-works-3",children:"How It Works?"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-scss",children:"$primary-color: blue;\n\n.button {\n  background: $primary-color;\n  padding: 10px;\n  \n  &:hover {\n    background: darken($primary-color, 10%);\n  }\n}\n"})}),"\n",(0,i.jsx)(s.h3,{id:"use-cases-4",children:"Use Cases"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Projects requiring reusable styles (e.g., themes, design systems)"}),"\n",(0,i.jsx)(s.li,{children:"Large-scale applications with complex styling needs"}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"limitations-4",children:"Limitations"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Requires compilation to standard CSS"}),"\n",(0,i.jsx)(s.li,{children:"Can become difficult to manage if overused"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"comparison-table",children:"Comparison Table"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Technique"}),(0,i.jsx)(s.th,{children:"Scoped Styles"}),(0,i.jsx)(s.th,{children:"Performance"}),(0,i.jsx)(s.th,{children:"Best Use Case"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"CSS"}),(0,i.jsx)(s.td,{children:"\u274c No"}),(0,i.jsx)(s.td,{children:"\u2705 Fast"}),(0,i.jsx)(s.td,{children:"Simple projects"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"CSS Modules"}),(0,i.jsx)(s.td,{children:"\u2705 Yes"}),(0,i.jsx)(s.td,{children:"\u2705 Fast"}),(0,i.jsx)(s.td,{children:"Component-based UI"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"CSS-in-JS"}),(0,i.jsx)(s.td,{children:"\u2705 Yes"}),(0,i.jsx)(s.td,{children:"\u26a0\ufe0f Slower"}),(0,i.jsx)(s.td,{children:"Dynamic styling"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Tailwind CSS"}),(0,i.jsx)(s.td,{children:"\u2705 Yes"}),(0,i.jsx)(s.td,{children:"\u2705 Fast"}),(0,i.jsx)(s.td,{children:"Utility-first styling"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"SCSS/SASS"}),(0,i.jsx)(s.td,{children:"\u274c No"}),(0,i.jsx)(s.td,{children:"\u2705 Fast"}),(0,i.jsx)(s.td,{children:"Large-scale applications"})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(s.p,{children:"Choosing the right styling approach depends on your project needs. CSS Modules and CSS-in-JS work well in component-driven applications, while Tailwind CSS is great for rapid development. SCSS remains useful for large-scale projects requiring maintainability."})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>d});var i=n(6540);const l={},t=i.createContext(l);function r(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);