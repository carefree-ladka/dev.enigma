"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[694],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>p});var a=n(96540);const o={},c=a.createContext(o);function r(e){const t=a.useContext(c);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function p(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(c.Provider,{value:t},e.children)}},47316:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>p,toc:()=>s});var a=n(74848),o=n(28453);const c={title:"React TypeScript Context"},r=void 0,p={id:"WebDev/React/ReactTypeScriptContext",title:"React TypeScript Context",description:"",source:"@site/docs/WebDev/React/ReactTypeScriptContext.mdx",sourceDirName:"WebDev/React",slug:"/WebDev/React/ReactTypeScriptContext",permalink:"/dev.enigma/docs/WebDev/React/ReactTypeScriptContext",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/WebDev/React/ReactTypeScriptContext.mdx",tags:[],version:"current",frontMatter:{title:"React TypeScript Context"},sidebar:"tutorialSidebar",previous:{title:"React TypeScript Cheatsheet",permalink:"/dev.enigma/docs/WebDev/React/ReactTypeScript"},next:{title:"Redux Saga Testing",permalink:"/dev.enigma/docs/WebDev/React/ReduxSagaTesting"}},i={},s=[];function d(e){const t={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-JavaScript",children:'import * as React from "react";\n\ninterface Todo {\n  id: number;\n  text: string;\n}\n\ninterface AppState {\n  todos: Todo[];\n}\n\ntype SetAppState = React.Dispatch<React.SetStateAction<AppState>>;\n\nconst AppContext = React.createContext<\n  | {\n      appState: AppState;\n      setAppState: SetAppState;\n    }\n  | undefined\n>(undefined);\n\ninterface AppProviderProps {\n  children: React.ReactNode;\n}\n\nexport default function AppProvider({ children }: AppProviderProps) {\n  const [appState, setAppState] = React.useState<AppState>({\n    todos: [{ id: 1, text: "Walk the dog" }],\n  });\n\n  const value = React.useMemo(() => ({ appState, setAppState }), [appState]);\n\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\n}\n\nexport function useAppContext() {\n  const context = React.useContext(AppContext);\n  if (context === undefined) {\n    throw new Error("useAppContext must be used within an AppProvider");\n  }\n  return context;\n}\n'})})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);