"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2514],{8028:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var i=s(4848),r=s(8453);const a={},t="PostgreSQL Comprehensive Notes",l={id:"Database/PostgreSQL Comprehensive Notes",title:"PostgreSQL Comprehensive Notes",description:"Table of Contents",source:"@site/docs/Database/PostgreSQL Comprehensive Notes.mdx",sourceDirName:"Database",slug:"/Database/PostgreSQL Comprehensive Notes",permalink:"/js.enigma/docs/Database/PostgreSQL Comprehensive Notes",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/Database/PostgreSQL Comprehensive Notes.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SQL Query Optimization Guide",permalink:"/js.enigma/docs/Database/DB Query Optimization"},next:{title:"SQL Essentials for Java Backend Developers",permalink:"/js.enigma/docs/Database/SQL Essentials for Java Backend Developers"}},d={},o=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"What is PostgreSQL?",id:"what-is-postgresql",level:2},{value:"Key Characteristics",id:"key-characteristics",level:3},{value:"Why Use PostgreSQL?",id:"why-use-postgresql",level:2},{value:"1. <strong>Advanced Data Types</strong>",id:"1-advanced-data-types",level:3},{value:"2. <strong>Performance &amp; Scalability</strong>",id:"2-performance--scalability",level:3},{value:"3. <strong>Reliability &amp; Data Integrity</strong>",id:"3-reliability--data-integrity",level:3},{value:"4. <strong>Extensibility</strong>",id:"4-extensibility",level:3},{value:"5. <strong>Security Features</strong>",id:"5-security-features",level:3},{value:"PostgreSQL vs MySQL",id:"postgresql-vs-mysql",level:2},{value:"When to Choose PostgreSQL over MySQL",id:"when-to-choose-postgresql-over-mysql",level:3},{value:"PostgreSQL Features",id:"postgresql-features",level:2},{value:"1. <strong>Data Types</strong>",id:"1-data-types",level:3},{value:"2. <strong>Advanced Features</strong>",id:"2-advanced-features",level:3},{value:"3. <strong>Indexing</strong>",id:"3-indexing",level:3},{value:"4. <strong>Replication &amp; High Availability</strong>",id:"4-replication--high-availability",level:3},{value:"PostgreSQL Commands by Category",id:"postgresql-commands-by-category",level:2},{value:"Database Operations",id:"database-operations",level:3},{value:"Creating and Managing Databases",id:"creating-and-managing-databases",level:4},{value:"Table Operations",id:"table-operations",level:3},{value:"Creating Tables",id:"creating-tables",level:4},{value:"Altering Tables",id:"altering-tables",level:4},{value:"Table Information",id:"table-information",level:4},{value:"Data Manipulation",id:"data-manipulation",level:3},{value:"INSERT Operations",id:"insert-operations",level:4},{value:"SELECT Operations",id:"select-operations",level:4},{value:"UPDATE Operations",id:"update-operations",level:4},{value:"DELETE Operations",id:"delete-operations",level:4},{value:"Index Operations",id:"index-operations",level:3},{value:"View Operations",id:"view-operations",level:3},{value:"Function and Procedure Operations",id:"function-and-procedure-operations",level:3},{value:"User and Permission Operations",id:"user-and-permission-operations",level:3},{value:"Transaction Operations",id:"transaction-operations",level:3},{value:"Advanced Query Operations",id:"advanced-query-operations",level:3},{value:"JSON Operations",id:"json-operations",level:4},{value:"Array Operations",id:"array-operations",level:4},{value:"Full-Text Search",id:"full-text-search",level:4},{value:"System and Maintenance Operations",id:"system-and-maintenance-operations",level:3},{value:"Database Information",id:"database-information",level:4},{value:"Backup and Restore",id:"backup-and-restore",level:4},{value:"Performance and Statistics",id:"performance-and-statistics",level:4},{value:"Common psql Commands",id:"common-psql-commands",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Security",id:"security",level:3},{value:"Data Integrity",id:"data-integrity",level:3},{value:"Development",id:"development",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"postgresql-comprehensive-notes",children:"PostgreSQL Comprehensive Notes"})}),"\n",(0,i.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#what-is-postgresql",children:"What is PostgreSQL?"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#why-use-postgresql",children:"Why Use PostgreSQL?"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#postgresql-vs-mysql",children:"PostgreSQL vs MySQL"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#postgresql-features",children:"PostgreSQL Features"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#postgresql-commands-by-category",children:"PostgreSQL Commands by Category"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#database-operations",children:"Database Operations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#table-operations",children:"Table Operations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#data-manipulation",children:"Data Manipulation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#index-operations",children:"Index Operations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#view-operations",children:"View Operations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#function-and-procedure-operations",children:"Function and Procedure Operations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#user-and-permission-operations",children:"User and Permission Operations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#transaction-operations",children:"Transaction Operations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#advanced-query-operations",children:"Advanced Query Operations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#system-and-maintenance-operations",children:"System and Maintenance Operations"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#common-psql-commands",children:"Common psql Commands"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#best-practices",children:"Best Practices"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"what-is-postgresql",children:"What is PostgreSQL?"}),"\n",(0,i.jsx)(n.p,{children:'PostgreSQL (often called "Postgres") is a powerful, open-source object-relational database management system (ORDBMS) that has been in active development for over 30 years. It\'s known for its reliability, feature robustness, and performance.'}),"\n",(0,i.jsx)(n.h3,{id:"key-characteristics",children:"Key Characteristics"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ACID Compliant"}),": Ensures data integrity through Atomicity, Consistency, Isolation, and Durability"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Open Source"}),": Free to use with a permissive license"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cross-Platform"}),": Runs on Linux, Windows, macOS, and other Unix-like systems"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Extensible"}),": Supports custom data types, functions, and extensions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Standards Compliant"}),": Follows SQL standards more closely than most databases"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"why-use-postgresql",children:"Why Use PostgreSQL?"}),"\n",(0,i.jsxs)(n.h3,{id:"1-advanced-data-types",children:["1. ",(0,i.jsx)(n.strong,{children:"Advanced Data Types"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"JSON and JSONB for document storage"}),"\n",(0,i.jsx)(n.li,{children:"Arrays, ranges, and geometric types"}),"\n",(0,i.jsx)(n.li,{children:"Custom data types"}),"\n",(0,i.jsx)(n.li,{children:"Full-text search capabilities"}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"2-performance--scalability",children:["2. ",(0,i.jsx)(n.strong,{children:"Performance & Scalability"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Multi-version concurrency control (MVCC)"}),"\n",(0,i.jsx)(n.li,{children:"Advanced indexing (B-tree, Hash, GiST, SP-GiST, GIN, BRIN)"}),"\n",(0,i.jsx)(n.li,{children:"Table partitioning"}),"\n",(0,i.jsx)(n.li,{children:"Parallel queries"}),"\n",(0,i.jsx)(n.li,{children:"Write-ahead logging (WAL)"}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"3-reliability--data-integrity",children:["3. ",(0,i.jsx)(n.strong,{children:"Reliability & Data Integrity"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ACID compliance"}),"\n",(0,i.jsx)(n.li,{children:"Foreign key constraints"}),"\n",(0,i.jsx)(n.li,{children:"Check constraints"}),"\n",(0,i.jsx)(n.li,{children:"Transactions with savepoints"}),"\n",(0,i.jsx)(n.li,{children:"Point-in-time recovery"}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"4-extensibility",children:["4. ",(0,i.jsx)(n.strong,{children:"Extensibility"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Custom functions in multiple languages (PL/pgSQL, Python, JavaScript, etc.)"}),"\n",(0,i.jsx)(n.li,{children:"Extensions ecosystem"}),"\n",(0,i.jsx)(n.li,{children:"Custom operators and data types"}),"\n",(0,i.jsx)(n.li,{children:"Procedural languages"}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"5-security-features",children:["5. ",(0,i.jsx)(n.strong,{children:"Security Features"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Row-level security"}),"\n",(0,i.jsx)(n.li,{children:"SSL connections"}),"\n",(0,i.jsx)(n.li,{children:"Authentication methods (MD5, SCRAM, Kerberos, LDAP)"}),"\n",(0,i.jsx)(n.li,{children:"Role-based access control"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"postgresql-vs-mysql",children:"PostgreSQL vs MySQL"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Feature"}),(0,i.jsx)(n.th,{children:"PostgreSQL"}),(0,i.jsx)(n.th,{children:"MySQL"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"ACID Compliance"})}),(0,i.jsx)(n.td,{children:"Full ACID compliance"}),(0,i.jsx)(n.td,{children:"ACID with InnoDB engine"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Data Types"})}),(0,i.jsx)(n.td,{children:"Rich set including JSON, arrays, ranges"}),(0,i.jsx)(n.td,{children:"Basic types, limited JSON support"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Concurrency"})}),(0,i.jsx)(n.td,{children:"MVCC (better read performance)"}),(0,i.jsx)(n.td,{children:"Locking-based"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Standards Compliance"})}),(0,i.jsx)(n.td,{children:"Highly SQL standard compliant"}),(0,i.jsx)(n.td,{children:"Less compliant"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Replication"})}),(0,i.jsx)(n.td,{children:"Streaming, logical replication"}),(0,i.jsx)(n.td,{children:"Master-slave, master-master"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Full-text Search"})}),(0,i.jsx)(n.td,{children:"Built-in advanced search"}),(0,i.jsx)(n.td,{children:"Basic FULLTEXT indexes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Extensibility"})}),(0,i.jsx)(n.td,{children:"Highly extensible"}),(0,i.jsx)(n.td,{children:"Limited extensibility"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Performance"})}),(0,i.jsx)(n.td,{children:"Better for complex queries"}),(0,i.jsx)(n.td,{children:"Better for simple read-heavy workloads"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Learning Curve"})}),(0,i.jsx)(n.td,{children:"Steeper"}),(0,i.jsx)(n.td,{children:"Gentler"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Community"})}),(0,i.jsx)(n.td,{children:"Strong academic/enterprise focus"}),(0,i.jsx)(n.td,{children:"Web development focus"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"when-to-choose-postgresql-over-mysql",children:"When to Choose PostgreSQL over MySQL"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Choose PostgreSQL when you need:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Complex queries and data analysis"}),"\n",(0,i.jsx)(n.li,{children:"Data integrity is critical"}),"\n",(0,i.jsx)(n.li,{children:"Advanced data types (JSON, arrays, etc.)"}),"\n",(0,i.jsx)(n.li,{children:"Full-text search capabilities"}),"\n",(0,i.jsx)(n.li,{children:"Geographic data (PostGIS extension)"}),"\n",(0,i.jsx)(n.li,{children:"Extensibility and customization"}),"\n",(0,i.jsx)(n.li,{children:"Strong consistency requirements"}),"\n",(0,i.jsx)(n.li,{children:"ACID compliance across all operations"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Choose MySQL when you need:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Simple web applications"}),"\n",(0,i.jsx)(n.li,{children:"Read-heavy workloads"}),"\n",(0,i.jsx)(n.li,{children:"Faster development cycle"}),"\n",(0,i.jsx)(n.li,{children:"Simpler administration"}),"\n",(0,i.jsx)(n.li,{children:"Better performance for basic operations"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"postgresql-features",children:"PostgreSQL Features"}),"\n",(0,i.jsxs)(n.h3,{id:"1-data-types",children:["1. ",(0,i.jsx)(n.strong,{children:"Data Types"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Numeric"}),": INTEGER, BIGINT, DECIMAL, NUMERIC, REAL, DOUBLE PRECISION"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Character"}),": CHAR, VARCHAR, TEXT"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Date/Time"}),": DATE, TIME, TIMESTAMP, INTERVAL"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Boolean"}),": BOOLEAN"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Binary"}),": BYTEA"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Network"}),": INET, CIDR, MACADDR"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Geometric"}),": POINT, LINE, CIRCLE, POLYGON"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"JSON"}),": JSON, JSONB"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Arrays"}),": Any data type can be an array"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ranges"}),": INT4RANGE, TSRANGE, etc."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Custom Types"}),": User-defined types"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"2-advanced-features",children:["2. ",(0,i.jsx)(n.strong,{children:"Advanced Features"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Window Functions"}),": ROW_NUMBER(), RANK(), LAG(), LEAD()"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Common Table Expressions (CTEs)"}),": WITH queries"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Recursive Queries"}),": Hierarchical data processing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Table Inheritance"}),": Object-oriented database features"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Materialized Views"}),": Pre-computed query results"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Triggers"}),": Row and statement-level triggers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Stored Procedures"}),": Functions in multiple languages"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"3-indexing",children:["3. ",(0,i.jsx)(n.strong,{children:"Indexing"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"B-tree"}),": Default index type"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hash"}),": For equality operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GiST"}),": Generalized search trees"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SP-GiST"}),": Space-partitioned GiST"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GIN"}),": Generalized inverted indexes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"BRIN"}),": Block range indexes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Partial Indexes"}),": Indexes on subsets of data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Functional Indexes"}),": Indexes on expressions"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"4-replication--high-availability",children:["4. ",(0,i.jsx)(n.strong,{children:"Replication & High Availability"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Streaming Replication"}),": Real-time data streaming"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Logical Replication"}),": Publication/subscription model"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hot Standby"}),": Read queries on standby servers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Point-in-Time Recovery"}),": Restore to any point in time"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Connection Pooling"}),": Built-in connection management"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"postgresql-commands-by-category",children:"PostgreSQL Commands by Category"}),"\n",(0,i.jsx)(n.h3,{id:"database-operations",children:"Database Operations"}),"\n",(0,i.jsx)(n.h4,{id:"creating-and-managing-databases",children:"Creating and Managing Databases"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Create database\nCREATE DATABASE mydatabase;\nCREATE DATABASE mydatabase WITH ENCODING 'UTF8';\n\n-- Drop database\nDROP DATABASE mydatabase;\n\n-- List databases\n\\l\n\n-- Connect to database\n\\c mydatabase\n\n-- Show current database\nSELECT current_database();\n"})}),"\n",(0,i.jsx)(n.h3,{id:"table-operations",children:"Table Operations"}),"\n",(0,i.jsx)(n.h4,{id:"creating-tables",children:"Creating Tables"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Basic table creation\nCREATE TABLE users (\n    id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Table with constraints\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    user_id INTEGER REFERENCES users(id),\n    amount DECIMAL(10,2) CHECK (amount > 0),\n    status VARCHAR(20) DEFAULT 'pending'\n);\n\n-- Table with arrays\nCREATE TABLE tags (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    categories TEXT[]\n);\n"})}),"\n",(0,i.jsx)(n.h4,{id:"altering-tables",children:"Altering Tables"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Add column\nALTER TABLE users ADD COLUMN phone VARCHAR(20);\n\n-- Drop column\nALTER TABLE users DROP COLUMN phone;\n\n-- Rename column\nALTER TABLE users RENAME COLUMN username TO user_name;\n\n-- Change column type\nALTER TABLE users ALTER COLUMN email TYPE TEXT;\n\n-- Add constraint\nALTER TABLE users ADD CONSTRAINT unique_email UNIQUE (email);\n\n-- Drop constraint\nALTER TABLE users DROP CONSTRAINT unique_email;\n"})}),"\n",(0,i.jsx)(n.h4,{id:"table-information",children:"Table Information"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- List tables\n\\dt\n\n-- Describe table structure\n\\d users\n\n-- Show table with details\n\\d+ users\n\n-- Show table constraints\n\\d+ users\n"})}),"\n",(0,i.jsx)(n.h3,{id:"data-manipulation",children:"Data Manipulation"}),"\n",(0,i.jsx)(n.h4,{id:"insert-operations",children:"INSERT Operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Basic insert\nINSERT INTO users (username, email) VALUES ('john_doe', 'john@example.com');\n\n-- Multiple inserts\nINSERT INTO users (username, email) VALUES\n    ('jane_doe', 'jane@example.com'),\n    ('bob_smith', 'bob@example.com');\n\n-- Insert with returning\nINSERT INTO users (username, email)\nVALUES ('alice', 'alice@example.com')\nRETURNING id, created_at;\n\n-- Insert from another table\nINSERT INTO backup_users SELECT * FROM users WHERE created_at < '2023-01-01';\n"})}),"\n",(0,i.jsx)(n.h4,{id:"select-operations",children:"SELECT Operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Basic select\nSELECT * FROM users;\nSELECT username, email FROM users;\n\n-- With conditions\nSELECT * FROM users WHERE created_at > '2023-01-01';\nSELECT * FROM users WHERE username LIKE 'john%';\n\n-- Ordering and limiting\nSELECT * FROM users ORDER BY created_at DESC LIMIT 10;\nSELECT * FROM users ORDER BY username OFFSET 5 LIMIT 10;\n\n-- Aggregations\nSELECT COUNT(*) FROM users;\nSELECT COUNT(*), AVG(amount) FROM orders;\nSELECT status, COUNT(*) FROM orders GROUP BY status;\n\n-- Joins\nSELECT u.username, o.amount\nFROM users u\nJOIN orders o ON u.id = o.user_id;\n\n-- Window functions\nSELECT username,\n       ROW_NUMBER() OVER (ORDER BY created_at) as row_num,\n       RANK() OVER (ORDER BY created_at) as rank\nFROM users;\n"})}),"\n",(0,i.jsx)(n.h4,{id:"update-operations",children:"UPDATE Operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Basic update\nUPDATE users SET email = 'newemail@example.com' WHERE id = 1;\n\n-- Update multiple columns\nUPDATE users SET\n    username = 'new_username',\n    email = 'new@example.com'\nWHERE id = 1;\n\n-- Update with returning\nUPDATE users SET username = 'updated_user'\nWHERE id = 1\nRETURNING username, email;\n\n-- Update from another table\nUPDATE orders SET status = 'completed'\nFROM users\nWHERE orders.user_id = users.id AND users.username = 'john_doe';\n"})}),"\n",(0,i.jsx)(n.h4,{id:"delete-operations",children:"DELETE Operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Basic delete\nDELETE FROM users WHERE id = 1;\n\n-- Delete with condition\nDELETE FROM users WHERE created_at < '2023-01-01';\n\n-- Delete with returning\nDELETE FROM users WHERE username = 'old_user'\nRETURNING id, username;\n\n-- Truncate table (faster for all rows)\nTRUNCATE TABLE users;\nTRUNCATE TABLE users RESTART IDENTITY; -- Reset sequences\n"})}),"\n",(0,i.jsx)(n.h3,{id:"index-operations",children:"Index Operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Create index\nCREATE INDEX idx_users_email ON users(email);\nCREATE INDEX idx_users_username ON users(username);\n\n-- Unique index\nCREATE UNIQUE INDEX idx_users_email_unique ON users(email);\n\n-- Partial index\nCREATE INDEX idx_active_users ON users(username) WHERE active = true;\n\n-- Functional index\nCREATE INDEX idx_users_lower_email ON users(LOWER(email));\n\n-- Composite index\nCREATE INDEX idx_orders_user_status ON orders(user_id, status);\n\n-- List indexes\n\\di\n\n-- Drop index\nDROP INDEX idx_users_email;\n\n-- Reindex\nREINDEX INDEX idx_users_email;\nREINDEX TABLE users;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"view-operations",children:"View Operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Create view\nCREATE VIEW active_users AS\nSELECT * FROM users WHERE active = true;\n\n-- Materialized view\nCREATE MATERIALIZED VIEW user_stats AS\nSELECT\n    DATE_TRUNC('month', created_at) as month,\n    COUNT(*) as user_count\nFROM users\nGROUP BY DATE_TRUNC('month', created_at);\n\n-- Refresh materialized view\nREFRESH MATERIALIZED VIEW user_stats;\n\n-- Drop view\nDROP VIEW active_users;\nDROP MATERIALIZED VIEW user_stats;\n\n-- List views\n\\dv\n"})}),"\n",(0,i.jsx)(n.h3,{id:"function-and-procedure-operations",children:"Function and Procedure Operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Create function\nCREATE OR REPLACE FUNCTION get_user_count()\nRETURNS INTEGER AS $$\nBEGIN\n    RETURN (SELECT COUNT(*) FROM users);\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Function with parameters\nCREATE OR REPLACE FUNCTION get_user_by_id(user_id INTEGER)\nRETURNS TABLE(username VARCHAR, email VARCHAR) AS $$\nBEGIN\n    RETURN QUERY\n    SELECT u.username, u.email\n    FROM users u\n    WHERE u.id = user_id;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Call function\nSELECT get_user_count();\nSELECT * FROM get_user_by_id(1);\n\n-- Drop function\nDROP FUNCTION get_user_count();\n\n-- List functions\n\\df\n"})}),"\n",(0,i.jsx)(n.h3,{id:"user-and-permission-operations",children:"User and Permission Operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Create user\nCREATE USER myuser WITH PASSWORD 'mypassword';\n\n-- Create role\nCREATE ROLE myrole;\n\n-- Grant permissions\nGRANT SELECT, INSERT ON users TO myuser;\nGRANT ALL PRIVILEGES ON DATABASE mydatabase TO myuser;\n\n-- Revoke permissions\nREVOKE INSERT ON users FROM myuser;\n\n-- List users\n\\du\n\n-- List permissions\n\\dp users\n"})}),"\n",(0,i.jsx)(n.h3,{id:"transaction-operations",children:"Transaction Operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Begin transaction\nBEGIN;\n\n-- Commit transaction\nCOMMIT;\n\n-- Rollback transaction\nROLLBACK;\n\n-- Savepoints\nBEGIN;\nSAVEPOINT sp1;\n-- Some operations\nROLLBACK TO sp1;\nCOMMIT;\n\n-- Transaction isolation levels\nBEGIN ISOLATION LEVEL READ COMMITTED;\nBEGIN ISOLATION LEVEL REPEATABLE READ;\nBEGIN ISOLATION LEVEL SERIALIZABLE;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"advanced-query-operations",children:"Advanced Query Operations"}),"\n",(0,i.jsx)(n.h4,{id:"json-operations",children:"JSON Operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:'-- JSON data type\nCREATE TABLE documents (\n    id SERIAL PRIMARY KEY,\n    data JSON\n);\n\n-- Insert JSON data\nINSERT INTO documents (data) VALUES\n(\'{"name": "John", "age": 30, "city": "New York"}\');\n\n-- Query JSON\nSELECT data->>\'name\' as name FROM documents;\nSELECT * FROM documents WHERE data->>\'age\' = \'30\';\n\n-- JSONB operations\nCREATE TABLE documents_b (\n    id SERIAL PRIMARY KEY,\n    data JSONB\n);\n\n-- JSONB indexing\nCREATE INDEX idx_documents_data ON documents_b USING GIN (data);\n'})}),"\n",(0,i.jsx)(n.h4,{id:"array-operations",children:"Array Operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Create table with arrays\nCREATE TABLE posts (\n    id SERIAL PRIMARY KEY,\n    title VARCHAR(100),\n    tags TEXT[]\n);\n\n-- Insert array data\nINSERT INTO posts (title, tags) VALUES\n('First Post', ARRAY['tech', 'programming', 'sql']);\n\n-- Query arrays\nSELECT * FROM posts WHERE 'tech' = ANY(tags);\nSELECT * FROM posts WHERE tags @> ARRAY['tech'];\nSELECT unnest(tags) as tag FROM posts;\n"})}),"\n",(0,i.jsx)(n.h4,{id:"full-text-search",children:"Full-Text Search"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Basic full-text search\nSELECT * FROM documents WHERE to_tsvector(content) @@ to_tsquery('postgresql');\n\n-- Create text search index\nCREATE INDEX idx_documents_fts ON documents USING GIN (to_tsvector('english', content));\n\n-- Ranking results\nSELECT title, ts_rank(to_tsvector(content), to_tsquery('postgresql')) as rank\nFROM documents\nWHERE to_tsvector(content) @@ to_tsquery('postgresql')\nORDER BY rank DESC;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"system-and-maintenance-operations",children:"System and Maintenance Operations"}),"\n",(0,i.jsx)(n.h4,{id:"database-information",children:"Database Information"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Show version\nSELECT version();\n\n-- Show current user\nSELECT current_user;\n\n-- Show database size\nSELECT pg_size_pretty(pg_database_size('mydatabase'));\n\n-- Show table sizes\nSELECT schemaname, tablename,\n       pg_size_pretty(pg_total_relation_size(schemaname||'.'||tablename)) as size\nFROM pg_tables\nORDER BY pg_total_relation_size(schemaname||'.'||tablename) DESC;\n\n-- Show running queries\nSELECT pid, now() - pg_stat_activity.query_start AS duration, query\nFROM pg_stat_activity\nWHERE (now() - pg_stat_activity.query_start) > interval '5 minutes';\n"})}),"\n",(0,i.jsx)(n.h4,{id:"backup-and-restore",children:"Backup and Restore"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Dump database\npg_dump mydatabase > mydatabase_backup.sql\n\n# Dump with compression\npg_dump -Fc mydatabase > mydatabase_backup.dump\n\n# Restore database\npsql mydatabase < mydatabase_backup.sql\n\n# Restore from custom format\npg_restore -d mydatabase mydatabase_backup.dump\n\n# Dump specific table\npg_dump -t users mydatabase > users_backup.sql\n"})}),"\n",(0,i.jsx)(n.h4,{id:"performance-and-statistics",children:"Performance and Statistics"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Update table statistics\nANALYZE users;\nANALYZE; -- All tables\n\n-- Vacuum table\nVACUUM users;\nVACUUM FULL users; -- More thorough but locks table\n\n-- Auto vacuum settings\nSELECT name, setting FROM pg_settings WHERE name LIKE 'autovacuum%';\n\n-- Index usage statistics\nSELECT schemaname, tablename, indexname, idx_scan, idx_tup_read, idx_tup_fetch\nFROM pg_stat_user_indexes;\n\n-- Table statistics\nSELECT schemaname, tablename, n_tup_ins, n_tup_upd, n_tup_del\nFROM pg_stat_user_tables;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"common-psql-commands",children:"Common psql Commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Connection\npsql -h hostname -U username -d database\n\n# psql meta-commands\n\\?              # Help on psql commands\n\\h              # Help on SQL commands\n\\h SELECT       # Help on specific SQL command\n\n# Database and table info\n\\l              # List databases\n\\c database     # Connect to database\n\\dt             # List tables\n\\di             # List indexes\n\\dv             # List views\n\\df             # List functions\n\\du             # List users\n\\dp table       # List table permissions\n\n# Table structure\n\\d table        # Describe table\n\\d+ table       # Describe table with details\n\n# Settings\n\\set            # Show all variables\n\\timing on      # Show query execution time\n\\x              # Toggle expanded display\n\n# File operations\n\\i filename     # Execute commands from file\n\\o filename     # Send output to file\n\\o              # Send output back to stdout\n\n# Quit\n\\q              # Quit psql\n"})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use appropriate data types"})," - Don't use TEXT when VARCHAR(50) suffices"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Create proper indexes"})," - On frequently queried columns"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use EXPLAIN ANALYZE"})," - To understand query performance"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Regular maintenance"})," - VACUUM and ANALYZE regularly"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Connection pooling"})," - Use tools like PgBouncer for high-traffic applications"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use roles and permissions"})," - Principle of least privilege"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Enable SSL"})," - For all connections"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Regular updates"})," - Keep PostgreSQL updated"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Row-level security"})," - For multi-tenant applications"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Audit logging"})," - Track database access and changes"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"data-integrity",children:"Data Integrity"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use constraints"})," - Foreign keys, check constraints, not null"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Transactions"})," - Wrap related operations in transactions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Backup strategy"})," - Regular backups with tested restore procedures"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monitoring"})," - Set up alerts for disk space, connections, performance"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"development",children:"Development"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use prepared statements"})," - Prevent SQL injection"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Connection management"})," - Properly close connections"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Error handling"})," - Handle database errors gracefully"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Testing"})," - Test database operations thoroughly"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Migration scripts"})," - Version control database schema changes"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"PostgreSQL is a powerful and feature-rich database system that excels in complex applications requiring data integrity, advanced queries, and extensibility. While it may have a steeper learning curve than MySQL, its robustness and capabilities make it an excellent choice for serious applications."})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var i=s(6540);const r={},a=i.createContext(r);function t(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);