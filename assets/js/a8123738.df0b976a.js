"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[614],{14208:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var t=s(74848),l=s(28453);const r={},i="java.util.Objects Methods Guide",c={id:"Java/java.util.Objects Methods Guide",title:"java.util.Objects Methods Guide",description:"The java.util.Objects class provides utility methods for operating on objects. It was introduced in Java 7 and contains static methods for null-safe operations.",source:"@site/docs/Java/java.util.Objects Methods Guide.mdx",sourceDirName:"Java",slug:"/Java/java.util.Objects Methods Guide",permalink:"/docs/Java/java.util.Objects Methods Guide",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/Java/java.util.Objects Methods Guide.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TreeMap & TreeSet - Guide",permalink:"/docs/Java/TreeMap & TreeSet - Complete Study Notes"},next:{title:"Company Specific",permalink:"/docs/category/company-specific"}},o={},d=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Null Checking Methods",id:"null-checking-methods",level:2},{value:"<code>isNull(Object obj)</code>",id:"isnullobject-obj",level:3},{value:"<code>nonNull(Object obj)</code>",id:"nonnullobject-obj",level:3},{value:"<code>requireNonNull(T obj)</code>",id:"requirenonnullt-obj",level:3},{value:"<code>requireNonNull(T obj, String message)</code>",id:"requirenonnullt-obj-string-message",level:3},{value:"<code>requireNonNullElse(T obj, T defaultObj)</code>",id:"requirenonnullelset-obj-t-defaultobj",level:3},{value:"<code>requireNonNullElseGet(T obj, Supplier&lt;? extends T&gt; supplier)</code>",id:"requirenonnullelsegett-obj-supplier-extends-t-supplier",level:3},{value:"Comparison Methods",id:"comparison-methods",level:2},{value:"<code>equals(Object a, Object b)</code>",id:"equalsobject-a-object-b",level:3},{value:"<code>deepEquals(Object a, Object b)</code>",id:"deepequalsobject-a-object-b",level:3},{value:"<code>compare(T a, T b, Comparator&lt;? super T&gt; c)</code>",id:"comparet-a-t-b-comparator-super-t-c",level:3},{value:"Hash Code Methods",id:"hash-code-methods",level:2},{value:"<code>hashCode(Object o)</code>",id:"hashcodeobject-o",level:3},{value:"<code>hash(Object... values)</code>",id:"hashobject-values",level:3},{value:"String Methods",id:"string-methods",level:2},{value:"<code>toString(Object o)</code>",id:"tostringobject-o",level:3},{value:"<code>toString(Object o, String nullDefault)</code>",id:"tostringobject-o-string-nulldefault",level:3},{value:"Validation Methods",id:"validation-methods",level:2},{value:"<code>checkIndex(int index, int length)</code>",id:"checkindexint-index-int-length",level:3},{value:"<code>checkFromToIndex(int fromIndex, int toIndex, int length)</code>",id:"checkfromtoindexint-fromindex-int-toindex-int-length",level:3},{value:"<code>checkFromIndexSize(int fromIndex, int size, int length)</code>",id:"checkfromindexsizeint-fromindex-int-size-int-length",level:3},{value:"Common Use Cases",id:"common-use-cases",level:2},{value:"1. Null-Safe Equals in Entity Classes",id:"1-null-safe-equals-in-entity-classes",level:3},{value:"2. Constructor Validation",id:"2-constructor-validation",level:3},{value:"3. Default Values",id:"3-default-values",level:3},{value:"Summary",id:"summary",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"javautilobjects-methods-guide",children:"java.util.Objects Methods Guide"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"java.util.Objects"})," class provides utility methods for operating on objects. It was introduced in Java 7 and contains static methods for null-safe operations."]}),"\n",(0,t.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#null-checking-methods",children:"Null Checking Methods"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#comparison-methods",children:"Comparison Methods"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#hash-code-methods",children:"Hash Code Methods"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#string-methods",children:"String Methods"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#validation-methods",children:"Validation Methods"})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"null-checking-methods",children:"Null Checking Methods"}),"\n",(0,t.jsx)(n.h3,{id:"isnullobject-obj",children:(0,t.jsx)(n.code,{children:"isNull(Object obj)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature:"})," ",(0,t.jsx)(n.code,{children:"public static boolean isNull(Object obj)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Returns ",(0,t.jsx)(n.code,{children:"true"})," if the provided reference is ",(0,t.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'String str = null;\nSystem.out.println(Objects.isNull(str)); // true\n\nString name = "John";\nSystem.out.println(Objects.isNull(name)); // false\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"nonnullobject-obj",children:(0,t.jsx)(n.code,{children:"nonNull(Object obj)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature:"})," ",(0,t.jsx)(n.code,{children:"public static boolean nonNull(Object obj)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Returns ",(0,t.jsx)(n.code,{children:"true"})," if the provided reference is NOT ",(0,t.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'String str = "Hello";\nSystem.out.println(Objects.nonNull(str)); // true\n\nString empty = null;\nSystem.out.println(Objects.nonNull(empty)); // false\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"requirenonnullt-obj",children:(0,t.jsx)(n.code,{children:"requireNonNull(T obj)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature:"})," ",(0,t.jsx)(n.code,{children:"public static <T> T requireNonNull(T obj)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Checks that the specified object reference is not ",(0,t.jsx)(n.code,{children:"null"}),". Throws ",(0,t.jsx)(n.code,{children:"NullPointerException"})," if it is."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'String name = "Alice";\nString validated = Objects.requireNonNull(name);\nSystem.out.println(validated); // Alice\n\nString nullName = null;\nObjects.requireNonNull(nullName); // Throws NullPointerException\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"requirenonnullt-obj-string-message",children:(0,t.jsx)(n.code,{children:"requireNonNull(T obj, String message)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature:"})," ",(0,t.jsx)(n.code,{children:"public static <T> T requireNonNull(T obj, String message)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Checks that the object is not ",(0,t.jsx)(n.code,{children:"null"})," and throws ",(0,t.jsx)(n.code,{children:"NullPointerException"})," with a custom message if it is."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'String email = null;\ntry {\n    Objects.requireNonNull(email, "Email cannot be null");\n} catch (NullPointerException e) {\n    System.out.println(e.getMessage()); // Email cannot be null\n}\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"requirenonnullelset-obj-t-defaultobj",children:(0,t.jsx)(n.code,{children:"requireNonNullElse(T obj, T defaultObj)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature:"})," ",(0,t.jsx)(n.code,{children:"public static <T> T requireNonNullElse(T obj, T defaultObj)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Returns the first argument if non-null, otherwise returns the second argument (which must be non-null)."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'String name = null;\nString result = Objects.requireNonNullElse(name, "Guest");\nSystem.out.println(result); // Guest\n\nString actualName = "Bob";\nString result2 = Objects.requireNonNullElse(actualName, "Guest");\nSystem.out.println(result2); // Bob\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"requirenonnullelsegett-obj-supplier-extends-t-supplier",children:(0,t.jsx)(n.code,{children:"requireNonNullElseGet(T obj, Supplier<? extends T> supplier)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature:"})," ",(0,t.jsx)(n.code,{children:"public static <T> T requireNonNullElseGet(T obj, Supplier<? extends T> supplier)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Returns the first argument if non-null, otherwise returns the result from the supplier."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'String config = null;\nString result = Objects.requireNonNullElseGet(config, () -> "default-config");\nSystem.out.println(result); // default-config\n\nString existingConfig = "prod-config";\nString result2 = Objects.requireNonNullElseGet(existingConfig, () -> "default-config");\nSystem.out.println(result2); // prod-config\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"comparison-methods",children:"Comparison Methods"}),"\n",(0,t.jsx)(n.h3,{id:"equalsobject-a-object-b",children:(0,t.jsx)(n.code,{children:"equals(Object a, Object b)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature:"})," ",(0,t.jsx)(n.code,{children:"public static boolean equals(Object a, Object b)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Returns ",(0,t.jsx)(n.code,{children:"true"})," if the arguments are equal to each other, ",(0,t.jsx)(n.code,{children:"false"})," otherwise. Null-safe comparison."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'String str1 = "Java";\nString str2 = "Java";\nString str3 = null;\nString str4 = null;\n\nSystem.out.println(Objects.equals(str1, str2)); // true\nSystem.out.println(Objects.equals(str1, str3)); // false\nSystem.out.println(Objects.equals(str3, str4)); // true (both null)\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"deepequalsobject-a-object-b",children:(0,t.jsx)(n.code,{children:"deepEquals(Object a, Object b)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature:"})," ",(0,t.jsx)(n.code,{children:"public static boolean deepEquals(Object a, Object b)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Returns ",(0,t.jsx)(n.code,{children:"true"})," if arguments are deeply equal. For arrays, compares elements recursively."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"int[] arr1 = {1, 2, 3};\nint[] arr2 = {1, 2, 3};\nint[] arr3 = {1, 2, 4};\n\nSystem.out.println(Objects.equals(arr1, arr2)); // false (reference comparison)\nSystem.out.println(Objects.deepEquals(arr1, arr2)); // true (content comparison)\nSystem.out.println(Objects.deepEquals(arr1, arr3)); // false\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"comparet-a-t-b-comparator-super-t-c",children:(0,t.jsx)(n.code,{children:"compare(T a, T b, Comparator<? super T> c)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature:"})," ",(0,t.jsx)(n.code,{children:"public static <T> int compare(T a, T b, Comparator<? super T> c)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Compares two objects using a comparator. Returns 0 if both are null or equal."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'String name1 = "Alice";\nString name2 = "Bob";\nString name3 = null;\n\nint result1 = Objects.compare(name1, name2, String::compareTo);\nSystem.out.println(result1); // negative number (Alice < Bob)\n\nint result2 = Objects.compare(name3, name3, String::compareTo);\nSystem.out.println(result2); // 0 (both null)\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"hash-code-methods",children:"Hash Code Methods"}),"\n",(0,t.jsx)(n.h3,{id:"hashcodeobject-o",children:(0,t.jsx)(n.code,{children:"hashCode(Object o)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature:"})," ",(0,t.jsx)(n.code,{children:"public static int hashCode(Object o)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Returns the hash code of a non-null argument, or 0 for ",(0,t.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'String str = "Hello";\nSystem.out.println(Objects.hashCode(str)); // 69609650 (hash code of "Hello")\n\nString nullStr = null;\nSystem.out.println(Objects.hashCode(nullStr)); // 0\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"hashobject-values",children:(0,t.jsx)(n.code,{children:"hash(Object... values)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature:"})," ",(0,t.jsx)(n.code,{children:"public static int hash(Object... values)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Generates a hash code for a sequence of input values. Useful for implementing ",(0,t.jsx)(n.code,{children:"hashCode()"})," methods."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'class Person {\n    String name;\n    int age;\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(name, age);\n    }\n}\n\nPerson p = new Person();\np.name = "John";\np.age = 30;\nSystem.out.println(p.hashCode()); // Combined hash code\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"string-methods",children:"String Methods"}),"\n",(0,t.jsx)(n.h3,{id:"tostringobject-o",children:(0,t.jsx)(n.code,{children:"toString(Object o)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature:"})," ",(0,t.jsx)(n.code,{children:"public static String toString(Object o)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Returns the result of calling ",(0,t.jsx)(n.code,{children:"toString()"})," on a non-null argument, or ",(0,t.jsx)(n.code,{children:'"null"'})," for ",(0,t.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'Integer num = 42;\nSystem.out.println(Objects.toString(num)); // "42"\n\nInteger nullNum = null;\nSystem.out.println(Objects.toString(nullNum)); // "null"\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"tostringobject-o-string-nulldefault",children:(0,t.jsx)(n.code,{children:"toString(Object o, String nullDefault)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature:"})," ",(0,t.jsx)(n.code,{children:"public static String toString(Object o, String nullDefault)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Returns the string representation of the object, or a default string if the object is ",(0,t.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'String name = null;\nSystem.out.println(Objects.toString(name, "Unknown")); // Unknown\n\nString actualName = "Alice";\nSystem.out.println(Objects.toString(actualName, "Unknown")); // Alice\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"validation-methods",children:"Validation Methods"}),"\n",(0,t.jsx)(n.h3,{id:"checkindexint-index-int-length",children:(0,t.jsx)(n.code,{children:"checkIndex(int index, int length)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature:"})," ",(0,t.jsx)(n.code,{children:"public static int checkIndex(int index, int length)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Checks if the index is within bounds ",(0,t.jsx)(n.code,{children:"[0, length)"}),". Throws ",(0,t.jsx)(n.code,{children:"IndexOutOfBoundsException"})," if not."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'int[] arr = {10, 20, 30, 40};\nint validIndex = Objects.checkIndex(2, arr.length);\nSystem.out.println(arr[validIndex]); // 30\n\ntry {\n    Objects.checkIndex(5, arr.length); // Throws IndexOutOfBoundsException\n} catch (IndexOutOfBoundsException e) {\n    System.out.println("Index out of bounds!");\n}\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"checkfromtoindexint-fromindex-int-toindex-int-length",children:(0,t.jsx)(n.code,{children:"checkFromToIndex(int fromIndex, int toIndex, int length)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature:"})," ",(0,t.jsx)(n.code,{children:"public static int checkFromToIndex(int fromIndex, int toIndex, int length)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Checks if the sub-range ",(0,t.jsx)(n.code,{children:"[fromIndex, toIndex)"})," is within bounds."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'int[] arr = {1, 2, 3, 4, 5};\nObjects.checkFromToIndex(1, 4, arr.length); // Valid: elements 1,2,3\n\ntry {\n    Objects.checkFromToIndex(2, 6, arr.length); // Invalid\n} catch (IndexOutOfBoundsException e) {\n    System.out.println("Range out of bounds!");\n}\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"checkfromindexsizeint-fromindex-int-size-int-length",children:(0,t.jsx)(n.code,{children:"checkFromIndexSize(int fromIndex, int size, int length)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature:"})," ",(0,t.jsx)(n.code,{children:"public static int checkFromIndexSize(int fromIndex, int size, int length)"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Checks if a sub-range starting at ",(0,t.jsx)(n.code,{children:"fromIndex"})," with the given ",(0,t.jsx)(n.code,{children:"size"})," is within bounds."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'int[] arr = {10, 20, 30, 40, 50};\nObjects.checkFromIndexSize(1, 3, arr.length); // Valid: elements at 1,2,3\n\ntry {\n    Objects.checkFromIndexSize(3, 4, arr.length); // Invalid: goes beyond array\n} catch (IndexOutOfBoundsException e) {\n    System.out.println("Invalid range!");\n}\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,t.jsx)(n.h3,{id:"1-null-safe-equals-in-entity-classes",children:"1. Null-Safe Equals in Entity Classes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"class User {\n    private String username;\n    private String email;\n\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj) return true;\n        if (!(obj instanceof User)) return false;\n        User other = (User) obj;\n        return Objects.equals(username, other.username) &&\n               Objects.equals(email, other.email);\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(username, email);\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-constructor-validation",children:"2. Constructor Validation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'class Product {\n    private String name;\n    private double price;\n\n    public Product(String name, double price) {\n        this.name = Objects.requireNonNull(name, "Product name cannot be null");\n        this.price = price;\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"3-default-values",children:"3. Default Values"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'public class Configuration {\n    public String getServerUrl(String configValue) {\n        return Objects.requireNonNullElse(configValue, "http://localhost:8080");\n    }\n}\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"java.util.Objects"})," class provides essential utilities for:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Null checking"})," and validation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Null-safe operations"})," (equals, hashCode, toString)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Index validation"})," for arrays and collections"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Default value handling"})," for null references"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["These methods promote cleaner, more robust code by eliminating repetitive null checks and reducing the risk of ",(0,t.jsx)(n.code,{children:"NullPointerException"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var t=s(96540);const l={},r=t.createContext(l);function i(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);