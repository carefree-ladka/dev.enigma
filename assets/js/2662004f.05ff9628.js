"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7501],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var r=t(96540);const c={},i=r.createContext(c);function o(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),r.createElement(i.Provider,{value:n},e.children)}},41010:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=t(74848),c=t(28453);const i={title:"Frequency Counter Technique"},o=void 0,s={id:"DSA/DSA with JavaScript/FrequencyCounter",title:"Frequency Counter Technique",description:"Frequency Counter Technique",source:"@site/docs/DSA/DSA with JavaScript/FrequencyCounter.mdx",sourceDirName:"DSA/DSA with JavaScript",slug:"/DSA/DSA with JavaScript/FrequencyCounter",permalink:"/dev.enigma/docs/DSA/DSA with JavaScript/FrequencyCounter",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/DSA/DSA with JavaScript/FrequencyCounter.mdx",tags:[],version:"current",frontMatter:{title:"Frequency Counter Technique"},sidebar:"tutorialSidebar",previous:{title:"Floyd's Cycle Detection Algorithm",permalink:"/dev.enigma/docs/DSA/DSA with JavaScript/FlyodsCycleDetection"},next:{title:"Gaussian Elimination",permalink:"/dev.enigma/docs/DSA/DSA with JavaScript/GaussianElimination"}},a={},u=[{value:"Frequency Counter Technique",id:"frequency-counter-technique",level:2},{value:"Overview",id:"overview",level:3},{value:"Implementation with Objects",id:"implementation-with-objects",level:3},{value:"Using ASCII numbers",id:"using-ascii-numbers",level:3}];function l(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"frequency-counter-technique",children:"Frequency Counter Technique"}),"\n",(0,r.jsx)(n.p,{children:"The Frequency Counter technique is a common approach for solving problems that involve counting occurrences of elements in an array or string. This technique can be implemented using objects or arrays to efficiently count and compare frequencies."}),"\n",(0,r.jsx)(n.h3,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The Frequency Counter technique helps in problems where you need to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Count the frequency of each element in a collection."}),"\n",(0,r.jsx)(n.li,{children:"Compare the frequencies of elements."}),"\n",(0,r.jsx)(n.li,{children:"Check for specific patterns or conditions based on element counts."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"implementation-with-objects",children:"Implementation with Objects"}),"\n",(0,r.jsx)(n.p,{children:"Using an object to count frequencies is straightforward and effective for problems involving non-ASCII characters or when element values are not limited to a specific range."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example: Counting Characters in a String"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"/**\n * Count the frequency of each character in a string.\n * @param {string} str - The input string.\n * @return {object} - An object with characters as keys and their frequencies as values.\n */\nconst countCharacterFrequency = (str) => {\n  const frequencyCounter = {};\n\n  for (const char of str) {\n    frequencyCounter[char] = (frequencyCounter[char] ?? 0) + 1;\n  }\n\n  return frequencyCounter;\n}\n\n// Example usage:\nconst str = \"hello world\";\nconsole.log(countCharacterFrequency(str)); \n// Output: { h: 1, e: 1, l: 3, o: 2, ' ': 1, w: 1, r: 1, d: 1 }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"using-ascii-numbers",children:"Using ASCII numbers"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-JavaScript",children:"/**\n * Count the frequency of each letter in a string (lowercase letters only).\n * @param {string} str - The input string.\n * @return {number[]} - An array where the index corresponds to the letter (0 = 'a', 1 = 'b', ..., 25 = 'z').\n */\nconst countLetterFrequency = (str) => {\n  const frequencyCounter = Array(26).fill(0); // Array for 26 letters\n\n  for (const char of str) {\n    if (char >= 'a' && char <= 'z') {\n      frequencyCounter[char.charCodeAt(0) - 97]++;  // 97 for lowercase, 65 for Uppercase\n    }\n  }\n\n  return frequencyCounter;\n}\n\n// Example usage:\nconst str = \"hello\";\nconsole.log(countLetterFrequency(str)); \n// Output: [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0]\n\n"})})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);