"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[22519],{28453:(n,s,e)=>{e.d(s,{R:()=>c,x:()=>t});var i=e(96540);const r={},l=i.createContext(r);function c(n){const s=i.useContext(l);return i.useMemo(function(){return"function"==typeof n?n(s):{...s,...n}},[s,n])}function t(n){let s;return s=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:c(n.components),i.createElement(l.Provider,{value:s},n.children)}},70521:(n,s,e)=>{e.r(s),e.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>l,metadata:()=>t,toc:()=>d});var i=e(74848),r=e(28453);const l={},c="System Design Trade-offs",t={id:"Backend System Design/System Design Trade-offs",title:"System Design Trade-offs",description:"Core Architectural Trade-offs",source:"@site/docs/Backend System Design/System Design Trade-offs.mdx",sourceDirName:"Backend System Design",slug:"/Backend System Design/System Design Trade-offs",permalink:"/docs/Backend System Design/System Design Trade-offs",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/Backend System Design/System Design Trade-offs.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"System Design Tools: Monitoring, Security & Testing",permalink:"/docs/Backend System Design/System Design Tools: Monitoring, Security & Testing"},next:{title:"URL Shortener System Design",permalink:"/docs/Backend System Design/URL Shortener System Design"}},o={},d=[{value:"Core Architectural Trade-offs",id:"core-architectural-trade-offs",level:2},{value:"1. <strong>Pull vs. Push</strong>",id:"1-pull-vs-push",level:3},{value:"2. <strong>Monolith vs. Microservices</strong>",id:"2-monolith-vs-microservices",level:3},{value:"3. <strong>Synchronous vs. Asynchronous Communication</strong>",id:"3-synchronous-vs-asynchronous-communication",level:3},{value:"4. <strong>SQL vs. NoSQL</strong>",id:"4-sql-vs-nosql",level:3},{value:"Performance Trade-offs",id:"performance-trade-offs",level:2},{value:"5. <strong>Memory vs. Latency</strong>",id:"5-memory-vs-latency",level:3},{value:"6. <strong>Throughput vs. Latency</strong>",id:"6-throughput-vs-latency",level:3},{value:"7. <strong>Latency vs. Accuracy</strong>",id:"7-latency-vs-accuracy",level:3},{value:"Consistency &amp; Availability Trade-offs",id:"consistency--availability-trade-offs",level:2},{value:"8. <strong>Consistency vs. Availability (CAP Theorem)</strong>",id:"8-consistency-vs-availability-cap-theorem",level:3},{value:"9. <strong>Strong Consistency vs. Eventual Consistency</strong>",id:"9-strong-consistency-vs-eventual-consistency",level:3},{value:"10. <strong>Cache vs. No Cache</strong>",id:"10-cache-vs-no-cache",level:3},{value:"Scaling Trade-offs",id:"scaling-trade-offs",level:2},{value:"11. <strong>Vertical vs. Horizontal Scaling</strong>",id:"11-vertical-vs-horizontal-scaling",level:3},{value:"12. <strong>Single Database vs. Sharded/Partitioned</strong>",id:"12-single-database-vs-shardedpartitioned",level:3},{value:"Processing Trade-offs",id:"processing-trade-offs",level:2},{value:"13. <strong>Batch vs. Real-Time Processing</strong>",id:"13-batch-vs-real-time-processing",level:3},{value:"14. <strong>Read vs. Write Optimization</strong>",id:"14-read-vs-write-optimization",level:3},{value:"Operational Trade-offs",id:"operational-trade-offs",level:2},{value:"15. <strong>Reliability vs. Speed</strong>",id:"15-reliability-vs-speed",level:3},{value:"16. <strong>Compression vs. CPU Usage</strong>",id:"16-compression-vs-cpu-usage",level:3},{value:"17. <strong>Security vs. Usability</strong>",id:"17-security-vs-usability",level:3},{value:"18. <strong>Latency vs. Cost</strong>",id:"18-latency-vs-cost",level:3},{value:"Quick Decision Matrix",id:"quick-decision-matrix",level:2},{value:"Key Principles for Interviews",id:"key-principles-for-interviews",level:2}];function h(n){const s={em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"system-design-trade-offs",children:"System Design Trade-offs"})}),"\n",(0,i.jsx)(s.h2,{id:"core-architectural-trade-offs",children:"Core Architectural Trade-offs"}),"\n",(0,i.jsxs)(s.h3,{id:"1-pull-vs-push",children:["1. ",(0,i.jsx)(s.strong,{children:"Pull vs. Push"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Pull (Client-Initiated)"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"How it works"}),": Client requests data when needed (polling, lazy loading)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Efficient bandwidth usage"}),"\n",(0,i.jsx)(s.li,{children:"Clients get exactly what they need"}),"\n",(0,i.jsx)(s.li,{children:"Simpler server implementation"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Higher latency (data not immediately available)"}),"\n",(0,i.jsx)(s.li,{children:"More server requests"}),"\n",(0,i.jsx)(s.li,{children:"Potential for stale data"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Push (Server-Initiated)"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"How it works"}),": Server proactively sends data (WebSockets, SSE, push notifications)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Real-time updates"}),"\n",(0,i.jsx)(s.li,{children:"Lower latency for fresh data"}),"\n",(0,i.jsx)(s.li,{children:"Better user experience for live data"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Higher bandwidth usage"}),"\n",(0,i.jsx)(s.li,{children:"Clients may receive unnecessary data"}),"\n",(0,i.jsx)(s.li,{children:"More complex server architecture"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pull"}),": News feeds, product catalogs, dashboards with refresh buttons, search results"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Push"}),": Chat applications, live sports scores, stock tickers, collaborative editing tools, gaming"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.h3,{id:"2-monolith-vs-microservices",children:["2. ",(0,i.jsx)(s.strong,{children:"Monolith vs. Microservices"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Monolith"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Structure"}),": Single codebase, one deployment unit"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Simpler development and testing"}),"\n",(0,i.jsx)(s.li,{children:"Easier debugging"}),"\n",(0,i.jsx)(s.li,{children:"No network latency between components"}),"\n",(0,i.jsx)(s.li,{children:"Simpler deployment"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Hard to scale specific components"}),"\n",(0,i.jsx)(s.li,{children:"Entire app must be deployed for any change"}),"\n",(0,i.jsx)(s.li,{children:"Technology stack locked in"}),"\n",(0,i.jsx)(s.li,{children:"Team coordination challenges at scale"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Microservices"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Structure"}),": Independent services per feature/domain"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Independent scaling"}),"\n",(0,i.jsx)(s.li,{children:"Faster deployment cycles"}),"\n",(0,i.jsx)(s.li,{children:"Technology flexibility"}),"\n",(0,i.jsx)(s.li,{children:"Team autonomy"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Distributed system complexity"}),"\n",(0,i.jsx)(s.li,{children:"Network latency"}),"\n",(0,i.jsx)(s.li,{children:"Data consistency challenges"}),"\n",(0,i.jsx)(s.li,{children:"Operational overhead"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Monolith"}),": Startups, MVPs, small teams, simple domains, low traffic applications"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Microservices"}),": Large organizations, complex domains, different scaling needs, independent team workflows (Netflix, Amazon, Uber)"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.h3,{id:"3-synchronous-vs-asynchronous-communication",children:["3. ",(0,i.jsx)(s.strong,{children:"Synchronous vs. Asynchronous Communication"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Synchronous (e.g., HTTP REST, gRPC)"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"How it works"}),": Caller waits for response"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Simpler flow and reasoning"}),"\n",(0,i.jsx)(s.li,{children:"Immediate error handling"}),"\n",(0,i.jsx)(s.li,{children:"Easier debugging"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Blocking operations"}),"\n",(0,i.jsx)(s.li,{children:"Cascading failures"}),"\n",(0,i.jsx)(s.li,{children:"Lower throughput"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Asynchronous (e.g., Message Queues, Kafka, Pub/Sub)"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"How it works"}),": Fire and forget, event-driven"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Decoupled services"}),"\n",(0,i.jsx)(s.li,{children:"Higher throughput"}),"\n",(0,i.jsx)(s.li,{children:"Better fault tolerance"}),"\n",(0,i.jsx)(s.li,{children:"Load leveling"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Complex error handling"}),"\n",(0,i.jsx)(s.li,{children:"Eventual consistency"}),"\n",(0,i.jsx)(s.li,{children:"Harder debugging"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Synchronous"}),": Payment processing, user authentication, booking confirmations, critical path operations"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Asynchronous"}),": Email notifications, video processing, log aggregation, analytics events, order processing pipelines"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.h3,{id:"4-sql-vs-nosql",children:["4. ",(0,i.jsx)(s.strong,{children:"SQL vs. NoSQL"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"SQL (Relational Databases)"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Examples"}),": PostgreSQL, MySQL, Oracle"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Strong consistency (ACID)"}),"\n",(0,i.jsx)(s.li,{children:"Complex queries and joins"}),"\n",(0,i.jsx)(s.li,{children:"Data integrity guarantees"}),"\n",(0,i.jsx)(s.li,{children:"Mature tooling"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Harder to scale horizontally"}),"\n",(0,i.jsx)(s.li,{children:"Schema changes can be difficult"}),"\n",(0,i.jsx)(s.li,{children:"Less flexible for unstructured data"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"NoSQL"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Examples"}),": MongoDB (document), Redis (key-value), Cassandra (column), Neo4j (graph)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Horizontal scaling"}),"\n",(0,i.jsx)(s.li,{children:"Flexible schema"}),"\n",(0,i.jsx)(s.li,{children:"High throughput"}),"\n",(0,i.jsx)(s.li,{children:"Better for specific use cases"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Eventual consistency (usually)"}),"\n",(0,i.jsx)(s.li,{children:"Limited complex querying"}),"\n",(0,i.jsx)(s.li,{children:"May lack transactions"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"SQL"}),": Banking systems, e-commerce orders, inventory management, HR systems, financial transactions"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"NoSQL"}),": Social media feeds, real-time analytics, caching layers, IoT data, user sessions, product catalogs"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"performance-trade-offs",children:"Performance Trade-offs"}),"\n",(0,i.jsxs)(s.h3,{id:"5-memory-vs-latency",children:["5. ",(0,i.jsx)(s.strong,{children:"Memory vs. Latency"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Memory-Heavy (In-Memory)"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Approach"}),": Store more data in RAM"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Extremely low latency (microseconds)"}),"\n",(0,i.jsx)(s.li,{children:"Fast data access"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Expensive"}),"\n",(0,i.jsx)(s.li,{children:"Limited by RAM size"}),"\n",(0,i.jsx)(s.li,{children:"Data loss risk without persistence"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Memory-Light (Disk/DB)"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Approach"}),": Minimal in-memory, fetch on demand"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Cost-effective"}),"\n",(0,i.jsx)(s.li,{children:"Can store massive datasets"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Higher latency (milliseconds to seconds)"}),"\n",(0,i.jsx)(s.li,{children:"I/O bottlenecks"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Memory-Heavy"}),": Session stores, leaderboards, real-time bidding, autocomplete suggestions, hot data caching (Redis, Memcached)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Memory-Light"}),": Archival systems, data warehouses, cold storage, audit logs"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.h3,{id:"6-throughput-vs-latency",children:["6. ",(0,i.jsx)(s.strong,{children:"Throughput vs. Latency"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"High Throughput"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Approach"}),": Batch processing, optimize for volume"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Characteristics"}),": Process many requests, but each may take longer"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Techniques"}),": Batching, pipelining, connection pooling"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Low Latency"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Approach"}),": Optimize individual request time"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Characteristics"}),": Fast response, but may limit concurrent processing"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Techniques"}),": Caching, pre-computation, edge computing"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"High Throughput"}),": Video streaming platforms, batch ETL jobs, log processing, analytics pipelines"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Low Latency"}),": Real-time trading systems, gaming servers, voice/video calls, search autocomplete"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.h3,{id:"7-latency-vs-accuracy",children:["7. ",(0,i.jsx)(s.strong,{children:"Latency vs. Accuracy"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Low Latency (Approximate Results)"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Approach"}),": Use approximations, sampling, or probabilistic data structures"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),": Fast responses"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),": Potentially inaccurate"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"High Accuracy (Exact Results)"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Approach"}),": Compute precise results"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),": Correct data"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),": Slower response"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Low Latency"}),": Real-time analytics dashboards, recommendation engines, ad targeting, trending topics"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"High Accuracy"}),": Financial calculations, billing systems, inventory counts, audit reports"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"consistency--availability-trade-offs",children:"Consistency & Availability Trade-offs"}),"\n",(0,i.jsxs)(s.h3,{id:"8-consistency-vs-availability-cap-theorem",children:["8. ",(0,i.jsx)(s.strong,{children:"Consistency vs. Availability (CAP Theorem)"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"CP (Consistency + Partition Tolerance)"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Behavior"}),": Reject requests when consistency cannot be guaranteed"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),": All nodes always have same data"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),": Lower availability during partitions"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"AP (Availability + Partition Tolerance)"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Behavior"}),": Always respond, even with stale data"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),": High availability"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),": Temporary inconsistencies"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"CP Systems"}),": Banking transactions, inventory management, seat booking, financial records"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"AP Systems"}),": Social media feeds, comments, likes, DNS, shopping carts, user profiles"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.h3,{id:"9-strong-consistency-vs-eventual-consistency",children:["9. ",(0,i.jsx)(s.strong,{children:"Strong Consistency vs. Eventual Consistency"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Strong Consistency"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Guarantee"}),": Read always returns most recent write"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),": Predictable behavior, simpler reasoning"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),": Higher latency, lower availability"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Eventual Consistency"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Guarantee"}),": All replicas converge eventually"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),": Better performance, higher availability"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),": Stale reads possible"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Strong Consistency"}),": Bank account balances, stock trading, booking systems, inventory management"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Eventual Consistency"}),": View counts, likes, follower counts, shopping recommendations, news feeds"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.h3,{id:"10-cache-vs-no-cache",children:["10. ",(0,i.jsx)(s.strong,{children:"Cache vs. No Cache"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"With Cache"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Dramatic latency reduction"}),"\n",(0,i.jsx)(s.li,{children:"Reduced database load"}),"\n",(0,i.jsx)(s.li,{children:"Cost savings"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Cache invalidation complexity"}),"\n",(0,i.jsx)(s.li,{children:"Stale data risk"}),"\n",(0,i.jsx)(s.li,{children:"Additional infrastructure"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Without Cache"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Always fresh data"}),"\n",(0,i.jsx)(s.li,{children:"Simpler architecture"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Higher latency"}),"\n",(0,i.jsx)(s.li,{children:"Database bottleneck"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"With Cache"}),": Product catalogs, user profiles, API responses, static content, session data"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Without Cache"}),": Real-time stock prices, medical records, legal documents (unless specific caching strategy)"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"scaling-trade-offs",children:"Scaling Trade-offs"}),"\n",(0,i.jsxs)(s.h3,{id:"11-vertical-vs-horizontal-scaling",children:["11. ",(0,i.jsx)(s.strong,{children:"Vertical vs. Horizontal Scaling"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Vertical Scaling (Scale Up)"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Approach"}),": Bigger, more powerful machine"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Simpler architecture"}),"\n",(0,i.jsx)(s.li,{children:"No distributed system complexity"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Hardware limits"}),"\n",(0,i.jsx)(s.li,{children:"Expensive"}),"\n",(0,i.jsx)(s.li,{children:"Single point of failure"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Horizontal Scaling (Scale Out)"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Approach"}),": Add more machines"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Nearly unlimited scaling"}),"\n",(0,i.jsx)(s.li,{children:"Better fault tolerance"}),"\n",(0,i.jsx)(s.li,{children:"Cost-effective"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Distributed system complexity"}),"\n",(0,i.jsx)(s.li,{children:"Data consistency challenges"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Vertical"}),": Databases (initially), legacy applications, tight-coupling requirements"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Horizontal"}),": Web servers, stateless services, microservices, big data processing"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.h3,{id:"12-single-database-vs-shardedpartitioned",children:["12. ",(0,i.jsx)(s.strong,{children:"Single Database vs. Sharded/Partitioned"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Single Database"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Simple queries and joins"}),"\n",(0,i.jsx)(s.li,{children:"ACID transactions"}),"\n",(0,i.jsx)(s.li,{children:"Easier maintenance"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Scalability limits"}),"\n",(0,i.jsx)(s.li,{children:"Single point of failure"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Sharded/Partitioned"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Horizontal scaling"}),"\n",(0,i.jsx)(s.li,{children:"Handle massive datasets"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Complex queries across shards"}),"\n",(0,i.jsx)(s.li,{children:"No cross-shard transactions (usually)"}),"\n",(0,i.jsx)(s.li,{children:"Rebalancing complexity"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Single Database"}),": Small to medium apps, strong consistency needs, complex relational queries"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Sharded Database"}),": Social networks, multi-tenant SaaS, global applications, massive user bases (Facebook, Twitter)"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"processing-trade-offs",children:"Processing Trade-offs"}),"\n",(0,i.jsxs)(s.h3,{id:"13-batch-vs-real-time-processing",children:["13. ",(0,i.jsx)(s.strong,{children:"Batch vs. Real-Time Processing"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Batch Processing"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Approach"}),": Process data in chunks at intervals"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Cost-efficient"}),"\n",(0,i.jsx)(s.li,{children:"Simpler error handling"}),"\n",(0,i.jsx)(s.li,{children:"Optimized throughput"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Delayed insights"}),"\n",(0,i.jsx)(s.li,{children:"Not suitable for time-sensitive data"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Real-Time Processing (Stream)"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Approach"}),": Process data immediately as it arrives"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Instant insights and actions"}),"\n",(0,i.jsx)(s.li,{children:"Better user experience"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Complex infrastructure"}),"\n",(0,i.jsx)(s.li,{children:"Higher cost"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Batch"}),": Nightly reports, ETL jobs, monthly billing, data warehouse updates, email campaigns"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Real-Time"}),": Fraud detection, live dashboards, recommendation engines, anomaly detection, traffic monitoring"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.h3,{id:"14-read-vs-write-optimization",children:["14. ",(0,i.jsx)(s.strong,{children:"Read vs. Write Optimization"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Read-Optimized"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Techniques"}),": Indexes, read replicas, caching, denormalization"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Trade-off"}),": Slower writes, more storage"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Write-Optimized"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Techniques"}),": Batch writes, async writes, fewer indexes"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Trade-off"}),": Slower reads, eventual consistency"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Read-Optimized"}),": News sites, e-commerce product pages, blogs, analytics dashboards"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Write-Optimized"}),": Logging systems, time-series data, IoT sensors, click tracking, metrics collection"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"operational-trade-offs",children:"Operational Trade-offs"}),"\n",(0,i.jsxs)(s.h3,{id:"15-reliability-vs-speed",children:["15. ",(0,i.jsx)(s.strong,{children:"Reliability vs. Speed"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"High Reliability"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Techniques"}),": Replication, retries, circuit breakers, failover"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),": Better uptime"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),": Slower responses, more complex"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"High Speed"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Techniques"}),": Minimal checks, optimistic locking"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),": Fast responses"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),": Risk of failures"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"High Reliability"}),": Payment processing, healthcare systems, aviation systems, critical infrastructure"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"High Speed"}),": Social media interactions, analytics events, view counters"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.h3,{id:"16-compression-vs-cpu-usage",children:["16. ",(0,i.jsx)(s.strong,{children:"Compression vs. CPU Usage"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"With Compression"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Reduced bandwidth"}),"\n",(0,i.jsx)(s.li,{children:"Lower storage costs"}),"\n",(0,i.jsx)(s.li,{children:"Faster transmission"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"CPU overhead"}),"\n",(0,i.jsx)(s.li,{children:"Increased latency"}),"\n",(0,i.jsx)(s.li,{children:"Memory usage"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Without Compression"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Lower CPU usage"}),"\n",(0,i.jsx)(s.li,{children:"Faster processing"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Higher bandwidth costs"}),"\n",(0,i.jsx)(s.li,{children:"Slower over slow networks"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"With Compression"}),": Mobile apps, slow networks, large data transfers, video streaming, API responses"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Without Compression"}),": Internal datacenter communication, high-speed local networks, small payloads"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.h3,{id:"17-security-vs-usability",children:["17. ",(0,i.jsx)(s.strong,{children:"Security vs. Usability"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"High Security"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Measures"}),": Strong encryption, 2FA, strict access control, rate limiting"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),": Protected data"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),": Slower operations, friction in UX"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"High Usability"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Measures"}),": Minimal auth steps, looser controls"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),": Better user experience"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),": Security vulnerabilities"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"High Security"}),": Banking apps, healthcare portals, admin panels, government systems"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Balanced"}),": Social media (optional 2FA), e-commerce, productivity tools"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.h3,{id:"18-latency-vs-cost",children:["18. ",(0,i.jsx)(s.strong,{children:"Latency vs. Cost"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Low Latency (Higher Cost)"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Techniques"}),": CDNs, edge computing, premium infrastructure, more caching layers"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),": Better user experience"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),": Expensive"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Higher Latency (Lower Cost)"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Techniques"}),": Single region, fewer caches, shared infrastructure"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pros"}),": Cost-effective"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cons"}),": Slower for global users"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"When to use:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Low Latency"}),": Gaming, video streaming, financial trading, real-time collaboration"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cost-Optimized"}),": Internal tools, batch jobs, archival systems, low-traffic apps"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"quick-decision-matrix",children:"Quick Decision Matrix"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"System Type"}),(0,i.jsx)(s.th,{children:"Key Trade-offs"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Social Media Platform"})}),(0,i.jsx)(s.td,{children:"AP over CP, Eventual consistency, NoSQL, Push notifications, Horizontal scaling"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Banking System"})}),(0,i.jsx)(s.td,{children:"CP over AP, Strong consistency, SQL, High reliability, ACID transactions"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"E-commerce"})}),(0,i.jsx)(s.td,{children:"Read-optimized, Caching, SQL for orders + NoSQL for catalog, Availability"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Chat Application"})}),(0,i.jsx)(s.td,{children:"Push over Pull, Low latency, WebSockets, Eventually consistent, Microservices"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Analytics Platform"})}),(0,i.jsx)(s.td,{children:"Throughput over latency, Batch + Real-time, NoSQL, Horizontal scaling, Compression"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Video Streaming"})}),(0,i.jsx)(s.td,{children:"High throughput, CDN, Compression, AP, Read-optimized"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Real-time Trading"})}),(0,i.jsx)(s.td,{children:"Low latency over throughput, Strong consistency, CP, In-memory caching"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"IoT Platform"})}),(0,i.jsx)(s.td,{children:"Write-optimized, Time-series DB, Eventual consistency, Stream processing"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Search Engine"})}),(0,i.jsx)(s.td,{children:"Read-optimized, Heavy caching, Eventual consistency, Horizontal scaling"})]})]})]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"key-principles-for-interviews",children:"Key Principles for Interviews"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"There's no perfect solution"})," \u2013 Every choice has trade-offs"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Clarify requirements first"})," \u2013 Ask about scale, consistency needs, budget"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Start simple"})," \u2013 Begin with monolith/single DB, explain when to evolve"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Justify your choices"})," \u2013 Explain ",(0,i.jsx)(s.em,{children:"why"})," you chose one approach over another"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Consider evolution"})," \u2013 How does the system scale as requirements change?"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Think about real examples"})," \u2013 Reference systems like Netflix, Amazon, Twitter"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Remember: The goal isn't to memorize solutions, but to understand the trade-offs and make informed decisions based on specific requirements."})]})}function a(n={}){const{wrapper:s}={...(0,r.R)(),...n.components};return s?(0,i.jsx)(s,{...n,children:(0,i.jsx)(h,{...n})}):h(n)}}}]);