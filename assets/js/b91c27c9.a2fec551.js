"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7397],{6407:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var r=t(4848),l=t(8453);const o={},s="Web Components",a={id:"WebDev/HTMLDOM/WebComponents",title:"Web Components",description:"Introduction",source:"@site/docs/WebDev/HTMLDOM/WebComponents.mdx",sourceDirName:"WebDev/HTMLDOM",slug:"/WebDev/HTMLDOM/WebComponents",permalink:"/js.enigma/docs/WebDev/HTMLDOM/WebComponents",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/WebDev/HTMLDOM/WebComponents.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DOM Methods & Selectors Cheatsheet",permalink:"/js.enigma/docs/WebDev/HTMLDOM/DOMCheatSheet"},next:{title:"Async Await",permalink:"/js.enigma/docs/WebDev/JavaScript/AsyncAwait"}},i={},d=[{value:"Introduction",id:"introduction",level:2},{value:"1. Custom Elements",id:"1-custom-elements",level:2},{value:"Theory",id:"theory",level:3},{value:"Example",id:"example",level:3},{value:"2. Shadow DOM",id:"2-shadow-dom",level:2},{value:"Theory",id:"theory-1",level:3},{value:"Example",id:"example-1",level:3},{value:"3. HTML Templates",id:"3-html-templates",level:2},{value:"Theory",id:"theory-2",level:3},{value:"Example",id:"example-2",level:3},{value:"Putting It All Together",id:"putting-it-all-together",level:2},{value:"Complete Example",id:"complete-example",level:3},{value:"Best Practices",id:"best-practices",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"web-components",children:"Web Components"})}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(n.p,{children:"Web Components are a set of web platform APIs that allow you to create reusable custom elements. They're built on three main technologies: Custom Elements, Shadow DOM, and HTML Templates."}),"\n",(0,r.jsx)(n.h2,{id:"1-custom-elements",children:"1. Custom Elements"}),"\n",(0,r.jsx)(n.h3,{id:"theory",children:"Theory"}),"\n",(0,r.jsx)(n.p,{children:"Custom Elements allow you to define your own HTML tags with custom functionality. They must have a hyphen in their name (e.g., 'my-element') to avoid conflicts with standard HTML elements."}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"class MyElement extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.innerHTML = 'Hello from MyElement!';\r\n  }\r\n  \r\n  // Lifecycle Methods\r\n  connectedCallback() {\r\n    // Called when element is added to document\r\n    console.log('Element added to page');\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    // Called when element is removed from document\r\n    console.log('Element removed from page');\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    // Called when an attribute is changed/added/removed\r\n    console.log(`Attribute ${name} changed from ${oldValue} to ${newValue}`);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    // Specify which attributes to watch for changes\r\n    return ['title', 'content'];\r\n  }\r\n}\r\n\r\n// Register the custom element\r\ncustomElements.define('my-element', MyElement);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"2-shadow-dom",children:"2. Shadow DOM"}),"\n",(0,r.jsx)(n.h3,{id:"theory-1",children:"Theory"}),"\n",(0,r.jsx)(n.p,{children:"Shadow DOM provides encapsulation for DOM and CSS, creating a separate DOM tree that's isolated from the main document's DOM. This prevents style leakage and naming conflicts."}),"\n",(0,r.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"class ShadowElement extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    \r\n    // Create shadow root\r\n    const shadow = this.attachShadow({ mode: 'open' });\r\n    \r\n    // Create element\r\n    const wrapper = document.createElement('div');\r\n    wrapper.textContent = 'This is in Shadow DOM';\r\n    \r\n    // Add styles\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      div {\r\n        padding: 10px;\r\n        background: #f0f0f0;\r\n        border-radius: 5px;\r\n      }\r\n    `;\r\n    \r\n    // Attach to shadow DOM\r\n    shadow.appendChild(style);\r\n    shadow.appendChild(wrapper);\r\n  }\r\n}\r\n\r\ncustomElements.define('shadow-element', ShadowElement);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"3-html-templates",children:"3. HTML Templates"}),"\n",(0,r.jsx)(n.h3,{id:"theory-2",children:"Theory"}),"\n",(0,r.jsxs)(n.p,{children:["HTML Templates (",(0,r.jsx)(n.code,{children:"<template>"})," tag) allow you to define reusable HTML that can be instantiated later. Content inside a template is not rendered until it's cloned and added to the document."]}),"\n",(0,r.jsx)(n.h3,{id:"example-2",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Define template in HTML\r\n/*\r\n<template id=\"my-template\">\r\n  <style>\r\n    .container {\r\n      border: 1px solid #ccc;\r\n      padding: 15px;\r\n    }\r\n  </style>\r\n  <div class=\"container\">\r\n    <h2><slot name=\"title\">Default Title</slot></h2>\r\n    <div><slot>Default content</slot></div>\r\n  </div>\r\n</template>\r\n*/\r\n\r\nclass TemplateElement extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    \r\n    // Get template content\r\n    const template = document.getElementById('my-template');\r\n    const templateContent = template.content;\r\n    \r\n    // Create shadow root and clone template\r\n    const shadow = this.attachShadow({ mode: 'open' });\r\n    shadow.appendChild(templateContent.cloneNode(true));\r\n  }\r\n}\r\n\r\ncustomElements.define('template-element', TemplateElement);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"putting-it-all-together",children:"Putting It All Together"}),"\n",(0,r.jsx)(n.h3,{id:"complete-example",children:"Complete Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"class CompleteComponent extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    \r\n    // Create shadow root\r\n    const shadow = this.attachShadow({ mode: 'open' });\r\n    \r\n    // Create template\r\n    const template = document.createElement('template');\r\n    template.innerHTML = `\r\n      <style>\r\n        :host {\r\n          display: block;\r\n          padding: 20px;\r\n        }\r\n        .card {\r\n          background: white;\r\n          border-radius: 8px;\r\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n          padding: 15px;\r\n        }\r\n        h2 {\r\n          margin-top: 0;\r\n          color: #333;\r\n        }\r\n      </style>\r\n      <div class=\"card\">\r\n        <h2><slot name=\"title\">Default Title</slot></h2>\r\n        <div><slot>Default content</slot></div>\r\n      </div>\r\n    `;\r\n    \r\n    // Clone and attach template\r\n    shadow.appendChild(template.content.cloneNode(true));\r\n  }\r\n  \r\n  // Lifecycle and attribute handling\r\n  static get observedAttributes() {\r\n    return ['title'];\r\n  }\r\n  \r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    if (name === 'title') {\r\n      const title = this.shadowRoot.querySelector('h2');\r\n      if (title) title.textContent = newValue;\r\n    }\r\n  }\r\n}\r\n\r\ncustomElements.define('complete-component', CompleteComponent);\r\n\r\n// Usage:\r\n/*\r\n<complete-component>\r\n  <span slot=\"title\">My Custom Component</span>\r\n  <p>This is the content of my component</p>\r\n</complete-component>\r\n*/\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Naming Conventions"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Always use a hyphen in custom element names"}),"\n",(0,r.jsx)(n.li,{children:"Use descriptive, semantic names"}),"\n",(0,r.jsx)(n.li,{children:"Prefix components with project/organization name"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Performance"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use template elements for repeated structures"}),"\n",(0,r.jsx)(n.li,{children:"Minimize shadow DOM operations"}),"\n",(0,r.jsx)(n.li,{children:"Lazy load components when possible"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Accessibility"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Maintain ARIA attributes"}),"\n",(0,r.jsx)(n.li,{children:"Ensure keyboard navigation works"}),"\n",(0,r.jsx)(n.li,{children:"Preserve semantic meaning"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Maintenance"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Document public API and attributes"}),"\n",(0,r.jsx)(n.li,{children:"Keep components focused and single-purpose"}),"\n",(0,r.jsx)(n.li,{children:"Follow the Single Responsibility Principle"}),"\n"]}),"\n"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(6540);const l={},o=r.createContext(l);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);