"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8546],{8332:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var s=i(74848),r=i(28453);const t={title:"Netflix System Design",description:"Complete system design for Netflix video streaming platform",author:"System Design Template",date:"2025-10-05",tags:["system-design","streaming","netflix","video","cdn"]},l="Netflix System Design",a={id:"System Design Problems/Netflix System Design",title:"Netflix System Design",description:"Complete system design for Netflix video streaming platform",source:"@site/docs/System Design Problems/Netflix System Design.mdx",sourceDirName:"System Design Problems",slug:"/System Design Problems/Netflix System Design",permalink:"/js.enigma/docs/System Design Problems/Netflix System Design",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/System Design Problems/Netflix System Design.mdx",tags:[{inline:!0,label:"system-design",permalink:"/js.enigma/docs/tags/system-design"},{inline:!0,label:"streaming",permalink:"/js.enigma/docs/tags/streaming"},{inline:!0,label:"netflix",permalink:"/js.enigma/docs/tags/netflix"},{inline:!0,label:"video",permalink:"/js.enigma/docs/tags/video"},{inline:!0,label:"cdn",permalink:"/js.enigma/docs/tags/cdn"}],version:"current",frontMatter:{title:"Netflix System Design",description:"Complete system design for Netflix video streaming platform",author:"System Design Template",date:"2025-10-05",tags:["system-design","streaming","netflix","video","cdn"]},sidebar:"tutorialSidebar",previous:{title:"LeetCode-like Online Judge Platform",permalink:"/js.enigma/docs/System Design Problems/LeetCode-like Online Judge Platform"},next:{title:"Rate Limiter System Design",permalink:"/js.enigma/docs/System Design Problems/Rate Limiter System Design"}},d={},c=[{value:"1. Requirements (~5 minutes)",id:"1-requirements-5-minutes",level:2},{value:"Functional Requirements",id:"functional-requirements",level:3},{value:"Non-functional Requirements",id:"non-functional-requirements",level:3},{value:"Capacity Estimation",id:"capacity-estimation",level:3},{value:"2. Core Entities (~2 minutes)",id:"2-core-entities-2-minutes",level:2},{value:"User",id:"user",level:3},{value:"Video",id:"video",level:3},{value:"VideoMetadata",id:"videometadata",level:3},{value:"WatchHistory",id:"watchhistory",level:3},{value:"Rating",id:"rating",level:3},{value:"Recommendation",id:"recommendation",level:3},{value:"3. API Interface (~5 minutes)",id:"3-api-interface-5-minutes",level:2},{value:"Protocol Choice",id:"protocol-choice",level:3},{value:"API Endpoints",id:"api-endpoints",level:3},{value:"Authentication",id:"authentication",level:4},{value:"Browse &amp; Search",id:"browse--search",level:4},{value:"Streaming",id:"streaming",level:4},{value:"Watch History",id:"watch-history",level:4},{value:"Ratings &amp; Recommendations",id:"ratings--recommendations",level:4},{value:"4. Data Flow (~5 minutes)",id:"4-data-flow-5-minutes",level:2},{value:"Video Streaming Flow",id:"video-streaming-flow",level:3},{value:"5. High Level Design (~10-15 minutes)",id:"5-high-level-design-10-15-minutes",level:2},{value:"Architecture Components",id:"architecture-components",level:3},{value:"Data Models",id:"data-models",level:3},{value:"PostgreSQL - Video Metadata",id:"postgresql---video-metadata",level:4},{value:"Cassandra - Watch History",id:"cassandra---watch-history",level:4},{value:"Redis Cache",id:"redis-cache",level:4},{value:"6. Architecture Diagram",id:"6-architecture-diagram",level:2},{value:"7. Deep Dives (~10 minutes)",id:"7-deep-dives-10-minutes",level:2},{value:"7.1 Video Streaming Architecture (Adaptive Bitrate)",id:"71-video-streaming-architecture-adaptive-bitrate",level:3},{value:"Video Encoding Process",id:"video-encoding-process",level:4},{value:"Manifest Example (HLS)",id:"manifest-example-hls",level:4},{value:"Client-Side Logic",id:"client-side-logic",level:4},{value:"7.2 CDN Strategy &amp; Content Distribution",id:"72-cdn-strategy--content-distribution",level:3},{value:"Push vs Pull CDN",id:"push-vs-pull-cdn",level:4},{value:"Strategy",id:"strategy",level:4},{value:"7.3 Caching Strategy (Multi-Layer)",id:"73-caching-strategy-multi-layer",level:3},{value:"Layer 1 - CDN Cache",id:"layer-1---cdn-cache",level:4},{value:"Layer 2 - Redis Cache",id:"layer-2---redis-cache",level:4},{value:"Cache Invalidation",id:"cache-invalidation",level:4},{value:"Layer 3 - Database Query Cache",id:"layer-3---database-query-cache",level:4},{value:"7.4 Database Scaling Strategy",id:"74-database-scaling-strategy",level:3},{value:"PostgreSQL (Metadata) - Read-Heavy",id:"postgresql-metadata---read-heavy",level:4},{value:"Cassandra (Watch History) - Write-Heavy",id:"cassandra-watch-history---write-heavy",level:4},{value:"7.5 Search Functionality (Elasticsearch)",id:"75-search-functionality-elasticsearch",level:3},{value:"Index Structure",id:"index-structure",level:4},{value:"Search Query",id:"search-query",level:4},{value:"7.6 Watch History Tracking (Async)",id:"76-watch-history-tracking-async",level:3},{value:"Kafka Consumer (Batch Processing)",id:"kafka-consumer-batch-processing",level:4},{value:"7.7 Recommendation Engine",id:"77-recommendation-engine",level:3},{value:"Data Pipeline",id:"data-pipeline",level:4},{value:"Features",id:"features",level:4},{value:"Serving",id:"serving",level:4},{value:"Background Job (Every 6 hours)",id:"background-job-every-6-hours",level:4},{value:"7.8 Handling Peak Traffic",id:"78-handling-peak-traffic",level:3},{value:"Solutions",id:"solutions",level:4},{value:"7.9 Fault Tolerance &amp; Reliability",id:"79-fault-tolerance--reliability",level:3},{value:"Circuit Breaker Pattern",id:"circuit-breaker-pattern",level:4},{value:"Database Replication",id:"database-replication",level:4},{value:"CDN Redundancy",id:"cdn-redundancy",level:4},{value:"7.10 Security Considerations",id:"710-security-considerations",level:3},{value:"1. Authentication &amp; Authorization",id:"1-authentication--authorization",level:4},{value:"2. DRM (Digital Rights Management)",id:"2-drm-digital-rights-management",level:4},{value:"3. API Security",id:"3-api-security",level:4},{value:"4. Content Protection",id:"4-content-protection",level:4},{value:"7.11 Monitoring &amp; Observability",id:"711-monitoring--observability",level:3},{value:"Key Metrics",id:"key-metrics",level:4},{value:"Tools",id:"tools",level:4},{value:"Example Alert",id:"example-alert",level:4},{value:"Summary",id:"summary",level:2},{value:"Key Design Decisions",id:"key-design-decisions",level:3},{value:"Scalability Achieved",id:"scalability-achieved",level:3},{value:"Trade-offs &amp; Considerations",id:"trade-offs--considerations",level:2},{value:"Future Enhancements",id:"future-enhancements",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"netflix-system-design",children:"Netflix System Design"})}),"\n",(0,s.jsx)(n.h2,{id:"1-requirements-5-minutes",children:"1. Requirements (~5 minutes)"}),"\n",(0,s.jsx)(n.h3,{id:"functional-requirements",children:"Functional Requirements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 Users should be able to ",(0,s.jsx)(n.strong,{children:"browse and search"})," for movies/TV shows"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 Users should be able to ",(0,s.jsx)(n.strong,{children:"stream videos"})," with adaptive quality (240p to 4K)"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 Users should be able to ",(0,s.jsx)(n.strong,{children:"resume playback"})," from where they left off"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 Users should be able to ",(0,s.jsx)(n.strong,{children:"rate content"})," and get personalized recommendations"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"non-functional-requirements",children:"Non-functional Requirements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 The system should prioritize ",(0,s.jsx)(n.strong,{children:"availability"})," over consistency (CAP - users should always stream)"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 The system should scale to support ",(0,s.jsx)(n.strong,{children:"200M+ concurrent users"})]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 Video streaming should have ",(0,s.jsx)(n.strong,{children:"initial buffering < 2 seconds"}),", smooth playback"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 The system should be ",(0,s.jsx)(n.strong,{children:"highly available"})," (99.99% uptime)"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 The system should handle ",(0,s.jsx)(n.strong,{children:"bursty traffic patterns"})," (peak: 6 PM - 11 PM)"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 The system should have ",(0,s.jsx)(n.strong,{children:"geo-distributed content delivery"})," for low latency"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 Video content should be ",(0,s.jsx)(n.strong,{children:"durable and replicated"})," across regions"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"capacity-estimation",children:"Capacity Estimation"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Assumptions:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Total Users: 500M"}),"\n",(0,s.jsx)(n.li,{children:"Daily Active Users (DAU): 200M"}),"\n",(0,s.jsx)(n.li,{children:"Concurrent viewers (peak): 50M"}),"\n",(0,s.jsx)(n.li,{children:"Average video size: 1GB/hour (compressed)"}),"\n",(0,s.jsx)(n.li,{children:"Average watch time: 2 hours/day"}),"\n",(0,s.jsx)(n.li,{children:"Catalog size: 10,000 titles"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Storage:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Video Storage = 10,000 titles \xd7 2 hours \xd7 5 quality levels \xd7 1GB\n              = 100,000 GB = 100 TB (master copies)\nWith CDN replication (\xd750 regions) = 5 PB\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Bandwidth:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Peak Concurrent Streams = 50M users\nAverage Bitrate = 5 Mbps\nPeak Bandwidth = 50M \xd7 5 Mbps = 250 Tbps\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"QPS:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Metadata Requests = 200M DAU \xd7 50 requests/day / 86400s = ~115K QPS\nVideo Chunk Requests = 50M concurrent \xd7 4 chunks/sec = 200M requests/sec (handled by CDN)\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"2-core-entities-2-minutes",children:"2. Core Entities (~2 minutes)"}),"\n",(0,s.jsx)(n.h3,{id:"user",children:"User"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"userId"}),", ",(0,s.jsx)(n.code,{children:"email"}),", ",(0,s.jsx)(n.code,{children:"subscriptionType"}),", ",(0,s.jsx)(n.code,{children:"preferences"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"video",children:"Video"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"videoId"}),", ",(0,s.jsx)(n.code,{children:"title"}),", ",(0,s.jsx)(n.code,{children:"description"}),", ",(0,s.jsx)(n.code,{children:"duration"}),", ",(0,s.jsx)(n.code,{children:"releaseDate"}),", ",(0,s.jsx)(n.code,{children:"genres"}),", ",(0,s.jsx)(n.code,{children:"maturityRating"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"videometadata",children:"VideoMetadata"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"videoId"}),", ",(0,s.jsx)(n.code,{children:"resolutions"}),", ",(0,s.jsx)(n.code,{children:"encodedFiles"}),", ",(0,s.jsx)(n.code,{children:"thumbnails"}),", ",(0,s.jsx)(n.code,{children:"subtitles"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"watchhistory",children:"WatchHistory"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"userId"}),", ",(0,s.jsx)(n.code,{children:"videoId"}),", ",(0,s.jsx)(n.code,{children:"timestamp"}),", ",(0,s.jsx)(n.code,{children:"watchedDuration"}),", ",(0,s.jsx)(n.code,{children:"completed"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"rating",children:"Rating"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"userId"}),", ",(0,s.jsx)(n.code,{children:"videoId"}),", ",(0,s.jsx)(n.code,{children:"rating"})," (1-5), ",(0,s.jsx)(n.code,{children:"timestamp"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"recommendation",children:"Recommendation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"userId"}),", ",(0,s.jsx)(n.code,{children:"recommendedVideoIds"}),", ",(0,s.jsx)(n.code,{children:"score"}),", ",(0,s.jsx)(n.code,{children:"generatedAt"})]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"3-api-interface-5-minutes",children:"3. API Interface (~5 minutes)"}),"\n",(0,s.jsx)(n.h3,{id:"protocol-choice",children:"Protocol Choice"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"REST"})," for metadata operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"HTTP Streaming (HLS/DASH)"})," for video delivery"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,s.jsx)(n.h4,{id:"authentication",children:"Authentication"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'POST /v1/auth/login\nContent-Type: application/json\n\n{\n  "email": "user@example.com",\n  "password": "securepass"\n}\n\nResponse: { "authToken": "jwt_token_here" }\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'POST /v1/auth/refresh\nAuthorization: Bearer <token>\n\nResponse: { "newToken": "new_jwt_token" }\n'})}),"\n",(0,s.jsx)(n.h4,{id:"browse--search",children:"Browse & Search"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'GET /v1/videos?genre=action&page=1&limit=20\n\nResponse: {\n  "videos": [Video],\n  "totalPages": 50,\n  "currentPage": 1\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'GET /v1/videos/search?query=inception\n\nResponse: {\n  "results": [Video]\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'GET /v1/videos/{videoId}\n\nResponse: {\n  "video": Video,\n  "metadata": VideoMetadata\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"streaming",children:"Streaming"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'GET /v1/videos/{videoId}/manifest\n\nResponse: {\n  "manifestUrl": "https://cdn.netflix.com/videos/123/master.m3u8"\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET /v1/videos/{videoId}/stream/{resolution}/{chunkId}\n\nResponse: Binary video chunk\n"})}),"\n",(0,s.jsx)(n.h4,{id:"watch-history",children:"Watch History"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'POST /v1/watch-history\nContent-Type: application/json\n\n{\n  "videoId": "video-123",\n  "timestamp": 1234567890,\n  "watchedDuration": 3600\n}\n\nResponse: { "success": true }\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'GET /v1/watch-history?userId={userId}\n\nResponse: {\n  "history": [WatchHistory]\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"ratings--recommendations",children:"Ratings & Recommendations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'POST /v1/ratings\nContent-Type: application/json\n\n{\n  "videoId": "video-123",\n  "rating": 5\n}\n\nResponse: { "success": true }\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'GET /v1/recommendations\n\nResponse: {\n  "recommendations": [Video]\n}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"4-data-flow-5-minutes",children:"4. Data Flow (~5 minutes)"}),"\n",(0,s.jsx)(n.h3,{id:"video-streaming-flow",children:"Video Streaming Flow"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"User Requests Video"}),": Client sends request to API Gateway with ",(0,s.jsx)(n.code,{children:"videoId"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Fetch Metadata"}),": Application server retrieves video metadata from cache/DB"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Generate Manifest"}),": Server returns adaptive bitrate manifest (HLS/DASH)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"CDN Delivery"}),": Client requests video chunks from nearest CDN edge server"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Adaptive Streaming"}),": Client adapts quality based on network conditions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Track Progress"}),": Client periodically sends watch progress to backend (async)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Update Recommendations"}),": Background job processes watch history for ML model"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"5-high-level-design-10-15-minutes",children:"5. High Level Design (~10-15 minutes)"}),"\n",(0,s.jsx)(n.h3,{id:"architecture-components",children:"Architecture Components"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Client Layer:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Web/Mobile/TV Apps with adaptive video player"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Edge Layer:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"CDN (CloudFront/Akamai) - caches video chunks globally"}),"\n",(0,s.jsx)(n.li,{children:"Edge Servers - closest to users for lowest latency"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"API Layer:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"API Gateway - rate limiting, authentication"}),"\n",(0,s.jsx)(n.li,{children:"Load Balancer - distributes traffic across app servers"}),"\n",(0,s.jsx)(n.li,{children:"Application Servers - business logic (Spring Boot)"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Data Layer:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PostgreSQL"})," (metadata) - videos, users, subscriptions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cassandra"})," (watch history) - high write throughput, time-series data"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Redis"})," (cache) - hot metadata, user sessions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Elasticsearch"})," - full-text search for video catalog"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"S3/Object Storage"})," - master video files"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Processing Layer:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Video Encoding Service"})," - transcodes to multiple resolutions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Kafka"})," - event streaming (watch events, ratings)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Recommendation Engine"})," - ML model serving"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Background Workers"})," - async processing"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"data-models",children:"Data Models"}),"\n",(0,s.jsx)(n.h4,{id:"postgresql---video-metadata",children:"PostgreSQL - Video Metadata"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"videos:\n  id (PK),\n  title,\n  description,\n  duration_seconds,\n  release_date,\n  genres[],\n  maturity_rating,\n  thumbnail_url\n\nusers:\n  id (PK),\n  email,\n  password_hash,\n  subscription_type,\n  created_at,\n  last_login\n\nvideo_files:\n  id (PK),\n  video_id (FK),\n  resolution,\n  codec,\n  bitrate,\n  cdn_url,\n  file_size\n"})}),"\n",(0,s.jsx)(n.h4,{id:"cassandra---watch-history",children:"Cassandra - Watch History"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"watch_history:\n  user_id (Partition Key),\n  video_id (Clustering Key),\n  watched_at (Clustering Key),\n  watched_duration,\n  completed\n\n  PRIMARY KEY ((user_id), video_id, watched_at)\n"})}),"\n",(0,s.jsx)(n.h4,{id:"redis-cache",children:"Redis Cache"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Key Pattern: video:{videoId} -> Video metadata JSON\nKey Pattern: user:session:{token} -> User session\nKey Pattern: trending:daily -> List of video IDs\n\nTTL: 1 hour for video metadata, 24 hours for trending\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"6-architecture-diagram",children:"6. Architecture Diagram"}),"\n",(0,s.jsx)(n.mermaid,{value:'graph TB\n    subgraph "Client Layer"\n        Web[Web Browser]\n        Mobile[Mobile App]\n        TV[Smart TV App]\n    end\n\n    subgraph "Edge Layer - CDN"\n        CDN1[CDN Edge Server<br/>US East]\n        CDN2[CDN Edge Server<br/>EU West]\n        CDN3[CDN Edge Server<br/>Asia Pacific]\n    end\n\n    subgraph "API Gateway Layer"\n        APIGateway[API Gateway<br/>Authentication, Rate Limiting]\n        LB[Load Balancer<br/>Round Robin]\n    end\n\n    subgraph "Application Layer"\n        App1[App Server 1<br/>Spring Boot]\n        App2[App Server 2<br/>Spring Boot]\n        App3[App Server N<br/>Spring Boot]\n    end\n\n    subgraph "Cache Layer"\n        Redis1[(Redis Master<br/>Hot Metadata)]\n        Redis2[(Redis Replica)]\n    end\n\n    subgraph "Database Layer"\n        Postgres[(PostgreSQL<br/>Video Metadata,<br/>Users)]\n        PostgresReplica[(PostgreSQL<br/>Read Replica)]\n        Cassandra[(Cassandra<br/>Watch History,<br/>Time-series)]\n        Elasticsearch[(Elasticsearch<br/>Search Index)]\n    end\n\n    subgraph "Storage Layer"\n        S3[S3/Object Storage<br/>Master Video Files]\n    end\n\n    subgraph "Processing Layer"\n        Kafka[Kafka<br/>Event Stream]\n        VideoEncoder[Video Encoding<br/>Service<br/>FFmpeg]\n        RecommendEngine[Recommendation<br/>Engine<br/>ML Model]\n        Workers[Background Workers<br/>Analytics Processing]\n    end\n\n    subgraph "Monitoring"\n        Metrics[Prometheus/Grafana<br/>Metrics & Alerts]\n        Logs[ELK Stack<br/>Centralized Logging]\n    end\n\n    %% Client to CDN (Video Streaming)\n    Web --\x3e|Stream Video Chunks| CDN1\n    Mobile --\x3e|Stream Video Chunks| CDN2\n    TV --\x3e|Stream Video Chunks| CDN3\n\n    %% Client to API (Metadata)\n    Web --\x3e|Browse, Search,<br/>Watch Progress| APIGateway\n    Mobile --\x3e|Browse, Search,<br/>Watch Progress| APIGateway\n    TV --\x3e|Browse, Search,<br/>Watch Progress| APIGateway\n\n    %% API Flow\n    APIGateway --\x3e LB\n    LB --\x3e App1\n    LB --\x3e App2\n    LB --\x3e App3\n\n    %% App to Cache\n    App1 --\x3e Redis1\n    App2 --\x3e Redis1\n    App3 --\x3e Redis1\n    Redis1 -.Replication.-> Redis2\n\n    %% App to Database\n    App1 --\x3e|Write| Postgres\n    App1 --\x3e|Read| PostgresReplica\n    App2 --\x3e|Write| Cassandra\n    App3 --\x3e|Search| Elasticsearch\n\n    Postgres -.Replication.-> PostgresReplica\n\n    %% Video Upload & Processing\n    S3 --\x3e|Master Files| VideoEncoder\n    VideoEncoder --\x3e|Encoded Chunks| CDN1\n    VideoEncoder --\x3e|Encoded Chunks| CDN2\n    VideoEncoder --\x3e|Encoded Chunks| CDN3\n\n    %% Event Processing\n    App1 --\x3e|Watch Events,<br/>Ratings| Kafka\n    App2 --\x3e|Watch Events,<br/>Ratings| Kafka\n    Kafka --\x3e Workers\n    Kafka --\x3e RecommendEngine\n\n    Workers --\x3e|Update Analytics| Cassandra\n    RecommendEngine --\x3e|Store Recommendations| Redis1\n\n    %% Monitoring\n    App1 -.Metrics.-> Metrics\n    App2 -.Logs.-> Logs\n    CDN1 -.Metrics.-> Metrics\n\n    style Web fill:#e1f5ff\n    style Mobile fill:#e1f5ff\n    style TV fill:#e1f5ff\n    style CDN1 fill:#fff4e1\n    style CDN2 fill:#fff4e1\n    style CDN3 fill:#fff4e1\n    style Kafka fill:#ffe1f5\n    style RecommendEngine fill:#ffe1f5'}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"7-deep-dives-10-minutes",children:"7. Deep Dives (~10 minutes)"}),"\n",(0,s.jsx)(n.h3,{id:"71-video-streaming-architecture-adaptive-bitrate",children:"7.1 Video Streaming Architecture (Adaptive Bitrate)"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Problem"}),": Different users have different network speeds and device capabilities"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Solution"}),": HLS (HTTP Live Streaming) / MPEG-DASH"]}),"\n",(0,s.jsx)(n.h4,{id:"video-encoding-process",children:"Video Encoding Process"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Master video uploaded to S3"}),"\n",(0,s.jsxs)(n.li,{children:["Encoding service creates multiple versions:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"4K (2160p) - 20 Mbps"}),"\n",(0,s.jsx)(n.li,{children:"1080p - 8 Mbps"}),"\n",(0,s.jsx)(n.li,{children:"720p - 5 Mbps"}),"\n",(0,s.jsx)(n.li,{children:"480p - 2.5 Mbps"}),"\n",(0,s.jsx)(n.li,{children:"360p - 1 Mbps"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Each version split into 4-10 second chunks"}),"\n",(0,s.jsx)(n.li,{children:"Generate manifest file (.m3u8 or .mpd)"}),"\n",(0,s.jsx)(n.li,{children:"Upload all chunks to CDN"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"manifest-example-hls",children:"Manifest Example (HLS)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-m3u8",children:"#EXTM3U\n#EXT-X-STREAM-INF:BANDWIDTH=8000000,RESOLUTION=1920x1080\n1080p/playlist.m3u8\n#EXT-X-STREAM-INF:BANDWIDTH=5000000,RESOLUTION=1280x720\n720p/playlist.m3u8\n#EXT-X-STREAM-INF:BANDWIDTH=2500000,RESOLUTION=854x480\n480p/playlist.m3u8\n"})}),"\n",(0,s.jsx)(n.h4,{id:"client-side-logic",children:"Client-Side Logic"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Measures current bandwidth every few seconds"}),"\n",(0,s.jsx)(n.li,{children:"Automatically switches quality based on available bandwidth"}),"\n",(0,s.jsx)(n.li,{children:"Buffers ahead to prevent stuttering"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"72-cdn-strategy--content-distribution",children:"7.2 CDN Strategy & Content Distribution"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Why CDN?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Reduced latency (content closer to users)"}),"\n",(0,s.jsx)(n.li,{children:"Reduced load on origin servers"}),"\n",(0,s.jsx)(n.li,{children:"Better availability"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"push-vs-pull-cdn",children:"Push vs Pull CDN"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Push CDN"})," (Netflix uses this):"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Proactively push popular content to edge servers"}),"\n",(0,s.jsx)(n.li,{children:"Predict what users will watch (recommendations drive this)"}),"\n",(0,s.jsx)(n.li,{children:"Pre-warm cache during off-peak hours"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"strategy",children:"Strategy"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Popularity-based"}),": Push top 20% content to all regions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Regional preferences"}),": Push Bollywood to India, K-dramas to Asia"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Time-based"}),": Push new releases before launch"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Edge servers cache"}),": 50TB-100TB of content each"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"73-caching-strategy-multi-layer",children:"7.3 Caching Strategy (Multi-Layer)"}),"\n",(0,s.jsx)(n.h4,{id:"layer-1---cdn-cache",children:"Layer 1 - CDN Cache"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Video chunks (static content)"}),"\n",(0,s.jsx)(n.li,{children:"Hit ratio: ~95%"}),"\n",(0,s.jsx)(n.li,{children:"TTL: 30 days"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"layer-2---redis-cache",children:"Layer 2 - Redis Cache"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Hot metadata caching\n@Cacheable(value = "videos", key = "#videoId", unless = "#result == null")\npublic Video getVideoById(String videoId) {\n    return videoRepository.findById(videoId)\n        .orElseThrow(() -> new VideoNotFoundException(videoId));\n}\n\n// Cache trending videos\n@Cacheable(value = "trending", key = "\'daily\'")\npublic List<Video> getTrendingVideos() {\n    return videoRepository.findTrending(LocalDate.now());\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"cache-invalidation",children:"Cache Invalidation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@CacheEvict(value = "videos", key = "#videoId")\npublic void updateVideo(String videoId, Video video) {\n    videoRepository.save(video);\n}\n\n// Cache warming on startup\n@EventListener(ApplicationReadyEvent.class)\npublic void warmCache() {\n    List<Video> popular = videoRepository.findTop100();\n    popular.forEach(v -> cacheManager.getCache("videos").put(v.getId(), v));\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"layer-3---database-query-cache",children:"Layer 3 - Database Query Cache"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"PostgreSQL query result cache"}),"\n",(0,s.jsx)(n.li,{children:"Cassandra built-in row cache"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"74-database-scaling-strategy",children:"7.4 Database Scaling Strategy"}),"\n",(0,s.jsx)(n.h4,{id:"postgresql-metadata---read-heavy",children:"PostgreSQL (Metadata) - Read-Heavy"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Vertical Scaling:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Master: Write operations"}),"\n",(0,s.jsx)(n.li,{children:"5+ Read Replicas: Distribute read load"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Indexing:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"CREATE INDEX idx_videos_genre ON videos USING GIN(genres);\nCREATE INDEX idx_videos_release_date ON videos(release_date DESC);\nCREATE INDEX idx_users_email ON users(email);\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Connection Pooling:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-properties",children:"# HikariCP configuration\nspring.datasource.hikari.maximum-pool-size=50\nspring.datasource.hikari.minimum-idle=10\nspring.datasource.hikari.connection-timeout=30000\n"})}),"\n",(0,s.jsx)(n.h4,{id:"cassandra-watch-history---write-heavy",children:"Cassandra (Watch History) - Write-Heavy"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Why Cassandra?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Handles 200M+ users \xd7 50 watch events/day = 10B writes/day"}),"\n",(0,s.jsx)(n.li,{children:"Linear scalability (add nodes as needed)"}),"\n",(0,s.jsx)(n.li,{children:"Eventual consistency is acceptable"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Partition Strategy:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- Partitioned by user_id for fast user queries\nCREATE TABLE watch_history (\n    user_id UUID,\n    video_id UUID,\n    watched_at TIMESTAMP,\n    watched_duration INT,\n    completed BOOLEAN,\n    PRIMARY KEY ((user_id), video_id, watched_at)\n) WITH CLUSTERING ORDER BY (video_id DESC, watched_at DESC);\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Write Path:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Client -> Kafka -> Batch Worker -> Cassandra\n(Async, non-blocking, batched writes every 30 seconds)\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"75-search-functionality-elasticsearch",children:"7.5 Search Functionality (Elasticsearch)"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Why Elasticsearch?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Full-text search with fuzzy matching"}),"\n",(0,s.jsx)(n.li,{children:"Fast autocomplete suggestions"}),"\n",(0,s.jsx)(n.li,{children:"Faceted search (filter by genre, year, rating)"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"index-structure",children:"Index Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "mappings": {\n    "properties": {\n      "title": { "type": "text", "analyzer": "standard" },\n      "description": { "type": "text" },\n      "genres": { "type": "keyword" },\n      "release_year": { "type": "integer" },\n      "rating": { "type": "float" },\n      "popularity_score": { "type": "integer" }\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"search-query",children:"Search Query"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Service\npublic class SearchService {\n\n    public List<Video> search(String query, List<String> genres) {\n        BoolQueryBuilder boolQuery = QueryBuilders.boolQuery()\n            .must(QueryBuilders.multiMatchQuery(query, "title", "description"))\n            .filter(QueryBuilders.termsQuery("genres", genres));\n\n        return elasticsearchTemplate.search(boolQuery, Video.class);\n    }\n}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"76-watch-history-tracking-async",children:"7.6 Watch History Tracking (Async)"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Challenge"}),": Don't block video playback with writes"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Solution"}),": Fire-and-forget with retry"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Service\npublic class WatchHistoryService {\n\n    @Async\n    public CompletableFuture<Void> trackProgress(\n        String userId,\n        String videoId,\n        int watchedDuration\n    ) {\n        WatchEvent event = WatchEvent.builder()\n            .userId(userId)\n            .videoId(videoId)\n            .watchedDuration(watchedDuration)\n            .timestamp(Instant.now())\n            .build();\n\n        // Send to Kafka\n        kafkaTemplate.send("watch-events", event);\n\n        return CompletableFuture.completedFuture(null);\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"kafka-consumer-batch-processing",children:"Kafka Consumer (Batch Processing)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@KafkaListener(topics = "watch-events", batch = "true")\npublic void processWatchEvents(List<WatchEvent> events) {\n    // Batch insert to Cassandra (every 30 seconds or 1000 events)\n    watchHistoryRepository.saveAll(events);\n\n    // Update user profile for recommendations\n    events.forEach(e -> recommendationService.updateUserProfile(e));\n}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"77-recommendation-engine",children:"7.7 Recommendation Engine"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Approach"}),": Collaborative Filtering + Content-Based"]}),"\n",(0,s.jsx)(n.h4,{id:"data-pipeline",children:"Data Pipeline"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Watch History -> Feature Engineering -> ML Model -> Redis Cache\n"})}),"\n",(0,s.jsx)(n.h4,{id:"features",children:"Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"User watch history"}),"\n",(0,s.jsx)(n.li,{children:"Genres watched"}),"\n",(0,s.jsx)(n.li,{children:"Watch completion rate"}),"\n",(0,s.jsx)(n.li,{children:"Time of day preferences"}),"\n",(0,s.jsx)(n.li,{children:"Similar users' preferences"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"serving",children:"Serving"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Service\npublic class RecommendationService {\n\n    @Cacheable(value = "recommendations", key = "#userId")\n    public List<Video> getRecommendations(String userId) {\n        // Check pre-computed recommendations in Redis\n        String cacheKey = "rec:" + userId;\n        List<String> videoIds = redisTemplate.opsForList()\n            .range(cacheKey, 0, 19);\n\n        if (videoIds != null && !videoIds.isEmpty()) {\n            return videoRepository.findAllById(videoIds);\n        }\n\n        // Fallback to popular content\n        return videoRepository.findTrending();\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"background-job-every-6-hours",children:"Background Job (Every 6 hours)"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Fetch user watch history from Cassandra"}),"\n",(0,s.jsx)(n.li,{children:"Run ML model (TensorFlow Serving / SageMaker)"}),"\n",(0,s.jsx)(n.li,{children:"Generate top 50 recommendations per user"}),"\n",(0,s.jsx)(n.li,{children:"Store in Redis with 24-hour TTL"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"78-handling-peak-traffic",children:"7.8 Handling Peak Traffic"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Problem"}),": 3x traffic spike during peak hours (6 PM - 11 PM)"]}),"\n",(0,s.jsx)(n.h4,{id:"solutions",children:"Solutions"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"1. Auto-Scaling:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# Kubernetes HPA (Horizontal Pod Autoscaler)\n# Scale app servers based on CPU > 70%\n# Min replicas: 50, Max replicas: 500\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"2. Rate Limiting:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@RateLimiter(name = "api", fallbackMethod = "rateLimitFallback")\npublic ResponseEntity<?> getVideos() {\n    // API logic\n}\n\n// Configuration\n// resilience4j.ratelimiter.instances.api.limit-for-period=100\n// resilience4j.ratelimiter.instances.api.limit-refresh-period=1m\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"3. Request Prioritization:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"P0"}),": Video streaming requests (always serve)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"P1"}),": Metadata, search (throttle if needed)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"P2"}),": Recommendations, analytics (can drop)"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"79-fault-tolerance--reliability",children:"7.9 Fault Tolerance & Reliability"}),"\n",(0,s.jsx)(n.h4,{id:"circuit-breaker-pattern",children:"Circuit Breaker Pattern"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@CircuitBreaker(name = "database", fallbackMethod = "fallbackGetVideo")\npublic Video getVideoById(String videoId) {\n    return videoRepository.findById(videoId)\n        .orElseThrow(() -> new VideoNotFoundException(videoId));\n}\n\npublic Video fallbackGetVideo(String videoId, Exception e) {\n    // Serve from cache or return graceful error\n    return cacheService.get("videos", videoId)\n        .orElse(Video.builder()\n            .id(videoId)\n            .title("Video Unavailable")\n            .build());\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"database-replication",children:"Database Replication"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"PostgreSQL: 1 Master + 5 Read Replicas"}),"\n",(0,s.jsx)(n.li,{children:"Cross-region replication for disaster recovery"}),"\n",(0,s.jsx)(n.li,{children:"Automatic failover with health checks"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"cdn-redundancy",children:"CDN Redundancy"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Multi-CDN strategy (CloudFront + Akamai)"}),"\n",(0,s.jsx)(n.li,{children:"If one CDN fails, route to backup"}),"\n",(0,s.jsx)(n.li,{children:"Health checks every 30 seconds"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"710-security-considerations",children:"7.10 Security Considerations"}),"\n",(0,s.jsx)(n.h4,{id:"1-authentication--authorization",children:"1. Authentication & Authorization"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"@PreAuthorize(\"hasRole('PREMIUM') or hasRole('STANDARD')\")\npublic Video streamVideo(String videoId) {\n    // Only authenticated users with active subscription\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"2-drm-digital-rights-management",children:"2. DRM (Digital Rights Management)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Encrypt video chunks with AES-128"}),"\n",(0,s.jsx)(n.li,{children:"Generate time-limited playback tokens"}),"\n",(0,s.jsx)(n.li,{children:"Prevent unauthorized downloads"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"3-api-security",children:"3. API Security"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"JWT tokens with 1-hour expiry"}),"\n",(0,s.jsx)(n.li,{children:"HTTPS only (TLS 1.3)"}),"\n",(0,s.jsx)(n.li,{children:"API rate limiting per user"}),"\n",(0,s.jsx)(n.li,{children:"CORS policies"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"4-content-protection",children:"4. Content Protection"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Video URL Format:\nhttps://cdn.netflix.com/{videoId}/{resolution}/{chunk}.ts?token={signed_token}\n\nSigned Token = HMAC(videoId + userId + expiry, secret_key)\nExpiry = 5 minutes (forces client to refresh)\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"711-monitoring--observability",children:"7.11 Monitoring & Observability"}),"\n",(0,s.jsx)(n.h4,{id:"key-metrics",children:"Key Metrics"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Application:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"API response time (P50, P95, P99)"}),"\n",(0,s.jsx)(n.li,{children:"Error rate (4xx, 5xx)"}),"\n",(0,s.jsx)(n.li,{children:"Requests per second"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Video Streaming:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Buffering ratio (% of playback time spent buffering)"}),"\n",(0,s.jsx)(n.li,{children:"Startup time (time to first frame)"}),"\n",(0,s.jsx)(n.li,{children:"Bitrate distribution"}),"\n",(0,s.jsx)(n.li,{children:"CDN hit ratio"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Infrastructure:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"CPU/Memory usage"}),"\n",(0,s.jsx)(n.li,{children:"Database query latency"}),"\n",(0,s.jsx)(n.li,{children:"Cache hit ratio"}),"\n",(0,s.jsx)(n.li,{children:"Kafka lag"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"tools",children:"Tools"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prometheus + Grafana"})," (metrics)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ELK Stack"})," (logs)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Jaeger"})," (distributed tracing)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PagerDuty"})," (alerting)"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-alert",children:"Example Alert"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"Alert: High Video Buffering\nCondition: buffering_ratio > 5% for 5 minutes\nAction:\n  1. Check CDN health\n  2. Scale up edge servers\n  3. Notify on-call engineer\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(n.h3,{id:"key-design-decisions",children:"Key Design Decisions"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"CDN-First Architecture"}),": 95% of traffic served from edge, reducing latency"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Polyglot Persistence"}),": PostgreSQL (metadata), Cassandra (time-series), Redis (cache)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Async Processing"}),": Kafka for watch events, non-blocking writes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Adaptive Streaming"}),": HLS/DASH for quality adaptation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multi-Layer Caching"}),": CDN \u2192 Redis \u2192 Database"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Horizontal Scaling"}),": Stateless app servers, auto-scaling"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Eventual Consistency"}),": Acceptable for watch history, recommendations"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"scalability-achieved",children:"Scalability Achieved"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 200M+ concurrent users"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Sub-2-second startup time"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 99.99% availability"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Global low latency via CDN"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"trade-offs--considerations",children:"Trade-offs & Considerations"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Decision"}),(0,s.jsx)(n.th,{children:"Pro"}),(0,s.jsx)(n.th,{children:"Con"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Push CDN"}),(0,s.jsx)(n.td,{children:"Lower latency, predictable performance"}),(0,s.jsx)(n.td,{children:"Higher storage costs, wasted bandwidth for unpopular content"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Cassandra for Watch History"}),(0,s.jsx)(n.td,{children:"Linear scalability, handles massive writes"}),(0,s.jsx)(n.td,{children:"Eventual consistency, complex queries limited"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Async Watch Tracking"}),(0,s.jsx)(n.td,{children:"Non-blocking, better UX"}),(0,s.jsx)(n.td,{children:"Possible data loss if Kafka fails"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Pre-computed Recommendations"}),(0,s.jsx)(n.td,{children:"Fast response time"}),(0,s.jsx)(n.td,{children:"Stale recommendations (6-hour refresh)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Multi-CDN Strategy"}),(0,s.jsx)(n.td,{children:"High availability, redundancy"}),(0,s.jsx)(n.td,{children:"Increased complexity, higher costs"})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"future-enhancements",children:"Future Enhancements"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Live Streaming"}),": Support for live events and sports"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Interactive Content"}),": Choose-your-own-adventure style content"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Offline Downloads"}),": Download videos for offline viewing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Social Features"}),": Watch parties, shared profiles"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"AI-Powered Dubbing"}),": Real-time audio translation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"VR/AR Support"}),": Immersive viewing experiences"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Edge Computing"}),": Process recommendations at edge for lower latency"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(96540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);