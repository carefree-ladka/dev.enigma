"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9478],{60:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=r(4848),t=r(8453);const o={},s="WeakMap, WeakSet, and Generators",i={id:"WebDev/JavaScript/WeakSetWeakMapGenerator",title:"WeakMap, WeakSet, and Generators",description:"WeakMap",source:"@site/docs/WebDev/JavaScript/WeakSetWeakMapGenerator.mdx",sourceDirName:"WebDev/JavaScript",slug:"/WebDev/JavaScript/WeakSetWeakMapGenerator",permalink:"/js.enigma/docs/WebDev/JavaScript/WeakSetWeakMapGenerator",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/WebDev/JavaScript/WeakSetWeakMapGenerator.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tracking the amount of time a user spends on a site",permalink:"/js.enigma/docs/WebDev/JavaScript/TrackTime"},next:{title:"Webpack 5",permalink:"/js.enigma/docs/WebDev/JavaScript/Webpack"}},l={},c=[{value:"WeakMap",id:"weakmap",level:2},{value:"Basic WeakMap Operations",id:"basic-weakmap-operations",level:3},{value:"Memory Management with WeakMap",id:"memory-management-with-weakmap",level:3},{value:"Private Data Pattern",id:"private-data-pattern",level:3},{value:"WeakSet",id:"weakset",level:2},{value:"Basic WeakSet Operations",id:"basic-weakset-operations",level:3},{value:"Use Case: Object Tagging",id:"use-case-object-tagging",level:3},{value:"Generator Functions",id:"generator-functions",level:2},{value:"Basic Generator Syntax",id:"basic-generator-syntax",level:3},{value:"Infinite Sequence Generator",id:"infinite-sequence-generator",level:3},{value:"Generator with Input",id:"generator-with-input",level:3},{value:"Async Generator Pattern",id:"async-generator-pattern",level:3},{value:"Generator Delegation",id:"generator-delegation",level:3},{value:"Advanced Generator Patterns",id:"advanced-generator-patterns",level:3},{value:"Custom Iteration Protocol",id:"custom-iteration-protocol",level:4},{value:"Error Handling in Generators",id:"error-handling-in-generators",level:4},{value:"Generator Pipeline",id:"generator-pipeline",level:4},{value:"Best Practices",id:"best-practices",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"weakmap-weakset-and-generators",children:"WeakMap, WeakSet, and Generators"})}),"\n",(0,a.jsx)(n.h2,{id:"weakmap",children:"WeakMap"}),"\n",(0,a.jsx)(n.p,{children:"WeakMap is a collection of key/value pairs where the keys must be objects and the references to the objects are held weakly."}),"\n",(0,a.jsx)(n.h3,{id:"basic-weakmap-operations",children:"Basic WeakMap Operations"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Creating a WeakMap\r\nconst wm = new WeakMap();\r\n\r\n// Adding entries\r\nlet obj1 = { id: 1 };\r\nlet obj2 = { id: 2 };\r\n\r\nwm.set(obj1, 'Data for object 1');\r\nwm.set(obj2, 'Data for object 2');\r\n\r\n// Retrieving values\r\nconsole.log(wm.get(obj1)); // 'Data for object 1'\r\n\r\n// Checking existence\r\nconsole.log(wm.has(obj1)); // true\r\n\r\n// Deleting entries\r\nwm.delete(obj1);\r\nconsole.log(wm.has(obj1)); // false\n"})}),"\n",(0,a.jsx)(n.h3,{id:"memory-management-with-weakmap",children:"Memory Management with WeakMap"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const cache = new WeakMap();\r\n\r\nfunction processObject(obj) {\r\n    if (cache.has(obj)) {\r\n        return cache.get(obj);\r\n    }\r\n    \r\n    const result = expensiveOperation(obj);\r\n    cache.set(obj, result);\r\n    return result;\r\n}\r\n\r\nlet user = { id: 1 };\r\nprocessObject(user);\r\n\r\n// When user is set to null and no other references exist\r\nuser = null;\r\n// The WeakMap entry is eligible for garbage collection\n"})}),"\n",(0,a.jsx)(n.h3,{id:"private-data-pattern",children:"Private Data Pattern"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const privateData = new WeakMap();\r\n\r\nclass User {\r\n    constructor(name, age) {\r\n        privateData.set(this, {\r\n            name,\r\n            age\r\n        });\r\n    }\r\n    \r\n    getName() {\r\n        return privateData.get(this).name;\r\n    }\r\n    \r\n    getAge() {\r\n        return privateData.get(this).age;\r\n    }\r\n}\r\n\r\nconst user = new User('John', 30);\r\nconsole.log(user.getName()); // 'John'\r\n// privateData.get(user) is not accessible outside the class\n"})}),"\n",(0,a.jsx)(n.h2,{id:"weakset",children:"WeakSet"}),"\n",(0,a.jsx)(n.p,{children:"WeakSet is a collection of objects stored in a set where references to the objects are held weakly."}),"\n",(0,a.jsx)(n.h3,{id:"basic-weakset-operations",children:"Basic WeakSet Operations"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Creating a WeakSet\r\nconst ws = new WeakSet();\r\n\r\n// Adding objects\r\nlet obj1 = { id: 1 };\r\nlet obj2 = { id: 2 };\r\n\r\nws.add(obj1);\r\nws.add(obj2);\r\n\r\n// Checking membership\r\nconsole.log(ws.has(obj1)); // true\r\n\r\n// Removing objects\r\nws.delete(obj1);\r\nconsole.log(ws.has(obj1)); // false\n"})}),"\n",(0,a.jsx)(n.h3,{id:"use-case-object-tagging",children:"Use Case: Object Tagging"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const processedItems = new WeakSet();\r\n\r\nfunction processItem(item) {\r\n    if (processedItems.has(item)) {\r\n        console.log('Already processed');\r\n        return;\r\n    }\r\n    \r\n    // Process the item\r\n    console.log('Processing item:', item);\r\n    processedItems.add(item);\r\n}\r\n\r\nlet item = { data: 'example' };\r\nprocessItem(item); // Processing item: { data: 'example' }\r\nprocessItem(item); // Already processed\n"})}),"\n",(0,a.jsx)(n.h2,{id:"generator-functions",children:"Generator Functions"}),"\n",(0,a.jsx)(n.p,{children:"Generators are functions that can be paused and resumed, yielding multiple values over time."}),"\n",(0,a.jsx)(n.h3,{id:"basic-generator-syntax",children:"Basic Generator Syntax"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"function* numberGenerator() {\r\n    yield 1;\r\n    yield 2;\r\n    yield 3;\r\n}\r\n\r\nconst gen = numberGenerator();\r\nconsole.log(gen.next()); // { value: 1, done: false }\r\nconsole.log(gen.next()); // { value: 2, done: false }\r\nconsole.log(gen.next()); // { value: 3, done: false }\r\nconsole.log(gen.next()); // { value: undefined, done: true }\n"})}),"\n",(0,a.jsx)(n.h3,{id:"infinite-sequence-generator",children:"Infinite Sequence Generator"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"function* infiniteSequence() {\r\n    let i = 0;\r\n    while (true) {\r\n        yield i++;\r\n    }\r\n}\r\n\r\nconst numbers = infiniteSequence();\r\nconsole.log(numbers.next().value); // 0\r\nconsole.log(numbers.next().value); // 1\r\n// ...continues infinitely\n"})}),"\n",(0,a.jsx)(n.h3,{id:"generator-with-input",children:"Generator with Input"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"function* conversation() {\r\n    const name = yield \"What's your name?\";\r\n    const age = yield `Hello ${name}, how old are you?`;\r\n    return `${name} is ${age} years old`;\r\n}\r\n\r\nconst conv = conversation();\r\nconsole.log(conv.next().value); // What's your name?\r\nconsole.log(conv.next('John').value); // Hello John, how old are you?\r\nconsole.log(conv.next('30').value); // John is 30 years old\n"})}),"\n",(0,a.jsx)(n.h3,{id:"async-generator-pattern",children:"Async Generator Pattern"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"async function* asyncGenerator() {\r\n    let i = 0;\r\n    while (i < 3) {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        yield i++;\r\n    }\r\n}\r\n\r\nasync function runGenerator() {\r\n    for await (const value of asyncGenerator()) {\r\n        console.log(value); // Logs 0, 1, 2 with 1-second delays\r\n    }\r\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"generator-delegation",children:"Generator Delegation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"function* generator1() {\r\n    yield 1;\r\n    yield 2;\r\n}\r\n\r\nfunction* generator2() {\r\n    yield* generator1();\r\n    yield 3;\r\n}\r\n\r\nconst gen = generator2();\r\nfor (const value of gen) {\r\n    console.log(value); // 1, 2, 3\r\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"advanced-generator-patterns",children:"Advanced Generator Patterns"}),"\n",(0,a.jsx)(n.h4,{id:"custom-iteration-protocol",children:"Custom Iteration Protocol"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"class CustomIterable {\r\n    *[Symbol.iterator]() {\r\n        yield 1;\r\n        yield 2;\r\n        yield 3;\r\n    }\r\n}\r\n\r\nconst iterable = new CustomIterable();\r\nfor (const value of iterable) {\r\n    console.log(value); // 1, 2, 3\r\n}\n"})}),"\n",(0,a.jsx)(n.h4,{id:"error-handling-in-generators",children:"Error Handling in Generators"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"function* errorGenerator() {\r\n    try {\r\n        yield 1;\r\n        yield 2;\r\n        yield 3;\r\n    } catch (error) {\r\n        console.log('Error caught:', error);\r\n        yield 'Error handled';\r\n    }\r\n}\r\n\r\nconst gen = errorGenerator();\r\nconsole.log(gen.next()); // { value: 1, done: false }\r\nconsole.log(gen.throw(new Error('Test error'))); // Logs error and returns { value: 'Error handled', done: false }\n"})}),"\n",(0,a.jsx)(n.h4,{id:"generator-pipeline",children:"Generator Pipeline"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"function* filter(numbers, predicate) {\r\n    for (const number of numbers) {\r\n        if (predicate(number)) {\r\n            yield number;\r\n        }\r\n    }\r\n}\r\n\r\nfunction* map(numbers, transform) {\r\n    for (const number of numbers) {\r\n        yield transform(number);\r\n    }\r\n}\r\n\r\n// Usage\r\nconst numbers = [1, 2, 3, 4, 5];\r\nconst pipeline = map(\r\n    filter(numbers, n => n % 2 === 0),\r\n    n => n * 2\r\n);\r\n\r\nfor (const value of pipeline) {\r\n    console.log(value); // 4, 8\r\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Memory Management"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Good: WeakMap for caching\r\nconst cache = new WeakMap();\r\nfunction cached(obj) {\r\n    if (cache.has(obj)) return cache.get(obj);\r\n    const result = expensive(obj);\r\n    cache.set(obj, result);\r\n    return result;\r\n}\r\n\r\n// Bad: Using Map for object references\r\nconst cache = new Map(); // Memory leak potential\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsx)(n.li,{children:"Generator Function Naming"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Good: Clear naming convention\r\nfunction* generateUserIds() {\r\n    let id = 1;\r\n    while (true) {\r\n        yield `USER_${id++}`;\r\n    }\r\n}\r\n\r\n// Bad: Unclear purpose\r\nfunction* gen() {\r\n    // ...\r\n}\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsx)(n.li,{children:"Error Handling"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"async function* safeGenerator() {\r\n    try {\r\n        yield* riskyOperation();\r\n    } catch (error) {\r\n        yield { error: error.message };\r\n    }\r\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"These features provide powerful tools for:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Memory-efficient caching (WeakMap)"}),"\n",(0,a.jsx)(n.li,{children:"Object lifetime tracking (WeakSet)"}),"\n",(0,a.jsx)(n.li,{children:"Lazy evaluation (Generators)"}),"\n",(0,a.jsx)(n.li,{children:"Custom iteration protocols"}),"\n",(0,a.jsx)(n.li,{children:"Asynchronous data streams"}),"\n",(0,a.jsx)(n.li,{children:"Complex control flow patterns"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Remember that WeakMap and WeakSet are specifically designed for memory management scenarios, while Generators excel at handling sequences and asynchronous operations."})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>i});var a=r(6540);const t={},o=a.createContext(t);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);