"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[3394],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var i=n(96540);const a={},o=i.createContext(a);function r(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:t},e.children)}},29532:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=n(74848),a=n(28453);const o={},r="Throttle & Debounce",l={id:"WebDev/JavaScript/ThrottleDebounce",title:"Throttle & Debounce",description:"Throttle & Debounce with leading and trailing options",source:"@site/docs/WebDev/JavaScript/ThrottleDebounce.mdx",sourceDirName:"WebDev/JavaScript",slug:"/WebDev/JavaScript/ThrottleDebounce",permalink:"/dev.enigma/docs/WebDev/JavaScript/ThrottleDebounce",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/WebDev/JavaScript/ThrottleDebounce.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Task Queue",permalink:"/dev.enigma/docs/WebDev/JavaScript/TaskQueue"},next:{title:"Tracking the amount of time a user spends on a site",permalink:"/dev.enigma/docs/WebDev/JavaScript/TrackTime"}},s={},c=[{value:"Throttle &amp; Debounce with leading and trailing options",id:"throttle--debounce-with-leading-and-trailing-options",level:2}];function u(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"throttle--debounce",children:"Throttle & Debounce"})}),"\n",(0,i.jsx)(t.h2,{id:"throttle--debounce-with-leading-and-trailing-options",children:"Throttle & Debounce with leading and trailing options"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-JavaScript",children:"class ThrottleDebounce {\n\n  // Throttle implementation\n  static throttle(func, wait, options = {}) {\n    let isWaiting = false;\n    let lastArgs = null;\n    let timeoutId = null;\n\n    const startWaitingPeriod = () => {\n      timeoutId = setTimeout(() => {\n        if (options.trailing && lastArgs) {\n          func.apply(this, lastArgs);\n          lastArgs = null;\n          startWaitingPeriod(); // Continue waiting period for trailing call\n        } else {\n          isWaiting = false; // Reset state if no trailing call\n        }\n      }, wait);\n    };\n\n    const wrapper = (...args) => {\n      if (!isWaiting) {\n        isWaiting = true;\n        if (options.leading) {\n          func.apply(this, args); // Execute immediately if leading is true\n        } else {\n          lastArgs = args; // Store args for trailing call\n        }\n        startWaitingPeriod(); // Start the waiting period\n      } else {\n        lastArgs = args; // Store args for trailing call\n      }\n    };\n\n    // Cancel the throttle\n    wrapper.cancel = () => {\n      clearTimeout(timeoutId); // Cancel the timeout\n      timeoutId = null;\n      isWaiting = false; // Reset waiting state\n      lastArgs = null; // Clear stored args\n    };\n    return wrapper;\n  }\n\n  // Debounce implementation\n  static debounce(func, wait, options = {}) {\n    let timeoutId;\n    const debounced = (...args) => {\n      const context = this;\n      const callNow = options.leading && !timeoutId;\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        timeoutId = null;\n        // Only execute if trailing is true\n        if (options.trailing && !callNow) {\n          func.apply(context, args);\n        }\n      }, wait);\n      // Execute immediately if it's a leading edge and not already called\n      if (callNow) {\n        func.apply(context, args);\n      }\n    };\n\n    // Add cancel method for cleanup\n    debounced.cancel = () => {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    };\n    return debounced;\n  }\n}\n\nconst throttle = ThrottleDebounce.throttle\nconst debounce = ThrottleDebounce.debounce\n"})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);