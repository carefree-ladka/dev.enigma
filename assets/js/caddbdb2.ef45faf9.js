"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[41405],{28453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>a});var r=t(96540);const o={},i=r.createContext(o);function s(n){const e=r.useContext(i);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),r.createElement(i.Provider,{value:e},n.children)}},51703:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=t(74848),o=t(28453);const i={},s="Unix File System",a={id:"DSA/DSA with JavaScript/UnixFileSystem",title:"Unix File System",description:"",source:"@site/docs/DSA/DSA with JavaScript/UnixFileSystem.mdx",sourceDirName:"DSA/DSA with JavaScript",slug:"/DSA/DSA with JavaScript/UnixFileSystem",permalink:"/docs/DSA/DSA with JavaScript/UnixFileSystem",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/DSA/DSA with JavaScript/UnixFileSystem.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Union-Find (Disjoint Set Union) Tutorial",permalink:"/docs/DSA/DSA with JavaScript/UnionFind"},next:{title:"Minimum Enclosing Circle - Welzl's Algorithm",permalink:"/docs/DSA/DSA with JavaScript/Welzl\u2019sAlgorithm"}},c={},d=[];function h(n){const e={code:"code",h1:"h1",header:"header",pre:"pre",...(0,o.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"unix-file-system",children:"Unix File System"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-JavaScript",children:"class FileNode {\n  constructor(type) {\n    this.type = type\n    this.children = {}\n  }\n}\n\nclass FileSystem {\n  constructor() {\n    this.root = new FileNode('dir') // Root directory\n    this.currentPath = this.root;\n    this.pathStack = ['/']; // Keeps track of current path\n  }\n\n  // Helper function to traverse the directory tree\n  #traverse(path) {\n    const parts = path.split('/').filter(Boolean);\n    let node = this.root;\n\n    for (const part of parts) {\n      if (!node.children[part] || node.children[part].type !== 'dir') {\n        throw new Error(`Directory '${part}' does not exist`);\n      }\n      node = node.children[part];\n    }\n    return node;\n  }\n\n  // Create a directory\n  mkdir(path) {\n    const parts = path.split('/').filter(Boolean);\n    let node = this.root;\n\n    for (const part of parts) {\n      if (!node.children[part]) {\n        node.children[part] = new FileNode('dir');\n      }\n      node = node.children[part];\n\n      if (node.type !== 'dir') {\n        throw new Error(`${part} is a file, cannot create directory here`);\n      }\n    }\n  }\n\n  // Create a file\n  touch(path) {\n    const parts = path.split('/').filter(Boolean);\n    const fileName = parts.pop();\n    let node = this.root;\n\n    for (const part of parts) {\n      if (!node.children[part] || node.children[part].type !== 'dir') {\n        throw new Error(`Directory '${part}' does not exist`);\n      }\n      node = node.children[part];\n    }\n\n    node.children[fileName] = new FileNode('file')\n  }\n\n  // List contents of a directory\n  ls(path = '') {\n    const node = path ? this.#traverse(path) : this.currentPath;\n\n    if (node.type !== 'dir') {\n      throw new Error(`${path} is not a directory`);\n    }\n\n    return Object.keys(node.children);\n  }\n\n  // Change directory\n  cd(path) {\n    if (path === '/') {\n      this.currentPath = this.root;\n      this.pathStack = ['/'];\n      return;\n    }\n\n    const node = this.#traverse(path);\n    this.currentPath = node;\n    this.pathStack = path.split('/').filter(Boolean);\n  }\n\n  // Print working directory\n  pwd() {\n    return '/' + this.pathStack.join('/');\n  }\n}\n\n// Example Usage:\nconst fs = new FileSystem();\n\nfs.mkdir('/home/user/documents');\nfs.mkdir('/home/user/photos');\nfs.touch('/home/user/documents/resume.pdf');\nfs.touch('/home/user/photos/selfie.png');\n\nconsole.log(fs.ls('/home/user'));  // ['documents', 'photos']\nconsole.log(fs.ls('/home/user/documents'));  // ['resume.pdf']\n\nfs.cd('/home/user/documents');\nconsole.log(fs.pwd());  // '/home/user/documents'\n\nfs.cd('/');\nconsole.log(fs.pwd());  // '/'\n\n/*\n[ 'documents', 'photos' ]\n[ 'resume.pdf' ]\n/home/user/documents\n//\n*/\n"})})]})}function l(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(h,{...n})}):h(n)}}}]);