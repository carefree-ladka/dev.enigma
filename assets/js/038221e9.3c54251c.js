"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[8435],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(96540);const s={},a=r.createContext(s);function i(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:n},e.children)}},74426:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var r=t(74848),s=t(28453);const a={title:"Design Patterns"},i=void 0,o={id:"WebDev/JavaScript/DesignPatterns",title:"Design Patterns",description:"Singleton Pattern",source:"@site/docs/WebDev/JavaScript/DesignPatterns.mdx",sourceDirName:"WebDev/JavaScript",slug:"/WebDev/JavaScript/DesignPatterns",permalink:"/docs/WebDev/JavaScript/DesignPatterns",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/WebDev/JavaScript/DesignPatterns.mdx",tags:[],version:"current",frontMatter:{title:"Design Patterns"},sidebar:"tutorialSidebar",previous:{title:"Currying Variations",permalink:"/docs/WebDev/JavaScript/Currying"},next:{title:"Event Emitter",permalink:"/docs/WebDev/JavaScript/EventEmitter"}},c={},l=[{value:"Singleton Pattern",id:"singleton-pattern",level:3},{value:"Factory Pattern",id:"factory-pattern",level:3},{value:"Module Pattern",id:"module-pattern",level:3},{value:"Proxy Pattern",id:"proxy-pattern",level:3},{value:"Builder Pattern",id:"builder-pattern",level:3},{value:"CircuitBreaker Pattern",id:"circuitbreaker-pattern",level:3},{value:"EvenStreamer Pattern",id:"evenstreamer-pattern",level:3},{value:"Iterator Pattern",id:"iterator-pattern",level:3},{value:"Observer Pattern",id:"observer-pattern",level:3},{value:"PubSub Pattern",id:"pubsub-pattern",level:3}];function u(e){const n={code:"code",h3:"h3",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"singleton-pattern",children:"Singleton Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-JavaScript",children:"class Singleton {\n  constructor() {\n    if (Singleton.instance) return Singleton.instance;\n    this.data = {\n      name: \"Pawan\",\n      age: 25,\n    };\n    Singleton.instance = this;\n  }\n\n  getData = () => this.data;\n}\n\nconst instance1 = new Singleton();\nconst instance2 = new Singleton();\n\nconsole.log(instance1 === instance2); //true\nconsole.log(instance1.getData()); //{ name: 'Pawan', age: 25 }\nconsole.log(instance1.getData()); //{ name: 'Pawan', age: 25 }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"factory-pattern",children:"Factory Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-JavaScript",children:'class Person {\n  constructor(name, age) {\n    this.name = name;\n    this.age = age;\n  }\n  sayGreeting = () => {\n    console.log(`Hello , this is ${this.name} and I am ${this.age} years old`);\n  };\n}\n\nclass PersonFactory {\n  static createPerson(name, age) {\n    return new Person(name, age);\n  }\n}\n\nconst p1 = PersonFactory.createPerson("Pawan", 25);\nconst p2 = PersonFactory.createPerson("Ayush", 26);\n\np1.sayGreeting(); //Hello , this is Pawan and I am 25 years old\np2.sayGreeting(); //Hello , this is Ayush and I am 26 years old\n'})}),"\n",(0,r.jsx)(n.h3,{id:"module-pattern",children:"Module Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-JavaScript",children:"class MyModule {\n  #privateChar = \"I'm private\";\n\n  #getPrivateChar = () => {\n    console.log(\"I'm private method\");\n  };\n\n  publicMethod = () => {\n    console.log(\"I'm public method\");\n  };\n}\n\nconst mm = new MyModule();\n\nmm.publicMethod(); //I'm public method\n// mm.#getPrivateChar(); //Property '#getPrivateChar' is not accessible outside class 'MyModule' because it has a private identifier.\n// mm.#privateChar; //Property '#privateChar' is not accessible outside class 'MyModule' because it has a private identifier.\n"})}),"\n",(0,r.jsx)(n.h3,{id:"proxy-pattern",children:"Proxy Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-JavaScript",children:'const person = {\n  name: "pawan",\n  age: 25,\n};\n\nconst handler = {\n  get: (target, key) => {\n    if (key === "name") return target[key].toUpperCase();\n  },\n  set: (target, key, value) => {\n    if (key === "address") {\n      key = key + "01";\n    }\n    target[key] = value;\n  },\n};\n\nconst proxy = new Proxy(person, handler);\n\nproxy["address"] = "Lucknow";\nconsole.log(proxy); //{ name: \'pawan\', age: 25, address01: \'Lucknow\' }\n'})}),"\n",(0,r.jsx)(n.h3,{id:"builder-pattern",children:"Builder Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-JavaScript",children:'class Product {\n  constructor(name, price, category) {\n    this.name = name;\n    this.price = price;\n    this.category = category;\n  }\n}\n\nclass ProductBuilder {\n  constructor(name) {\n    this.product = new Product();\n    this.product.name = name;\n  }\n\n  withPrice = (price) => {\n    this.product.price = price;\n    return this;\n  };\n\n  isCategory = (category) => {\n    this.product.category = category;\n    return this;\n  };\n\n  build = () => {\n    return this;\n  };\n}\n\nconst product = new ProductBuilder("Widget")\n  .withPrice(19.99)\n  .isCategory("Gadgets")\n  .build();\n\nconsole.log(product.product);\n'})}),"\n",(0,r.jsx)(n.h3,{id:"circuitbreaker-pattern",children:"CircuitBreaker Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-JavaScript",children:'class CircuitBreaker {\n  constructor(threshold, timeout) {\n    this.threshold = threshold; // number of failures before tripping the circuit\n    this.timeout = timeout; // time to wait before attempting to call the service again\n    this.failureCount = 0; // number of consecutive failures\n    this.lastFailureTime = null; // time of the last failure\n    this.isCircuitOpen = false; // whether the circuit is currently open\n  }\n\n  async callService() {\n    if (this.isCircuitOpen) {\n      const now = Date.now();\n      if (now - this.lastFailureTime > this.timeout) {\n        this.isCircuitOpen = false;\n        this.failureCount = 0;\n      } else {\n        throw new Error("Circuit is open");\n      }\n    }\n\n    try {\n      // Call the service here\n      const result = await someServiceCall();\n      this.failureCount = 0;\n      return result;\n    } catch (error) {\n      this.failureCount++;\n      this.lastFailureTime = Date.now();\n      if (this.failureCount >= this.threshold) {\n        this.isCircuitOpen = true;\n      }\n      throw error;\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"evenstreamer-pattern",children:"EvenStreamer Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-JavaScript",children:'class EventSteamer {\n  constructor() {\n    this.listeners = {};\n  }\n\n  on = (event, listener) => {\n    if (!this.listeners[event]) {\n      this.listeners[event] = [];\n    }\n    this.listeners[event].push(listener);\n  };\n\n  off = (event, listener) => {\n    if (this.listeners[event]) {\n      this.listeners[event] = this.listeners[event].filter(\n        (fn) => fn !== listener\n      );\n    }\n  };\n\n  emit = (event, data) => {\n    if (this.listeners[event]) {\n      this.listeners[event].forEach((listener) => listener(data));\n    }\n  };\n}\n\nconst es = new EventSteamer();\n\nfunction handleData(data) {\n  console.log("Receiver data", data);\n}\n\nes.on("data", handleData);\nes.emit("data", "Sample Data"); //Receiver data Sample Data\nes.off("data", handleData);\nes.emit("data", "Another Data"); //No data as the handler has been removed\n'})}),"\n",(0,r.jsx)(n.h3,{id:"iterator-pattern",children:"Iterator Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-JavaScript",children:"const iterator = (collection) => {\n  let idx = 0;\n  return {\n    next: () =>\n      idx < collection.length\n        ? { value: collection[idx++], done: false }\n        : { done: true },\n  };\n};\n\nconst arr = [1, 2, 3, 4];\nconst iter = iterator(arr);\nconsole.log(iter.next()); //{ value: 1, done: false }\nconsole.log(iter.next()); //{ value: 2, done: false }\nconsole.log(iter.next()); //{ value: 3, done: false }\nconsole.log(iter.next()); //{ value: 4, done: false }\nconsole.log(iter.next()); //{ done: true }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"observer-pattern",children:"Observer Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-JavaScript",children:'class Observer {\n  update = (message) => {\n    console.log("Received Message", message);\n  };\n}\n\nclass Subject {\n  constructor() {\n    this.observers = [];\n  }\n\n  addObserver = (observer) => {\n    this.observers.push(observer);\n  };\n\n  removerObserver = (observer) => {\n    this.observers = this.observers.filter((obs) => obs !== observer);\n  };\n\n  notifyObservers = (message) => {\n    this.observers.forEach((obs) => obs.update(message));\n  };\n}\n\nconst subject = new Subject();\n\nconst ob1 = new Observer();\nconst ob2 = new Observer();\nsubject.addObserver(ob1);\nsubject.addObserver(ob2);\n\nsubject.notifyObservers("Hello Observers");\nsubject.removerObserver(ob1);\nsubject.notifyObservers("Observers, are you still there?");\n'})}),"\n",(0,r.jsx)(n.h3,{id:"pubsub-pattern",children:"PubSub Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-JavaScript",children:'class PubSub {\n  constructor() {\n    this.subscribers = {};\n  }\n\n  subscribe = (event, cb) => {\n    if (!this.subscribers[event]) {\n      this.subscribers[event] = [];\n    }\n    this.subscribers[event].push(cb);\n  };\n\n  publish = (event, data) => {\n    if (this.subscribers[event]) {\n      this.subscribers[event].forEach((cb) => cb(data));\n    }\n  };\n\n  unSubscribe = (event, callback) => {\n    if (this.subscribers[event]) {\n      this.subscribers[event] = this.subscribers[event].filter(\n        (cb) => cb !== callback\n      );\n    }\n  };\n}\n\nconst ps = new PubSub();\n\nfunction subscriber1(data) {\n  console.log("Subscriber1 recieved data", data);\n}\n\nfunction subscriber2(data) {\n  console.log("Subscriber2 recieved data", data);\n}\n\nps.subscribe("myEvent", subscriber1); //Subscriber1 recieved data Hello Love...\nps.subscribe("myEvent", subscriber2); //Subscriber2 recieved data Hello Love...\nps.publish("myEvent", "Hello Love...");\n\nps.unSubscribe("myEvent", subscriber1);\n\nps.publish("myEvent", "unsubscribed from s1"); //Subscriber2 recieved data unsubscribed from s1\n'})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);