"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7555],{2402:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(4848),o=n(8453);const a={title:"React TypeScript Context"},c=void 0,s={id:"tutorial-extras/ReactQuestions/ReactTypeScriptContext",title:"React TypeScript Context",description:"",source:"@site/docs/tutorial-extras/ReactQuestions/ReactTypeScriptContext.mdx",sourceDirName:"tutorial-extras/ReactQuestions",slug:"/tutorial-extras/ReactQuestions/ReactTypeScriptContext",permalink:"/js.enigma/docs/tutorial-extras/ReactQuestions/ReactTypeScriptContext",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/tutorial-extras/ReactQuestions/ReactTypeScriptContext.mdx",tags:[],version:"current",frontMatter:{title:"React TypeScript Context"},sidebar:"tutorialSidebar",previous:{title:"Jest & React Testing Library Cheatsheet",permalink:"/js.enigma/docs/tutorial-extras/ReactQuestions/ReactJestRTL"},next:{title:"Redux vs Context API",permalink:"/js.enigma/docs/tutorial-extras/ReactQuestions/ReduxVSContext"}},i={},p=[];function u(t){const e={code:"code",pre:"pre",...(0,o.R)(),...t.components};return(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-JavaScript",children:'import * as React from "react";\r\n\r\ninterface Todo {\r\n  id: number;\r\n  text: string;\r\n}\r\n\r\ninterface AppState {\r\n  todos: Todo[];\r\n}\r\n\r\ntype SetAppState = React.Dispatch<React.SetStateAction<AppState>>;\r\n\r\nconst AppContext = React.createContext<\r\n  | {\r\n      appState: AppState;\r\n      setAppState: SetAppState;\r\n    }\r\n  | undefined\r\n>(undefined);\r\n\r\ninterface AppProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport default function AppProvider({ children }: AppProviderProps) {\r\n  const [appState, setAppState] = React.useState<AppState>({\r\n    todos: [{ id: 1, text: "Walk the dog" }],\r\n  });\r\n\r\n  const value = React.useMemo(() => ({ appState, setAppState }), [appState]);\r\n\r\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\r\n}\r\n\r\nexport function useAppContext() {\r\n  const context = React.useContext(AppContext);\r\n  if (context === undefined) {\r\n    throw new Error("useAppContext must be used within an AppProvider");\r\n  }\r\n  return context;\r\n}\n'})})}function d(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(u,{...t})}):u(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>c,x:()=>s});var r=n(6540);const o={},a=r.createContext(o);function c(t){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:c(t.components),r.createElement(a.Provider,{value:e},t.children)}}}]);