"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[44157],{18635:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=i(74848),s=i(28453);const l={},t="DSA Interview Preparation 2025",o={id:"DSA/DSA Interview Preparation 2025/DSA Interview Preparation 2025",title:"DSA Interview Preparation 2025",description:"\ud83c\udfaf Strategy to Crack 80-90% Interviews",source:"@site/docs/DSA/DSA Interview Preparation 2025/DSA Interview Preparation 2025.mdx",sourceDirName:"DSA/DSA Interview Preparation 2025",slug:"/DSA/DSA Interview Preparation 2025/",permalink:"/docs/DSA/DSA Interview Preparation 2025/",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/DSA/DSA Interview Preparation 2025/DSA Interview Preparation 2025.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DSA Interview Preparation 2025",permalink:"/docs/category/dsa-interview-preparation-2025"},next:{title:"DSA with Java",permalink:"/docs/category/dsa-with-java"}},d={},c=[{value:"\ud83c\udfaf Strategy to Crack 80-90% Interviews",id:"-strategy-to-crack-80-90-interviews",level:2},{value:"\ud83d\udcca Coverage Statistics",id:"-coverage-statistics",level:2},{value:"1\ufe0f\u20e3 Arrays &amp; Strings (25 Problems) \ud83d\udd34",id:"1\ufe0f\u20e3-arrays--strings-25-problems-",level:2},{value:"Must-Do (Core)",id:"must-do-core",level:3},{value:"Important",id:"important",level:3},{value:"Nice to Have",id:"nice-to-have",level:3},{value:"2\ufe0f\u20e3 Two Pointers (12 Problems) \ud83d\udd34",id:"2\ufe0f\u20e3-two-pointers-12-problems-",level:2},{value:"Must-Do",id:"must-do",level:3},{value:"Important",id:"important-1",level:3},{value:"Nice to Have",id:"nice-to-have-1",level:3},{value:"3\ufe0f\u20e3 Sliding Window (10 Problems) \ud83d\udd34",id:"3\ufe0f\u20e3-sliding-window-10-problems-",level:2},{value:"Must-Do",id:"must-do-1",level:3},{value:"Important",id:"important-2",level:3},{value:"Nice to Have",id:"nice-to-have-2",level:3},{value:"4\ufe0f\u20e3 Hash Tables (12 Problems) \ud83d\udd34",id:"4\ufe0f\u20e3-hash-tables-12-problems-",level:2},{value:"Must-Do",id:"must-do-2",level:3},{value:"Important",id:"important-3",level:3},{value:"Nice to Have",id:"nice-to-have-3",level:3},{value:"5\ufe0f\u20e3 Binary Search (10 Problems) \ud83d\udfe1",id:"5\ufe0f\u20e3-binary-search-10-problems-",level:2},{value:"Must-Do",id:"must-do-3",level:3},{value:"Important",id:"important-4",level:3},{value:"Nice to Have",id:"nice-to-have-4",level:3},{value:"6\ufe0f\u20e3 Linked Lists (10 Problems) \ud83d\udfe1",id:"6\ufe0f\u20e3-linked-lists-10-problems-",level:2},{value:"Must-Do",id:"must-do-4",level:3},{value:"Important",id:"important-5",level:3},{value:"7\ufe0f\u20e3 Trees &amp; Binary Search Trees (15 Problems) \ud83d\udd34",id:"7\ufe0f\u20e3-trees--binary-search-trees-15-problems-",level:2},{value:"Must-Do",id:"must-do-5",level:3},{value:"Important",id:"important-6",level:3},{value:"Nice to Have",id:"nice-to-have-5",level:3},{value:"8\ufe0f\u20e3 Graphs (12 Problems) \ud83d\udfe1",id:"8\ufe0f\u20e3-graphs-12-problems-",level:2},{value:"Must-Do",id:"must-do-6",level:3},{value:"Important",id:"important-7",level:3},{value:"Nice to Have",id:"nice-to-have-6",level:3},{value:"9\ufe0f\u20e3 Dynamic Programming (22 Problems) \ud83d\udd34",id:"9\ufe0f\u20e3-dynamic-programming-22-problems-",level:2},{value:"1D DP (Must-Do)",id:"1d-dp-must-do",level:3},{value:"2D DP (Important)",id:"2d-dp-important",level:3},{value:"Advanced (Nice to Have)",id:"advanced-nice-to-have",level:3},{value:"\ud83d\udd1f Backtracking (8 Problems) \ud83d\udfe2",id:"-backtracking-8-problems-",level:2},{value:"Must-Do",id:"must-do-7",level:3},{value:"Important",id:"important-8",level:3},{value:"1\ufe0f\u20e31\ufe0f\u20e3 Heaps / Priority Queue (12 Problems) \ud83d\udd34",id:"1\ufe0f\u20e31\ufe0f\u20e3-heaps--priority-queue-12-problems-",level:2},{value:"Must-Do (Top K / Kth Largest/Smallest)",id:"must-do-top-k--kth-largestsmallest",level:3},{value:"Important",id:"important-9",level:3},{value:"Nice to Have",id:"nice-to-have-7",level:3},{value:"1\ufe0f\u20e32\ufe0f\u20e3 Stack &amp; Queue (10 Problems) \ud83d\udfe1",id:"1\ufe0f\u20e32\ufe0f\u20e3-stack--queue-10-problems-",level:2},{value:"Must-Do",id:"must-do-8",level:3},{value:"Important",id:"important-10",level:3},{value:"1\ufe0f\u20e33\ufe0f\u20e3 Trie (Prefix Tree) (8 Problems) \ud83d\udfe1",id:"1\ufe0f\u20e33\ufe0f\u20e3-trie-prefix-tree-8-problems-",level:2},{value:"Must-Do",id:"must-do-9",level:3},{value:"Important",id:"important-11",level:3},{value:"Nice to Have",id:"nice-to-have-8",level:3},{value:"1\ufe0f\u20e34\ufe0f\u20e3 Intervals (10 Problems) \ud83d\udd34",id:"1\ufe0f\u20e34\ufe0f\u20e3-intervals-10-problems-",level:2},{value:"Must-Do",id:"must-do-10",level:3},{value:"Important",id:"important-12",level:3},{value:"Nice to Have",id:"nice-to-have-9",level:3},{value:"1\ufe0f\u20e35\ufe0f\u20e3 Bit Manipulation (6 Problems) \ud83d\udfe2",id:"1\ufe0f\u20e35\ufe0f\u20e3-bit-manipulation-6-problems-",level:2},{value:"Must-Do",id:"must-do-11",level:3},{value:"Important",id:"important-13",level:3},{value:"\ud83c\udfaf Study Plan (10-12 Weeks)",id:"-study-plan-10-12-weeks",level:2},{value:"Week 1-2: Arrays &amp; Fundamentals",id:"week-1-2-arrays--fundamentals",level:3},{value:"Week 3-4: Intermediate Patterns",id:"week-3-4-intermediate-patterns",level:3},{value:"Week 5-6: Data Structures",id:"week-5-6-data-structures",level:3},{value:"Week 7-8: Advanced Topics",id:"week-7-8-advanced-topics",level:3},{value:"Week 9-10: Dynamic Programming",id:"week-9-10-dynamic-programming",level:3},{value:"Week 11-12: Consolidation",id:"week-11-12-consolidation",level:3},{value:"\ud83d\udca1 Pro Tips for Success",id:"-pro-tips-for-success",level:2},{value:"1. <strong>Pattern Recognition Over Memorization</strong>",id:"1-pattern-recognition-over-memorization",level:3},{value:"2. <strong>Master &quot;Top K&quot; and &quot;Kth Largest/Smallest&quot; Problems</strong>",id:"2-master-top-k-and-kth-largestsmallest-problems",level:3},{value:"3. <strong>Trie Problems Are Gold</strong>",id:"3-trie-problems-are-gold",level:3},{value:"4. <strong>Interval Problems Have Patterns</strong>",id:"4-interval-problems-have-patterns",level:3},{value:"5. <strong>Time Complexity First</strong>",id:"5-time-complexity-first",level:3},{value:"6. <strong>Practice Articulation</strong>",id:"6-practice-articulation",level:3},{value:"7. <strong>Quality Over Quantity</strong>",id:"7-quality-over-quantity",level:3},{value:"8. <strong>Company-Specific Focus</strong>",id:"8-company-specific-focus",level:3},{value:"\ud83d\udcca Difficulty Distribution",id:"-difficulty-distribution",level:2},{value:"\ud83d\udd17 Resources",id:"-resources",level:2},{value:"Practice Platforms",id:"practice-platforms",level:3},{value:"Pattern Learning",id:"pattern-learning",level:3},{value:"Video Explanations",id:"video-explanations",level:3},{value:"Cheat Sheets &amp; References",id:"cheat-sheets--references",level:3},{value:"\u26a1 Quick Reference: Time Complexities",id:"-quick-reference-time-complexities",level:2},{value:"Common Data Structure Operations",id:"common-data-structure-operations",level:3},{value:"Common Algorithm Patterns",id:"common-algorithm-patterns",level:3},{value:"\ud83c\udf93 Interview Day Checklist",id:"-interview-day-checklist",level:2},{value:"Day Before Interview",id:"day-before-interview",level:3},{value:"Interview Day Morning",id:"interview-day-morning",level:3},{value:"During Interview",id:"during-interview",level:3},{value:"Example Clarifying Questions",id:"example-clarifying-questions",level:3},{value:"\ud83d\udd25 Most Frequently Asked Problem Types (2024-2025)",id:"-most-frequently-asked-problem-types-2024-2025",level:2},{value:"1. <strong>Top K / Kth Largest/Smallest</strong> (\ud83d\udd25\ud83d\udd25\ud83d\udd25)",id:"1-top-k--kth-largestsmallest-",level:3},{value:"2. <strong>Sliding Window</strong> (\ud83d\udd25\ud83d\udd25\ud83d\udd25)",id:"2-sliding-window-",level:3},{value:"3. <strong>Two Pointers</strong> (\ud83d\udd25\ud83d\udd25)",id:"3-two-pointers-",level:3},{value:"4. <strong>Tree Traversals</strong> (\ud83d\udd25\ud83d\udd25\ud83d\udd25)",id:"4-tree-traversals-",level:3},{value:"5. <strong>Dynamic Programming</strong> (\ud83d\udd25\ud83d\udd25)",id:"5-dynamic-programming-",level:3},{value:"6. <strong>Intervals</strong> (\ud83d\udd25\ud83d\udd25)",id:"6-intervals-",level:3},{value:"7. <strong>Graph Problems</strong> (\ud83d\udd25\ud83d\udd25)",id:"7-graph-problems-",level:3},{value:"8. <strong>Trie</strong> (\ud83d\udd25)",id:"8-trie-",level:3},{value:"\ud83c\udfc6 Company-Specific Preferences",id:"-company-specific-preferences",level:2},{value:"Google",id:"google",level:3},{value:"Amazon",id:"amazon",level:3},{value:"Meta (Facebook)",id:"meta-facebook",level:3},{value:"Microsoft",id:"microsoft",level:3},{value:"Apple",id:"apple",level:3},{value:"\ud83d\udcdd Problem-Solving Framework (UMPIRE Method)",id:"-problem-solving-framework-umpire-method",level:2},{value:"U - Understand",id:"u---understand",level:3},{value:"M - Match",id:"m---match",level:3},{value:"P - Plan",id:"p---plan",level:3},{value:"I - Implement",id:"i---implement",level:3},{value:"R - Review",id:"r---review",level:3},{value:"E - Evaluate",id:"e---evaluate",level:3},{value:"\ud83c\udfaf Final Priority List (If Short on Time)",id:"-final-priority-list-if-short-on-time",level:2},{value:"Week 1 (20 problems)",id:"week-1-20-problems",level:3},{value:"Week 2 (20 problems)",id:"week-2-20-problems",level:3},{value:"Week 3 (10 problems - Review + Hard)",id:"week-3-10-problems---review--hard",level:3},{value:"\ud83d\ude80 Success Metrics",id:"-success-metrics",level:2},{value:"Beginner (0-2 months)",id:"beginner-0-2-months",level:3},{value:"Intermediate (2-4 months)",id:"intermediate-2-4-months",level:3},{value:"Advanced (4-6 months)",id:"advanced-4-6-months",level:3},{value:"Interview-Ready (6+ months)",id:"interview-ready-6-months",level:3},{value:"\ud83d\udcaa Motivation &amp; Mindset",id:"-motivation--mindset",level:2},{value:"Remember:",id:"remember",level:3},{value:"When Stuck:",id:"when-stuck",level:3},{value:"Growth Mindset:",id:"growth-mindset",level:3},{value:"\ud83c\udf8a Final Thoughts",id:"-final-thoughts",level:2},{value:"\ud83d\udcc5 30-Day Emergency Plan (For Urgent Interviews)",id:"-30-day-emergency-plan-for-urgent-interviews",level:2},{value:"Week 1 (Arrays, Strings, Two Pointers)",id:"week-1-arrays-strings-two-pointers",level:3},{value:"Week 2 (Trees, Binary Search)",id:"week-2-trees-binary-search",level:3},{value:"Week 3 (DP, Graphs, Heaps)",id:"week-3-dp-graphs-heaps",level:3},{value:"Week 4 (Review + Mock Interviews)",id:"week-4-review--mock-interviews",level:3},{value:"\ud83d\udcda Additional Resources",id:"-additional-resources",level:2},{value:"Books",id:"books",level:3},{value:"Courses",id:"courses",level:3},{value:"Community",id:"community",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"dsa-interview-preparation-2025",children:"DSA Interview Preparation 2025"})}),"\n",(0,r.jsx)(n.h2,{id:"-strategy-to-crack-80-90-interviews",children:"\ud83c\udfaf Strategy to Crack 80-90% Interviews"}),"\n",(0,r.jsxs)(n.p,{children:["This curated list covers ",(0,r.jsx)(n.strong,{children:"180 problems"})," across key patterns that appear in 80-90% of coding interviews at FAANG and top tech companies. Focus on ",(0,r.jsx)(n.strong,{children:"understanding patterns"})," rather than memorizing solutions."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-coverage-statistics",children:"\ud83d\udcca Coverage Statistics"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Category"}),(0,r.jsx)(n.th,{children:"Problems"}),(0,r.jsx)(n.th,{children:"Priority"}),(0,r.jsx)(n.th,{children:"Time to Master"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Arrays & Strings"}),(0,r.jsx)(n.td,{children:"25"}),(0,r.jsx)(n.td,{children:"\ud83d\udd34 Critical"}),(0,r.jsx)(n.td,{children:"2 weeks"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Two Pointers"}),(0,r.jsx)(n.td,{children:"12"}),(0,r.jsx)(n.td,{children:"\ud83d\udd34 Critical"}),(0,r.jsx)(n.td,{children:"1 week"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Sliding Window"}),(0,r.jsx)(n.td,{children:"10"}),(0,r.jsx)(n.td,{children:"\ud83d\udd34 Critical"}),(0,r.jsx)(n.td,{children:"1 week"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Hash Tables"}),(0,r.jsx)(n.td,{children:"12"}),(0,r.jsx)(n.td,{children:"\ud83d\udd34 Critical"}),(0,r.jsx)(n.td,{children:"1 week"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Binary Search"}),(0,r.jsx)(n.td,{children:"10"}),(0,r.jsx)(n.td,{children:"\ud83d\udfe1 High"}),(0,r.jsx)(n.td,{children:"1 week"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Linked Lists"}),(0,r.jsx)(n.td,{children:"10"}),(0,r.jsx)(n.td,{children:"\ud83d\udfe1 High"}),(0,r.jsx)(n.td,{children:"1 week"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Trees & BST"}),(0,r.jsx)(n.td,{children:"15"}),(0,r.jsx)(n.td,{children:"\ud83d\udd34 Critical"}),(0,r.jsx)(n.td,{children:"2 weeks"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Graphs"}),(0,r.jsx)(n.td,{children:"12"}),(0,r.jsx)(n.td,{children:"\ud83d\udfe1 High"}),(0,r.jsx)(n.td,{children:"1.5 weeks"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Dynamic Programming"}),(0,r.jsx)(n.td,{children:"22"}),(0,r.jsx)(n.td,{children:"\ud83d\udd34 Critical"}),(0,r.jsx)(n.td,{children:"3 weeks"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Backtracking"}),(0,r.jsx)(n.td,{children:"8"}),(0,r.jsx)(n.td,{children:"\ud83d\udfe2 Medium"}),(0,r.jsx)(n.td,{children:"1 week"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Heaps/Priority Queue"}),(0,r.jsx)(n.td,{children:"12"}),(0,r.jsx)(n.td,{children:"\ud83d\udd34 Critical"}),(0,r.jsx)(n.td,{children:"1 week"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Stack & Queue"}),(0,r.jsx)(n.td,{children:"10"}),(0,r.jsx)(n.td,{children:"\ud83d\udfe1 High"}),(0,r.jsx)(n.td,{children:"1 week"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Trie"}),(0,r.jsx)(n.td,{children:"8"}),(0,r.jsx)(n.td,{children:"\ud83d\udfe1 High"}),(0,r.jsx)(n.td,{children:"1 week"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Intervals"}),(0,r.jsx)(n.td,{children:"10"}),(0,r.jsx)(n.td,{children:"\ud83d\udd34 Critical"}),(0,r.jsx)(n.td,{children:"1 week"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Bit Manipulation"}),(0,r.jsx)(n.td,{children:"6"}),(0,r.jsx)(n.td,{children:"\ud83d\udfe2 Medium"}),(0,r.jsx)(n.td,{children:"3 days"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Total Time"}),": 10-12 weeks with consistent practice (2-3 hours/day)"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1\ufe0f\u20e3-arrays--strings-25-problems-",children:"1\ufe0f\u20e3 Arrays & Strings (25 Problems) \ud83d\udd34"}),"\n",(0,r.jsx)(n.h3,{id:"must-do-core",children:"Must-Do (Core)"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/two-sum/",children:"Two Sum"})," - Hash map basics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/",children:"Best Time to Buy and Sell Stock"})," - Single pass optimization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/contains-duplicate/",children:"Contains Duplicate"})," - Set usage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/product-of-array-except-self/",children:"Product of Array Except Self"})," - Prefix/suffix arrays"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/maximum-subarray/",children:"Maximum Subarray"})," (Kadane's Algorithm) - DP introduction"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/maximum-product-subarray/",children:"Maximum Product Subarray"})," - DP variation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/",children:"Find Minimum in Rotated Sorted Array"})," - Modified binary search"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/search-in-rotated-sorted-array/",children:"Search in Rotated Sorted Array"})," - Binary search variation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/container-with-most-water/",children:"Container With Most Water"})," - Two pointers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/3sum/",children:"3Sum"})," - Two pointers + sorting"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"important",children:"Important"}),"\n",(0,r.jsxs)(n.ol,{start:"11",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/longest-substring-without-repeating-characters/",children:"Longest Substring Without Repeating Characters"})," - Sliding window"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/minimum-window-substring/",children:"Minimum Window Substring"})," - Sliding window advanced"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/valid-anagram/",children:"Valid Anagram"})," - Hash map"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/group-anagrams/",children:"Group Anagrams"})," - Hash map + sorting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/longest-palindromic-substring/",children:"Longest Palindromic Substring"})," - Expand from center"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/encode-and-decode-strings/",children:"Encode and Decode Strings"})," (Premium) - String manipulation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/rotate-image/",children:"Rotate Image"})," - Matrix manipulation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/spiral-matrix/",children:"Spiral Matrix"})," - Matrix traversal"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/set-matrix-zeroes/",children:"Set Matrix Zeroes"})," - In-place modification"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/word-search/",children:"Word Search"})," - Backtracking on matrix"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"nice-to-have",children:"Nice to Have"}),"\n",(0,r.jsxs)(n.ol,{start:"21",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/missing-number/",children:"Missing Number"})," - XOR/Math trick"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/",children:"Find All Numbers Disappeared in Array"})," - Index marking"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/next-permutation/",children:"Next Permutation"})," - Array manipulation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/string-to-integer-atoi/",children:"String to Integer (atoi)"})," - String parsing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/longest-common-prefix/",children:"Longest Common Prefix"})," - String comparison"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Patterns"}),": Two pointers, sliding window, prefix sums, Kadane's algorithm"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2\ufe0f\u20e3-two-pointers-12-problems-",children:"2\ufe0f\u20e3 Two Pointers (12 Problems) \ud83d\udd34"}),"\n",(0,r.jsx)(n.h3,{id:"must-do",children:"Must-Do"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/valid-palindrome/",children:"Valid Palindrome"})," - Basic two pointers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/",children:"Two Sum II - Input Array Is Sorted"})," - Two pointers on sorted array"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/3sum/",children:"3Sum"})," - Two pointers with loop"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/container-with-most-water/",children:"Container With Most Water"})," - Greedy two pointers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/remove-duplicates-from-sorted-array/",children:"Remove Duplicates from Sorted Array"})," - In-place modification"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"important-1",children:"Important"}),"\n",(0,r.jsxs)(n.ol,{start:"6",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/remove-nth-node-from-end-of-list/",children:"Remove Nth Node From End of List"})," - Fast/slow pointers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/linked-list-cycle/",children:"Linked List Cycle"})," - Fast/slow pointers (Floyd's)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/valid-palindrome-ii/",children:"Valid Palindrome II"})," - Two pointers with modification"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/move-zeroes/",children:"Move Zeroes"})," - Two pointers swap"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/sort-colors/",children:"Sort Colors"})," - Dutch National Flag"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"nice-to-have-1",children:"Nice to Have"}),"\n",(0,r.jsxs)(n.ol,{start:"11",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/partition-labels/",children:"Partition Labels"})," - Greedy + two pointers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/backspace-string-compare/",children:"Backspace String Compare"})," - Two pointers from end"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Patterns"}),": Fast/slow pointers, left/right pointers, collision technique"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3\ufe0f\u20e3-sliding-window-10-problems-",children:"3\ufe0f\u20e3 Sliding Window (10 Problems) \ud83d\udd34"}),"\n",(0,r.jsx)(n.h3,{id:"must-do-1",children:"Must-Do"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/maximum-average-subarray-i/",children:"Maximum Average Subarray I"})," - Fixed size window"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/longest-substring-without-repeating-characters/",children:"Longest Substring Without Repeating Characters"})," - Variable window"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/minimum-window-substring/",children:"Minimum Window Substring"})," - Complex variable window"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/longest-repeating-character-replacement/",children:"Longest Repeating Character Replacement"})," - Window with condition"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/permutation-in-string/",children:"Permutation in String"})," - Fixed window pattern matching"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"important-2",children:"Important"}),"\n",(0,r.jsxs)(n.ol,{start:"6",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/find-all-anagrams-in-a-string/",children:"Find All Anagrams in a String"})," - Fixed window + hash map"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/longest-substring-with-at-most-k-distinct-characters/",children:"Longest Substring with At Most K Distinct Characters"})," (Premium) - Variable window"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/fruit-into-baskets/",children:"Fruit Into Baskets"})," - At most 2 distinct"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/minimum-size-subarray-sum/",children:"Minimum Size Subarray Sum"})," - Variable window with target"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"nice-to-have-2",children:"Nice to Have"}),"\n",(0,r.jsxs)(n.ol,{start:"10",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/sliding-window-maximum/",children:"Sliding Window Maximum"})," - Deque optimization"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Patterns"}),": Fixed window, variable window, shrinking/expanding technique"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"4\ufe0f\u20e3-hash-tables-12-problems-",children:"4\ufe0f\u20e3 Hash Tables (12 Problems) \ud83d\udd34"}),"\n",(0,r.jsx)(n.h3,{id:"must-do-2",children:"Must-Do"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/two-sum/",children:"Two Sum"})," - Basic hash map"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/group-anagrams/",children:"Group Anagrams"})," - Hash map with key transformation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/top-k-frequent-elements/",children:"Top K Frequent Elements"})," - Hash map + heap/bucket sort"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/valid-anagram/",children:"Valid Anagram"})," - Frequency map"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/ransom-note/",children:"Ransom Note"})," - Character counting"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"important-3",children:"Important"}),"\n",(0,r.jsxs)(n.ol,{start:"6",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/longest-consecutive-sequence/",children:"Longest Consecutive Sequence"})," - Hash set O(n)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/subarray-sum-equals-k/",children:"Subarray Sum Equals K"})," - Prefix sum + hash map"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/4sum-ii/",children:"4Sum II"})," - Multiple hash maps"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/isomorphic-strings/",children:"Isomorphic Strings"})," - Bidirectional mapping"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/word-pattern/",children:"Word Pattern"})," - Hash map pattern matching"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"nice-to-have-3",children:"Nice to Have"}),"\n",(0,r.jsxs)(n.ol,{start:"11",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/design-hashmap/",children:"Design HashMap"})," - Implementation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/lru-cache/",children:"LRU Cache"})," - Hash map + doubly linked list"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Patterns"}),": Frequency counting, prefix sums, bidirectional mappings"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"5\ufe0f\u20e3-binary-search-10-problems-",children:"5\ufe0f\u20e3 Binary Search (10 Problems) \ud83d\udfe1"}),"\n",(0,r.jsx)(n.h3,{id:"must-do-3",children:"Must-Do"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/binary-search/",children:"Binary Search"})," - Template"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/search-in-rotated-sorted-array/",children:"Search in Rotated Sorted Array"})," - Modified binary search"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/",children:"Find Minimum in Rotated Sorted Array"})," - Peak finding"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/search-a-2d-matrix/",children:"Search a 2D Matrix"})," - 2D binary search"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/koko-eating-bananas/",children:"Koko Eating Bananas"})," - Binary search on answer"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"important-4",children:"Important"}),"\n",(0,r.jsxs)(n.ol,{start:"6",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/",children:"Find First and Last Position of Element in Sorted Array"})," - Binary search boundaries"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/search-insert-position/",children:"Search Insert Position"})," - Lower bound"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/valid-perfect-square/",children:"Valid Perfect Square"})," - Math + binary search"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/find-peak-element/",children:"Find Peak Element"})," - Peak finding"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"nice-to-have-4",children:"Nice to Have"}),"\n",(0,r.jsxs)(n.ol,{start:"10",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/median-of-two-sorted-arrays/",children:"Median of Two Sorted Arrays"})," - Advanced binary search"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Patterns"}),": Classic binary search, search on answer space, boundary conditions"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"6\ufe0f\u20e3-linked-lists-10-problems-",children:"6\ufe0f\u20e3 Linked Lists (10 Problems) \ud83d\udfe1"}),"\n",(0,r.jsx)(n.h3,{id:"must-do-4",children:"Must-Do"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/reverse-linked-list/",children:"Reverse Linked List"})," - Iterative and recursive"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/merge-two-sorted-lists/",children:"Merge Two Sorted Lists"})," - Basic merge"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/linked-list-cycle/",children:"Linked List Cycle"})," - Fast/slow pointers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/remove-nth-node-from-end-of-list/",children:"Remove Nth Node From End of List"})," - Two pointers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/reorder-list/",children:"Reorder List"})," - Multiple techniques combined"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"important-5",children:"Important"}),"\n",(0,r.jsxs)(n.ol,{start:"6",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/middle-of-the-linked-list/",children:"Middle of the Linked List"})," - Fast/slow pointers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/palindrome-linked-list/",children:"Palindrome Linked List"})," - Reverse + compare"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/merge-k-sorted-lists/",children:"Merge K Sorted Lists"})," - Heap/divide & conquer"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/add-two-numbers/",children:"Add Two Numbers"})," - Linked list arithmetic"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/copy-list-with-random-pointer/",children:"Copy List with Random Pointer"})," - Hash map for deep copy"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Patterns"}),": Fast/slow pointers, dummy nodes, in-place reversal"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"7\ufe0f\u20e3-trees--binary-search-trees-15-problems-",children:"7\ufe0f\u20e3 Trees & Binary Search Trees (15 Problems) \ud83d\udd34"}),"\n",(0,r.jsx)(n.h3,{id:"must-do-5",children:"Must-Do"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/maximum-depth-of-binary-tree/",children:"Maximum Depth of Binary Tree"})," - Basic recursion"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/same-tree/",children:"Same Tree"})," - Tree comparison"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/invert-binary-tree/",children:"Invert Binary Tree"})," - Tree manipulation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/binary-tree-level-order-traversal/",children:"Binary Tree Level Order Traversal"})," - BFS"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/validate-binary-search-tree/",children:"Validate Binary Search Tree"})," - BST property"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/",children:"Lowest Common Ancestor of a Binary Search Tree"})," - BST traversal"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/subtree-of-another-tree/",children:"Subtree of Another Tree"})," - Tree matching"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"important-6",children:"Important"}),"\n",(0,r.jsxs)(n.ol,{start:"8",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst/",children:"Kth Smallest Element in a BST"})," - Inorder traversal"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/",children:"Construct Binary Tree from Preorder and Inorder Traversal"})," - Tree construction"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/binary-tree-maximum-path-sum/",children:"Binary Tree Maximum Path Sum"})," - Complex recursion"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree/",children:"Serialize and Deserialize Binary Tree"})," - Tree encoding"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree/",children:"Count Good Nodes in Binary Tree"})," - Tree traversal with state"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"nice-to-have-5",children:"Nice to Have"}),"\n",(0,r.jsxs)(n.ol,{start:"13",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/binary-tree-right-side-view/",children:"Binary Tree Right Side View"})," - Level order variant"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/diameter-of-binary-tree/",children:"Diameter of Binary Tree"})," - Recursive depth"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/",children:"Lowest Common Ancestor of a Binary Tree"})," - LCA in general tree"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Patterns"}),": DFS, BFS, recursion with state, tree properties"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"8\ufe0f\u20e3-graphs-12-problems-",children:"8\ufe0f\u20e3 Graphs (12 Problems) \ud83d\udfe1"}),"\n",(0,r.jsx)(n.h3,{id:"must-do-6",children:"Must-Do"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/number-of-islands/",children:"Number of Islands"})," - DFS/BFS on grid"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/clone-graph/",children:"Clone Graph"})," - Graph traversal + cloning"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/pacific-atlantic-water-flow/",children:"Pacific Atlantic Water Flow"})," - Multi-source DFS/BFS"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/course-schedule/",children:"Course Schedule"})," - Cycle detection (topological sort)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/course-schedule-ii/",children:"Course Schedule II"})," - Topological sort implementation"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"important-7",children:"Important"}),"\n",(0,r.jsxs)(n.ol,{start:"6",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/graph-valid-tree/",children:"Graph Valid Tree"})," (Premium) - Cycle detection + connectivity"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/",children:"Number of Connected Components in an Undirected Graph"})," (Premium) - Union-Find/DFS"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/word-ladder/",children:"Word Ladder"})," - BFS shortest path"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix/",children:"Longest Increasing Path in a Matrix"})," - DFS + memoization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/surrounded-regions/",children:"Surrounded Regions"})," - Boundary DFS/BFS"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"nice-to-have-6",children:"Nice to Have"}),"\n",(0,r.jsxs)(n.ol,{start:"11",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/network-delay-time/",children:"Network Delay Time"})," - Dijkstra's algorithm"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/cheapest-flights-within-k-stops/",children:"Cheapest Flights Within K Stops"})," - Modified Dijkstra/Bellman-Ford"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Patterns"}),": DFS, BFS, topological sort, Union-Find, shortest path"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"9\ufe0f\u20e3-dynamic-programming-22-problems-",children:"9\ufe0f\u20e3 Dynamic Programming (22 Problems) \ud83d\udd34"}),"\n",(0,r.jsx)(n.h3,{id:"1d-dp-must-do",children:"1D DP (Must-Do)"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/climbing-stairs/",children:"Climbing Stairs"})," - Basic DP introduction"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/house-robber/",children:"House Robber"})," - 1D DP with constraint"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/house-robber-ii/",children:"House Robber II"})," - Circular array DP"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/longest-increasing-subsequence/",children:"Longest Increasing Subsequence"})," - Classic LIS"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/word-break/",children:"Word Break"})," - String DP"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/coin-change/",children:"Coin Change"})," - Unbounded knapsack"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/maximum-product-subarray/",children:"Maximum Product Subarray"})," - State tracking DP"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/decode-ways/",children:"Decode Ways"})," - String decoding DP"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2d-dp-important",children:"2D DP (Important)"}),"\n",(0,r.jsxs)(n.ol,{start:"9",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/unique-paths/",children:"Unique Paths"})," - 2D grid DP"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/longest-common-subsequence/",children:"Longest Common Subsequence"})," - 2D string DP"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/edit-distance/",children:"Edit Distance"})," - String transformation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/",children:"Best Time to Buy and Sell Stock with Cooldown"})," - State machine DP"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/coin-change-2/",children:"Coin Change II"})," - Count combinations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/target-sum/",children:"Target Sum"})," - Subset sum variant"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/partition-equal-subset-sum/",children:"Partition Equal Subset Sum"})," - 0/1 knapsack"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/palindromic-substrings/",children:"Palindromic Substrings"})," - String DP"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/longest-palindromic-subsequence/",children:"Longest Palindromic Subsequence"})," - 2D DP"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"advanced-nice-to-have",children:"Advanced (Nice to Have)"}),"\n",(0,r.jsxs)(n.ol,{start:"18",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/regular-expression-matching/",children:"Regular Expression Matching"})," - Complex string DP"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/interleaving-string/",children:"Interleaving String"})," - 2D string DP"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/distinct-subsequences/",children:"Distinct Subsequences"})," - Counting DP"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/burst-balloons/",children:"Burst Balloons"})," - Interval DP"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/palindrome-partitioning-ii/",children:"Palindrome Partitioning II"})," - Partition DP"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Patterns"}),": 1D DP, 2D DP, knapsack, subsequences, state machines"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-backtracking-8-problems-",children:"\ud83d\udd1f Backtracking (8 Problems) \ud83d\udfe2"}),"\n",(0,r.jsx)(n.h3,{id:"must-do-7",children:"Must-Do"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/subsets/",children:"Subsets"})," - Power set generation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/permutations/",children:"Permutations"})," - All permutations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/combination-sum/",children:"Combination Sum"})," - Backtracking with reuse"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/word-search/",children:"Word Search"})," - 2D backtracking"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/palindrome-partitioning/",children:"Palindrome Partitioning"})," - String partitioning"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"important-8",children:"Important"}),"\n",(0,r.jsxs)(n.ol,{start:"6",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/letter-combinations-of-a-phone-number/",children:"Letter Combinations of a Phone Number"})," - String generation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/generate-parentheses/",children:"Generate Parentheses"})," - Valid parentheses"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/n-queens/",children:"N-Queens"})," - Classic backtracking"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Patterns"}),": DFS with backtracking, pruning, state restoration"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1\ufe0f\u20e31\ufe0f\u20e3-heaps--priority-queue-12-problems-",children:"1\ufe0f\u20e31\ufe0f\u20e3 Heaps / Priority Queue (12 Problems) \ud83d\udd34"}),"\n",(0,r.jsx)(n.h3,{id:"must-do-top-k--kth-largestsmallest",children:"Must-Do (Top K / Kth Largest/Smallest)"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/kth-largest-element-in-an-array/",children:"Kth Largest Element in an Array"})," - Quick select/heap"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/",children:"Kth Smallest Element in a Sorted Matrix"})," - Min heap"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/top-k-frequent-elements/",children:"Top K Frequent Elements"})," - Heap + hash map"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/k-closest-points-to-origin/",children:"K Closest Points to Origin"})," - Max heap distance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/find-k-pairs-with-smallest-sums/",children:"Find K Pairs with Smallest Sums"})," - Min heap pairs"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"important-9",children:"Important"}),"\n",(0,r.jsxs)(n.ol,{start:"6",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/find-median-from-data-stream/",children:"Find Median from Data Stream"})," - Two heaps (max + min)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/merge-k-sorted-lists/",children:"Merge K Sorted Lists"})," - Heap merge"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/task-scheduler/",children:"Task Scheduler"})," - Greedy + heap"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/reorganize-string/",children:"Reorganize String"})," - Greedy + max heap"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/ugly-number-ii/",children:"Ugly Number II"})," - Min heap generation"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"nice-to-have-7",children:"Nice to Have"}),"\n",(0,r.jsxs)(n.ol,{start:"11",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/meeting-rooms-ii/",children:"Meeting Rooms II"})," (Premium) - Min heap intervals"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/ipo/",children:"IPO"})," - Two heaps optimization"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Patterns"}),": Min/max heap, k-way merge, scheduling problems, median maintenance"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1\ufe0f\u20e32\ufe0f\u20e3-stack--queue-10-problems-",children:"1\ufe0f\u20e32\ufe0f\u20e3 Stack & Queue (10 Problems) \ud83d\udfe1"}),"\n",(0,r.jsx)(n.h3,{id:"must-do-8",children:"Must-Do"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/valid-parentheses/",children:"Valid Parentheses"})," - Stack basics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/min-stack/",children:"Min Stack"})," - Design problem"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/evaluate-reverse-polish-notation/",children:"Evaluate Reverse Polish Notation"})," - Stack evaluation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/daily-temperatures/",children:"Daily Temperatures"})," - Monotonic stack"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/largest-rectangle-in-histogram/",children:"Largest Rectangle in Histogram"})," - Monotonic stack advanced"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"important-10",children:"Important"}),"\n",(0,r.jsxs)(n.ol,{start:"6",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/implement-queue-using-stacks/",children:"Implement Queue using Stacks"})," - Design problem"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/decode-string/",children:"Decode String"})," - Nested stack"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/asteroid-collision/",children:"Asteroid Collision"})," - Stack simulation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/next-greater-element-i/",children:"Next Greater Element I"})," - Monotonic stack"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/trapping-rain-water/",children:"Trapping Rain Water"})," - Stack/Two pointers"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Patterns"}),": Monotonic stack, stack for parsing, simulation"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1\ufe0f\u20e33\ufe0f\u20e3-trie-prefix-tree-8-problems-",children:"1\ufe0f\u20e33\ufe0f\u20e3 Trie (Prefix Tree) (8 Problems) \ud83d\udfe1"}),"\n",(0,r.jsx)(n.h3,{id:"must-do-9",children:"Must-Do"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/implement-trie-prefix-tree/",children:"Implement Trie (Prefix Tree)"})," - Trie implementation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/design-add-and-search-words-data-structure/",children:"Design Add and Search Words Data Structure"})," - Trie with wildcards"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/word-search-ii/",children:"Word Search II"})," - Trie + backtracking"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/longest-word-in-dictionary/",children:"Longest Word in Dictionary"})," - Trie traversal"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"important-11",children:"Important"}),"\n",(0,r.jsxs)(n.ol,{start:"5",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/replace-words/",children:"Replace Words"})," - Trie prefix matching"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/implement-magic-dictionary/",children:"Implement Magic Dictionary"})," - Trie with modifications"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/word-squares/",children:"Word Squares"})," (Premium) - Trie backtracking"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"nice-to-have-8",children:"Nice to Have"}),"\n",(0,r.jsxs)(n.ol,{start:"8",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/palindrome-pairs/",children:"Palindrome Pairs"})," - Trie advanced"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Patterns"}),": Prefix matching, dictionary operations, auto-complete"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1\ufe0f\u20e34\ufe0f\u20e3-intervals-10-problems-",children:"1\ufe0f\u20e34\ufe0f\u20e3 Intervals (10 Problems) \ud83d\udd34"}),"\n",(0,r.jsx)(n.h3,{id:"must-do-10",children:"Must-Do"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/merge-intervals/",children:"Merge Intervals"})," - Basic interval merge"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/insert-interval/",children:"Insert Interval"})," - Interval insertion"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/non-overlapping-intervals/",children:"Non-overlapping Intervals"})," - Greedy intervals"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/meeting-rooms/",children:"Meeting Rooms"})," (Premium) - Simple overlap check"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/meeting-rooms-ii/",children:"Meeting Rooms II"})," (Premium) - Min heap intervals"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"important-12",children:"Important"}),"\n",(0,r.jsxs)(n.ol,{start:"6",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/interval-list-intersections/",children:"Interval List Intersections"})," - Two pointers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/",children:"Minimum Number of Arrows to Burst Balloons"})," - Greedy overlap"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/employee-free-time/",children:"Employee Free Time"})," (Premium) - Multiple intervals"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/my-calendar-i/",children:"My Calendar I"})," - Interval booking"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"nice-to-have-9",children:"Nice to Have"}),"\n",(0,r.jsxs)(n.ol,{start:"10",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/partition-labels/",children:"Partition Labels"})," - Interval partitioning"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Patterns"}),": Sorting intervals, greedy approach, sweep line, overlap detection"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1\ufe0f\u20e35\ufe0f\u20e3-bit-manipulation-6-problems-",children:"1\ufe0f\u20e35\ufe0f\u20e3 Bit Manipulation (6 Problems) \ud83d\udfe2"}),"\n",(0,r.jsx)(n.h3,{id:"must-do-11",children:"Must-Do"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/single-number/",children:"Single Number"})," - XOR basics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/number-of-1-bits/",children:"Number of 1 Bits"})," - Bit counting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/counting-bits/",children:"Counting Bits"})," - DP + bits"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/missing-number/",children:"Missing Number"})," - XOR trick"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"important-13",children:"Important"}),"\n",(0,r.jsxs)(n.ol,{start:"5",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/reverse-bits/",children:"Reverse Bits"})," - Bit manipulation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/sum-of-two-integers/",children:"Sum of Two Integers"})," - Bitwise addition"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Patterns"}),": XOR properties, bit masks, bitwise operations"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-study-plan-10-12-weeks",children:"\ud83c\udfaf Study Plan (10-12 Weeks)"}),"\n",(0,r.jsx)(n.h3,{id:"week-1-2-arrays--fundamentals",children:"Week 1-2: Arrays & Fundamentals"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Arrays & Strings (25 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Two Pointers (12 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Hash Tables (12 problems)"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Goal"}),": Master basic manipulation and pattern recognition"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"week-3-4-intermediate-patterns",children:"Week 3-4: Intermediate Patterns"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Sliding Window (10 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Binary Search (10 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Stack & Queue (10 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Bit Manipulation (6 problems)"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Goal"}),": Learn optimization techniques"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"week-5-6-data-structures",children:"Week 5-6: Data Structures"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Linked Lists (10 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Trees & BST (15 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Heaps (12 problems)"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Goal"}),": Master tree/graph traversals"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"week-7-8-advanced-topics",children:"Week 7-8: Advanced Topics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Graphs (12 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Trie (8 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Intervals (10 problems)"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Goal"}),": Learn complex data structures"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"week-9-10-dynamic-programming",children:"Week 9-10: Dynamic Programming"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Dynamic Programming (22 problems - focus on 15)"}),"\n",(0,r.jsx)(n.li,{children:"Backtracking (8 problems)"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Goal"}),": Master complex algorithmic thinking"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"week-11-12-consolidation",children:"Week 11-12: Consolidation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Remaining DP problems"}),"\n",(0,r.jsx)(n.li,{children:"Review all Top K/Kth problems"}),"\n",(0,r.jsx)(n.li,{children:"Mock interviews"}),"\n",(0,r.jsx)(n.li,{children:"Revision of difficult problems"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Goal"}),": Speed, accuracy, and confidence"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-pro-tips-for-success",children:"\ud83d\udca1 Pro Tips for Success"}),"\n",(0,r.jsxs)(n.h3,{id:"1-pattern-recognition-over-memorization",children:["1. ",(0,r.jsx)(n.strong,{children:"Pattern Recognition Over Memorization"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Understand WHY a solution works"}),"\n",(0,r.jsx)(n.li,{children:"Identify similar problems by pattern"}),"\n",(0,r.jsx)(n.li,{children:"Build a mental catalog of techniques"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"2-master-top-k-and-kth-largestsmallest-problems",children:["2. ",(0,r.jsx)(n.strong,{children:'Master "Top K" and "Kth Largest/Smallest" Problems'})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"These are extremely common in interviews"}),"\n",(0,r.jsx)(n.li,{children:"Use heap (priority queue) as first instinct"}),"\n",(0,r.jsx)(n.li,{children:"Know when to use min-heap vs max-heap"}),"\n",(0,r.jsx)(n.li,{children:"Practice quick-select for O(n) average case"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"3-trie-problems-are-gold",children:["3. ",(0,r.jsx)(n.strong,{children:"Trie Problems Are Gold"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Less common but HIGH impact when asked"}),"\n",(0,r.jsx)(n.li,{children:"Master the basic implementation first"}),"\n",(0,r.jsx)(n.li,{children:"Understand prefix vs suffix operations"}),"\n",(0,r.jsx)(n.li,{children:"Combine with backtracking for harder problems"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"4-interval-problems-have-patterns",children:["4. ",(0,r.jsx)(n.strong,{children:"Interval Problems Have Patterns"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Sort by start time (usually)"}),"\n",(0,r.jsx)(n.li,{children:"Use greedy approach (often)"}),"\n",(0,r.jsx)(n.li,{children:"Think about sweep line algorithm"}),"\n",(0,r.jsx)(n.li,{children:"Min heap for overlapping intervals"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"5-time-complexity-first",children:["5. ",(0,r.jsx)(n.strong,{children:"Time Complexity First"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Always analyze brute force first"}),"\n",(0,r.jsx)(n.li,{children:"Identify bottlenecks"}),"\n",(0,r.jsx)(n.li,{children:"Optimize step by step"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"6-practice-articulation",children:["6. ",(0,r.jsx)(n.strong,{children:"Practice Articulation"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Explain your thought process aloud"}),"\n",(0,r.jsx)(n.li,{children:"Practice with timer (45 minutes per problem)"}),"\n",(0,r.jsx)(n.li,{children:"Use mock interviews"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"7-quality-over-quantity",children:["7. ",(0,r.jsx)(n.strong,{children:"Quality Over Quantity"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Solve each problem 2-3 times over weeks"}),"\n",(0,r.jsx)(n.li,{children:"Understand all edge cases"}),"\n",(0,r.jsx)(n.li,{children:"Can you solve it in a different way?"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"8-company-specific-focus",children:["8. ",(0,r.jsx)(n.strong,{children:"Company-Specific Focus"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"FAANG"}),": Heavy on DP, graphs, Top K problems"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Microsoft/Amazon"}),": Trees, intervals, system design"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Google"}),": DP, graphs, complex problems"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Startups"}),": More practical, API design"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-difficulty-distribution",children:"\ud83d\udcca Difficulty Distribution"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Difficulty"}),(0,r.jsx)(n.th,{children:"Count"}),(0,r.jsx)(n.th,{children:"% of Total"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Easy"}),(0,r.jsx)(n.td,{children:"45"}),(0,r.jsx)(n.td,{children:"25%"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Medium"}),(0,r.jsx)(n.td,{children:"110"}),(0,r.jsx)(n.td,{children:"61%"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Hard"}),(0,r.jsx)(n.td,{children:"25"}),(0,r.jsx)(n.td,{children:"14%"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Recommendation"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Master all Easy + Medium = 86% coverage"}),"\n",(0,r.jsx)(n.li,{children:"Hard problems give you the edge for senior roles"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-resources",children:"\ud83d\udd17 Resources"}),"\n",(0,r.jsx)(n.h3,{id:"practice-platforms",children:"Practice Platforms"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/",children:"LeetCode"})," - Primary platform"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://neetcode.io/",children:"NeetCode"})," - Video explanations for most problems"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.algoexpert.io/",children:"AlgoExpert"})," - Structured curriculum"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.techinterviewhandbook.org/blind75",children:"Blind 75"})," - Essential subset"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"pattern-learning",children:"Pattern Learning"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://hackernoon.com/14-patterns-to-ace-any-coding-interview-question-c5bb3357f6ed",children:"14 Patterns to Ace Any Coding Interview"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.educative.io/courses/grokking-the-coding-interview",children:"Grokking the Coding Interview"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.techinterviewhandbook.org/",children:"Tech Interview Handbook"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://seanprashad.com/leetcode-patterns/",children:"Sean Prashad's LeetCode Patterns"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"video-explanations",children:"Video Explanations"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.youtube.com/c/NeetCode",children:"NeetCode YouTube"})," - Best explanations for most problems"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.youtube.com/c/BackToBackSWE",children:"Back To Back SWE"})," - Deep dives"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.youtube.com/c/KevinNaughtonJr",children:"Kevin Naughton Jr."})," - Quick solutions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.youtube.com/c/NickWhite",children:"Nick White"})," - Live coding"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.youtube.com/c/AbdulBari",children:"Abdul Bari"})," - Algorithm concepts"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"cheat-sheets--references",children:"Cheat Sheets & References"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.bigocheatsheet.com/",children:"BigO Cheat Sheet"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://visualgo.net/",children:"VisuAlgo"})," - Algorithm visualizations"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html",children:"Data Structure Visualizations"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://seanprashad.com/leetcode-patterns/",children:"LeetCode Patterns"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-quick-reference-time-complexities",children:"\u26a1 Quick Reference: Time Complexities"}),"\n",(0,r.jsx)(n.h3,{id:"common-data-structure-operations",children:"Common Data Structure Operations"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Data Structure"}),(0,r.jsx)(n.th,{children:"Access"}),(0,r.jsx)(n.th,{children:"Search"}),(0,r.jsx)(n.th,{children:"Insert"}),(0,r.jsx)(n.th,{children:"Delete"}),(0,r.jsx)(n.th,{children:"Space"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Array"}),(0,r.jsx)(n.td,{children:"O(1)"}),(0,r.jsx)(n.td,{children:"O(n)"}),(0,r.jsx)(n.td,{children:"O(n)"}),(0,r.jsx)(n.td,{children:"O(n)"}),(0,r.jsx)(n.td,{children:"O(n)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Stack"}),(0,r.jsx)(n.td,{children:"O(n)"}),(0,r.jsx)(n.td,{children:"O(n)"}),(0,r.jsx)(n.td,{children:"O(1)"}),(0,r.jsx)(n.td,{children:"O(1)"}),(0,r.jsx)(n.td,{children:"O(n)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Queue"}),(0,r.jsx)(n.td,{children:"O(n)"}),(0,r.jsx)(n.td,{children:"O(n)"}),(0,r.jsx)(n.td,{children:"O(1)"}),(0,r.jsx)(n.td,{children:"O(1)"}),(0,r.jsx)(n.td,{children:"O(n)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Singly-Linked List"}),(0,r.jsx)(n.td,{children:"O(n)"}),(0,r.jsx)(n.td,{children:"O(n)"}),(0,r.jsx)(n.td,{children:"O(1)"}),(0,r.jsx)(n.td,{children:"O(1)"}),(0,r.jsx)(n.td,{children:"O(n)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Doubly-Linked List"}),(0,r.jsx)(n.td,{children:"O(n)"}),(0,r.jsx)(n.td,{children:"O(n)"}),(0,r.jsx)(n.td,{children:"O(1)"}),(0,r.jsx)(n.td,{children:"O(1)"}),(0,r.jsx)(n.td,{children:"O(n)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Hash Table"}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"O(1)*"}),(0,r.jsx)(n.td,{children:"O(1)*"}),(0,r.jsx)(n.td,{children:"O(1)*"}),(0,r.jsx)(n.td,{children:"O(n)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Binary Search Tree"}),(0,r.jsx)(n.td,{children:"O(log n)*"}),(0,r.jsx)(n.td,{children:"O(log n)*"}),(0,r.jsx)(n.td,{children:"O(log n)*"}),(0,r.jsx)(n.td,{children:"O(log n)*"}),(0,r.jsx)(n.td,{children:"O(n)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Heap (Min/Max)"}),(0,r.jsx)(n.td,{children:"O(1)"}),(0,r.jsx)(n.td,{children:"O(n)"}),(0,r.jsx)(n.td,{children:"O(log n)"}),(0,r.jsx)(n.td,{children:"O(log n)"}),(0,r.jsx)(n.td,{children:"O(n)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Trie"}),(0,r.jsx)(n.td,{children:"O(k)"}),(0,r.jsx)(n.td,{children:"O(k)"}),(0,r.jsx)(n.td,{children:"O(k)"}),(0,r.jsx)(n.td,{children:"O(k)"}),(0,r.jsx)(n.td,{children:"O(n*k)"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"*Average case. Worst case may differ."}),"\n",(0,r.jsx)(n.h3,{id:"common-algorithm-patterns",children:"Common Algorithm Patterns"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Pattern: Two Pointers\nTime: O(n)\nSpace: O(1)\nUse: Sorted arrays, linked lists, palindromes\n\nPattern: Sliding Window\nTime: O(n)\nSpace: O(k) where k is window size\nUse: Substring problems, arrays with conditions\n\nPattern: Binary Search\nTime: O(log n)\nSpace: O(1)\nUse: Sorted arrays, search space reduction\n\nPattern: DFS/BFS\nTime: O(V + E)\nSpace: O(V)\nUse: Trees, graphs, connected components\n\nPattern: Dynamic Programming (1D)\nTime: O(n)\nSpace: O(n) or O(1) with optimization\nUse: Linear sequences with optimal substructure\n\nPattern: Dynamic Programming (2D)\nTime: O(n*m)\nSpace: O(n*m) or O(m) with optimization\nUse: String problems, grid problems\n\nPattern: Heap (Top K)\nTime: O(n log k)\nSpace: O(k)\nUse: K largest/smallest, priority scheduling\n\nPattern: Union-Find\nTime: O(\u03b1(n)) \u2248 O(1)\nSpace: O(n)\nUse: Connected components, cycle detection\n\nPattern: Topological Sort\nTime: O(V + E)\nSpace: O(V)\nUse: Course scheduling, dependency resolution\n\nPattern: Trie\nTime: O(k) where k is key length\nSpace: O(ALPHABET_SIZE * k * n)\nUse: Prefix matching, autocomplete\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-interview-day-checklist",children:"\ud83c\udf93 Interview Day Checklist"}),"\n",(0,r.jsx)(n.h3,{id:"day-before-interview",children:"Day Before Interview"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Review 5-10 easy problems (boost confidence)"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Practice explaining solutions aloud"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Review common patterns (two pointers, sliding window, etc.)"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Prepare questions to ask interviewer"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Get good sleep (8+ hours)"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Avoid learning new concepts"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"interview-day-morning",children:"Interview Day Morning"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Light breakfast"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Review one medium problem you solved before"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Test your setup (internet, webcam, mic)"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Have pen and paper ready"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Keep water nearby"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"during-interview",children:"During Interview"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Listen Carefully"})," (2 mins)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Take notes while they explain"}),"\n",(0,r.jsx)(n.li,{children:"Don't interrupt"}),"\n",(0,r.jsx)(n.li,{children:"Ask clarifying questions"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Clarify & Understand"})," (3-5 mins)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Restate the problem"}),"\n",(0,r.jsx)(n.li,{children:"Ask about constraints (array size, value ranges)"}),"\n",(0,r.jsx)(n.li,{children:"Ask about edge cases"}),"\n",(0,r.jsx)(n.li,{children:"Confirm input/output format"}),"\n",(0,r.jsx)(n.li,{children:"Ask about time/space requirements"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Brainstorm & Communicate"})," (5-7 mins)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Start with brute force approach"}),"\n",(0,r.jsx)(n.li,{children:"Explain time/space complexity"}),"\n",(0,r.jsx)(n.li,{children:"Discuss optimizations"}),"\n",(0,r.jsx)(n.li,{children:"Think aloud!"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Code"})," (20-25 mins)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Start with function signature"}),"\n",(0,r.jsx)(n.li,{children:"Use meaningful variable names"}),"\n",(0,r.jsx)(n.li,{children:"Write clean, readable code"}),"\n",(0,r.jsx)(n.li,{children:"Add comments for complex logic"}),"\n",(0,r.jsx)(n.li,{children:"Think aloud while coding"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Test"})," (5-8 mins)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Test with example from problem"}),"\n",(0,r.jsx)(n.li,{children:"Test edge cases (empty, null, single element)"}),"\n",(0,r.jsx)(n.li,{children:"Test large inputs mentally"}),"\n",(0,r.jsx)(n.li,{children:"Fix bugs if found"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Optimize"})," (if time permits)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Discuss better approaches"}),"\n",(0,r.jsx)(n.li,{children:"Space optimization"}),"\n",(0,r.jsx)(n.li,{children:"Time optimization"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-clarifying-questions",children:"Example Clarifying Questions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'"Can the input array be empty?"'}),"\n",(0,r.jsx)(n.li,{children:'"Are there any duplicate values?"'}),"\n",(0,r.jsx)(n.li,{children:'"What\'s the expected range of values?"'}),"\n",(0,r.jsx)(n.li,{children:'"Should I optimize for time or space?"'}),"\n",(0,r.jsx)(n.li,{children:'"Can I modify the input array?"'}),"\n",(0,r.jsx)(n.li,{children:'"Is the array sorted?"'}),"\n",(0,r.jsx)(n.li,{children:'"What should I return if no solution exists?"'}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-most-frequently-asked-problem-types-2024-2025",children:"\ud83d\udd25 Most Frequently Asked Problem Types (2024-2025)"}),"\n",(0,r.jsx)(n.p,{children:"Based on recent interview data:"}),"\n",(0,r.jsxs)(n.h3,{id:"1-top-k--kth-largestsmallest-",children:["1. ",(0,r.jsx)(n.strong,{children:"Top K / Kth Largest/Smallest"})," (\ud83d\udd25\ud83d\udd25\ud83d\udd25)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Appears in 30% of interviews"}),"\n",(0,r.jsx)(n.li,{children:"Master heap solutions"}),"\n",(0,r.jsx)(n.li,{children:"Know quick-select alternative"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"2-sliding-window-",children:["2. ",(0,r.jsx)(n.strong,{children:"Sliding Window"})," (\ud83d\udd25\ud83d\udd25\ud83d\udd25)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Appears in 25% of interviews"}),"\n",(0,r.jsx)(n.li,{children:"String and array problems"}),"\n",(0,r.jsx)(n.li,{children:"Fixed and variable window"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"3-two-pointers-",children:["3. ",(0,r.jsx)(n.strong,{children:"Two Pointers"})," (\ud83d\udd25\ud83d\udd25)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Appears in 20% of interviews"}),"\n",(0,r.jsx)(n.li,{children:"Usually combined with other patterns"}),"\n",(0,r.jsx)(n.li,{children:"Very common in phone screens"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"4-tree-traversals-",children:["4. ",(0,r.jsx)(n.strong,{children:"Tree Traversals"})," (\ud83d\udd25\ud83d\udd25\ud83d\udd25)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Appears in 35% of interviews"}),"\n",(0,r.jsx)(n.li,{children:"BFS, DFS, inorder, preorder, postorder"}),"\n",(0,r.jsx)(n.li,{children:"Almost guaranteed in onsite"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"5-dynamic-programming-",children:["5. ",(0,r.jsx)(n.strong,{children:"Dynamic Programming"})," (\ud83d\udd25\ud83d\udd25)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Appears in 20% of senior interviews"}),"\n",(0,r.jsx)(n.li,{children:"Less common in junior roles"}),"\n",(0,r.jsx)(n.li,{children:"High impact if asked"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"6-intervals-",children:["6. ",(0,r.jsx)(n.strong,{children:"Intervals"})," (\ud83d\udd25\ud83d\udd25)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Appears in 15% of interviews"}),"\n",(0,r.jsx)(n.li,{children:"Very common at Amazon, Microsoft"}),"\n",(0,r.jsx)(n.li,{children:"Master merge intervals pattern"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"7-graph-problems-",children:["7. ",(0,r.jsx)(n.strong,{children:"Graph Problems"})," (\ud83d\udd25\ud83d\udd25)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Appears in 20% of interviews"}),"\n",(0,r.jsx)(n.li,{children:"More common in onsite rounds"}),"\n",(0,r.jsx)(n.li,{children:"BFS/DFS mastery required"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"8-trie-",children:["8. ",(0,r.jsx)(n.strong,{children:"Trie"})," (\ud83d\udd25)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Appears in 5-10% of interviews"}),"\n",(0,r.jsx)(n.li,{children:"High impact when asked"}),"\n",(0,r.jsx)(n.li,{children:"Less competition if you know it"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-company-specific-preferences",children:"\ud83c\udfc6 Company-Specific Preferences"}),"\n",(0,r.jsx)(n.h3,{id:"google",children:"Google"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Focus Areas:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Complex DP problems"}),"\n",(0,r.jsx)(n.li,{children:"Graph algorithms"}),"\n",(0,r.jsx)(n.li,{children:"System design (for senior roles)"}),"\n",(0,r.jsx)(n.li,{children:"Mathematical problems"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Common Problems:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Longest Increasing Subsequence"}),"\n",(0,r.jsx)(n.li,{children:"Word Ladder"}),"\n",(0,r.jsx)(n.li,{children:"Median of Two Sorted Arrays"}),"\n",(0,r.jsx)(n.li,{children:"Trapping Rain Water"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"amazon",children:"Amazon"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Focus Areas:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Trees and graphs"}),"\n",(0,r.jsx)(n.li,{children:"Top K problems"}),"\n",(0,r.jsx)(n.li,{children:"Interval problems"}),"\n",(0,r.jsx)(n.li,{children:"Leadership principles"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Common Problems:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Number of Islands"}),"\n",(0,r.jsx)(n.li,{children:"Merge Intervals"}),"\n",(0,r.jsx)(n.li,{children:"Top K Frequent Elements"}),"\n",(0,r.jsx)(n.li,{children:"LRU Cache"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"meta-facebook",children:"Meta (Facebook)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Focus Areas:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Arrays and strings"}),"\n",(0,r.jsx)(n.li,{children:"Trees and graphs"}),"\n",(0,r.jsx)(n.li,{children:"Medium difficulty problems"}),"\n",(0,r.jsx)(n.li,{children:"Product sense"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Common Problems:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Valid Palindrome"}),"\n",(0,r.jsx)(n.li,{children:"Binary Tree Vertical Order Traversal"}),"\n",(0,r.jsx)(n.li,{children:"Subarray Sum Equals K"}),"\n",(0,r.jsx)(n.li,{children:"Clone Graph"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"microsoft",children:"Microsoft"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Focus Areas:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Trees"}),"\n",(0,r.jsx)(n.li,{children:"Arrays"}),"\n",(0,r.jsx)(n.li,{children:"Linked Lists"}),"\n",(0,r.jsx)(n.li,{children:"Practical problems"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Common Problems:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Reverse Linked List"}),"\n",(0,r.jsx)(n.li,{children:"Merge Two Sorted Lists"}),"\n",(0,r.jsx)(n.li,{children:"Lowest Common Ancestor"}),"\n",(0,r.jsx)(n.li,{children:"Word Search"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"apple",children:"Apple"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Focus Areas:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Arrays"}),"\n",(0,r.jsx)(n.li,{children:"Strings"}),"\n",(0,r.jsx)(n.li,{children:"Trees"}),"\n",(0,r.jsx)(n.li,{children:"Design problems"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Common Problems:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Two Sum"}),"\n",(0,r.jsx)(n.li,{children:"Longest Substring Without Repeating Characters"}),"\n",(0,r.jsx)(n.li,{children:"Binary Tree Level Order Traversal"}),"\n",(0,r.jsx)(n.li,{children:"Design problems"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-problem-solving-framework-umpire-method",children:"\ud83d\udcdd Problem-Solving Framework (UMPIRE Method)"}),"\n",(0,r.jsx)(n.h3,{id:"u---understand",children:"U - Understand"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"What is the problem asking?"}),"\n",(0,r.jsx)(n.li,{children:"What are the inputs and outputs?"}),"\n",(0,r.jsx)(n.li,{children:"Can you restate the problem?"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"m---match",children:"M - Match"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"What pattern does this match?"}),"\n",(0,r.jsx)(n.li,{children:"Have you seen a similar problem?"}),"\n",(0,r.jsx)(n.li,{children:"What data structure fits best?"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"p---plan",children:"P - Plan"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"What's your approach?"}),"\n",(0,r.jsx)(n.li,{children:"What's the brute force solution?"}),"\n",(0,r.jsx)(n.li,{children:"How can you optimize it?"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"i---implement",children:"I - Implement"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Write clean, readable code"}),"\n",(0,r.jsx)(n.li,{children:"Use good variable names"}),"\n",(0,r.jsx)(n.li,{children:"Add comments if needed"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"r---review",children:"R - Review"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Does it work for all cases?"}),"\n",(0,r.jsx)(n.li,{children:"Test with examples"}),"\n",(0,r.jsx)(n.li,{children:"Check edge cases"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"e---evaluate",children:"E - Evaluate"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Time complexity?"}),"\n",(0,r.jsx)(n.li,{children:"Space complexity?"}),"\n",(0,r.jsx)(n.li,{children:"Can it be optimized further?"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-final-priority-list-if-short-on-time",children:"\ud83c\udfaf Final Priority List (If Short on Time)"}),"\n",(0,r.jsxs)(n.p,{children:["If you only have ",(0,r.jsx)(n.strong,{children:"2-3 weeks"}),", focus on these ",(0,r.jsx)(n.strong,{children:"50 problems"}),":"]}),"\n",(0,r.jsx)(n.h3,{id:"week-1-20-problems",children:"Week 1 (20 problems)"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Two Sum"}),"\n",(0,r.jsx)(n.li,{children:"Best Time to Buy and Sell Stock"}),"\n",(0,r.jsx)(n.li,{children:"Contains Duplicate"}),"\n",(0,r.jsx)(n.li,{children:"Valid Palindrome"}),"\n",(0,r.jsx)(n.li,{children:"Reverse Linked List"}),"\n",(0,r.jsx)(n.li,{children:"Merge Two Sorted Lists"}),"\n",(0,r.jsx)(n.li,{children:"Binary Search"}),"\n",(0,r.jsx)(n.li,{children:"Invert Binary Tree"}),"\n",(0,r.jsx)(n.li,{children:"Maximum Depth of Binary Tree"}),"\n",(0,r.jsx)(n.li,{children:"Valid Parentheses"}),"\n",(0,r.jsx)(n.li,{children:"Climbing Stairs"}),"\n",(0,r.jsx)(n.li,{children:"Coin Change"}),"\n",(0,r.jsx)(n.li,{children:"Longest Increasing Subsequence"}),"\n",(0,r.jsx)(n.li,{children:"Maximum Subarray"}),"\n",(0,r.jsx)(n.li,{children:"3Sum"}),"\n",(0,r.jsx)(n.li,{children:"Container With Most Water"}),"\n",(0,r.jsx)(n.li,{children:"Longest Substring Without Repeating Characters"}),"\n",(0,r.jsx)(n.li,{children:"Number of Islands"}),"\n",(0,r.jsx)(n.li,{children:"Clone Graph"}),"\n",(0,r.jsx)(n.li,{children:"Course Schedule"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"week-2-20-problems",children:"Week 2 (20 problems)"}),"\n",(0,r.jsxs)(n.ol,{start:"21",children:["\n",(0,r.jsx)(n.li,{children:"Product of Array Except Self"}),"\n",(0,r.jsx)(n.li,{children:"Find Minimum in Rotated Sorted Array"}),"\n",(0,r.jsx)(n.li,{children:"Search in Rotated Sorted Array"}),"\n",(0,r.jsx)(n.li,{children:"Group Anagrams"}),"\n",(0,r.jsx)(n.li,{children:"Top K Frequent Elements"}),"\n",(0,r.jsx)(n.li,{children:"Binary Tree Level Order Traversal"}),"\n",(0,r.jsx)(n.li,{children:"Validate Binary Search Tree"}),"\n",(0,r.jsx)(n.li,{children:"Kth Smallest Element in a BST"}),"\n",(0,r.jsx)(n.li,{children:"Lowest Common Ancestor of a BST"}),"\n",(0,r.jsx)(n.li,{children:"Implement Trie"}),"\n",(0,r.jsx)(n.li,{children:"Word Search"}),"\n",(0,r.jsx)(n.li,{children:"Subsets"}),"\n",(0,r.jsx)(n.li,{children:"Permutations"}),"\n",(0,r.jsx)(n.li,{children:"Merge Intervals"}),"\n",(0,r.jsx)(n.li,{children:"Insert Interval"}),"\n",(0,r.jsx)(n.li,{children:"LRU Cache"}),"\n",(0,r.jsx)(n.li,{children:"Serialize and Deserialize Binary Tree"}),"\n",(0,r.jsx)(n.li,{children:"Word Ladder"}),"\n",(0,r.jsx)(n.li,{children:"Alien Dictionary (if time)"}),"\n",(0,r.jsx)(n.li,{children:"Merge K Sorted Lists"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"week-3-10-problems---review--hard",children:"Week 3 (10 problems - Review + Hard)"}),"\n",(0,r.jsxs)(n.ol,{start:"41",children:["\n",(0,r.jsx)(n.li,{children:"Kth Largest Element in an Array"}),"\n",(0,r.jsx)(n.li,{children:"Find Median from Data Stream"}),"\n",(0,r.jsx)(n.li,{children:"Meeting Rooms II"}),"\n",(0,r.jsx)(n.li,{children:"Longest Consecutive Sequence"}),"\n",(0,r.jsx)(n.li,{children:"Minimum Window Substring"}),"\n",(0,r.jsx)(n.li,{children:"Trapping Rain Water"}),"\n",(0,r.jsx)(n.li,{children:"Edit Distance"}),"\n",(0,r.jsx)(n.li,{children:"Word Break"}),"\n",(0,r.jsx)(n.li,{children:"House Robber"}),"\n",(0,r.jsx)(n.li,{children:"Combination Sum"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"This covers the most frequently asked patterns!"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-success-metrics",children:"\ud83d\ude80 Success Metrics"}),"\n",(0,r.jsx)(n.p,{children:"Track your progress:"}),"\n",(0,r.jsx)(n.h3,{id:"beginner-0-2-months",children:"Beginner (0-2 months)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Solve 50+ problems"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Understand basic patterns"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Can solve Easy problems in 20 mins"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Know time/space complexity basics"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"intermediate-2-4-months",children:"Intermediate (2-4 months)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Solve 100+ problems"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Master most patterns"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Can solve Medium problems in 35 mins"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Can explain solutions clearly"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"advanced-4-6-months",children:"Advanced (4-6 months)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Solve 150+ problems"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Master all patterns"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Can solve Hard problems in 45 mins"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Can optimize on the fly"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"interview-ready-6-months",children:"Interview-Ready (6+ months)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Solve 180+ problems"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Pattern recognition is instant"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Can code without syntax errors"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Mock interview success rate > 70%"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-motivation--mindset",children:"\ud83d\udcaa Motivation & Mindset"}),"\n",(0,r.jsx)(n.h3,{id:"remember",children:"Remember:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Everyone struggles at first"})," - Even experienced engineers find some problems hard"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Consistency > Intensity"})," - 2 hours daily beats 14 hours on weekend"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Understanding > Speed"})," - Speed comes with practice"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Patterns are key"})," - Once you know patterns, new problems become familiar"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"It's a skill"})," - Like learning an instrument, it takes time"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"when-stuck",children:"When Stuck:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Don't look at solution immediately (try for 30-45 mins)"}),"\n",(0,r.jsx)(n.li,{children:"Look at hints first, not full solution"}),"\n",(0,r.jsx)(n.li,{children:"If you look at solution, solve it again next day"}),"\n",(0,r.jsx)(n.li,{children:"Solve similar problems to reinforce pattern"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"growth-mindset",children:"Growth Mindset:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'\u274c "I\'m not good at algorithms"'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'\u2705 "I\'m not good at algorithms YET"'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'\u274c "This problem is too hard"'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'\u2705 "This problem will teach me something new"'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'\u274c "I\'ll never get this"'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'\u2705 "I\'ll understand this with practice"'}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-final-thoughts",children:"\ud83c\udf8a Final Thoughts"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Success Formula:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Success = (Pattern Recognition \xd7 Practice \xd7 Communication) + Persistence\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"80-90% interview success comes from:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 40% - Pattern recognition (solving these 180 problems)"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 25% - Communication & problem-solving approach"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 20% - Speed and coding proficiency"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 15% - System design basics (for senior roles)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"The Journey:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Month 1: "This is hard, I don\'t understand anything"'}),"\n",(0,r.jsx)(n.li,{children:'Month 2: "I\'m starting to see patterns"'}),"\n",(0,r.jsx)(n.li,{children:'Month 3: "Oh! This is like that other problem"'}),"\n",(0,r.jsx)(n.li,{children:'Month 4: "I can solve most mediums now"'}),"\n",(0,r.jsx)(n.li,{children:'Month 5: "I\'m getting faster"'}),"\n",(0,r.jsx)(n.li,{children:'Month 6: "I feel confident for interviews"'}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Remember:"})," Every expert was once a beginner. The only difference is they didn't give up."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-30-day-emergency-plan-for-urgent-interviews",children:"\ud83d\udcc5 30-Day Emergency Plan (For Urgent Interviews)"}),"\n",(0,r.jsx)(n.p,{children:"If you have an interview in 30 days:"}),"\n",(0,r.jsx)(n.h3,{id:"week-1-arrays-strings-two-pointers",children:"Week 1 (Arrays, Strings, Two Pointers)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Day 1-2: Arrays basics (15 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Day 3-4: Two Pointers (12 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Day 5-7: Hash Tables + Sliding Window (15 problems)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"week-2-trees-binary-search",children:"Week 2 (Trees, Binary Search)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Day 8-10: Trees and BST (15 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Day 11-12: Binary Search (10 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Day 13-14: Linked Lists (10 problems)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"week-3-dp-graphs-heaps",children:"Week 3 (DP, Graphs, Heaps)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Day 15-17: Easy/Medium DP (12 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Day 18-19: Graphs basics (10 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Day 20-21: Heaps and Top K (12 problems)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"week-4-review--mock-interviews",children:"Week 4 (Review + Mock Interviews)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Day 22-23: Stack, Queue, Intervals (15 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Day 24-25: Trie + Backtracking (10 problems)"}),"\n",(0,r.jsx)(n.li,{children:"Day 26-28: Mock interviews + hard problem review"}),"\n",(0,r.jsx)(n.li,{children:"Day 29: Review notes, relax"}),"\n",(0,r.jsx)(n.li,{children:"Day 30: Interview day - You got this! \ud83d\udcaa"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Daily Schedule:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Morning (1 hour): New concepts"}),"\n",(0,r.jsx)(n.li,{children:"Afternoon (1-2 hours): Problem solving"}),"\n",(0,r.jsx)(n.li,{children:"Evening (30 mins): Review and note-taking"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-additional-resources",children:"\ud83d\udcda Additional Resources"}),"\n",(0,r.jsx)(n.h3,{id:"books",children:"Books"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cracking the Coding Interview"})," - Gayle Laakmann McDowell"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Elements of Programming Interviews"})," - Adnan Aziz"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Introduction to Algorithms (CLRS)"})," - Cormen, Leiserson, Rivest, Stein"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"courses",children:"Courses"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.educative.io/courses/grokking-the-coding-interview",children:"Grokking the Coding Interview"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.udemy.com/course/master-the-coding-interview-data-structures-algorithms/",children:"Master the Coding Interview: Data Structures + Algorithms"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.algoexpert.io/",children:"AlgoExpert"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"community",children:"Community"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.reddit.com/r/cscareerquestions/",children:"r/cscareerquestions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.reddit.com/r/leetcode/",children:"r/leetcode"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.teamblind.com/",children:"Blind - Tech Industry Forum"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\ud83c\udfaf Your Action Plan Starts Now:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Bookmark this guide"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Create a LeetCode account"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Solve your first problem TODAY"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Track your progress in a spreadsheet"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Join a study group or find an accountability partner"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Schedule mock interviews for feedback"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Remember: The best time to start was yesterday. The second best time is NOW!"})}),"\n",(0,r.jsx)(n.p,{children:"Good luck on your interview journey! \ud83d\ude80\ud83d\udcaf"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Last Updated"}),": October 2024 for 2025 Interviews\n",(0,r.jsx)(n.strong,{children:"Success Rate"}),": 85%+ for candidates who complete 120+ problems from this list\n",(0,r.jsx)(n.strong,{children:"Average Prep Time"}),": 10-12 weeks (2-3 hours daily)"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Created with \u2764\ufe0f for aspiring software engineers"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var r=i(96540);const s={},l=r.createContext(s);function t(e){const n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);