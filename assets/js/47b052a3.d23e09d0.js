"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9603],{3715:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>b,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=r(4848),t=r(8453);const a={},l="Web Accessibility Patterns Cheatsheet",s={id:"WebDev/Machine Coding Round/Accessibility",title:"Web Accessibility Patterns Cheatsheet",description:"Alert/Notification Pattern",source:"@site/docs/WebDev/Machine Coding Round/Accessibility.mdx",sourceDirName:"WebDev/Machine Coding Round",slug:"/WebDev/Machine Coding Round/Accessibility",permalink:"/js.enigma/docs/WebDev/Machine Coding Round/Accessibility",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/WebDev/Machine Coding Round/Accessibility.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Webpack 5",permalink:"/js.enigma/docs/WebDev/JavaScript/Webpack"},next:{title:"Machine Coding Round",permalink:"/js.enigma/docs/WebDev/Machine Coding Round/MachineCodingRounds"}},o={},c=[{value:"Alert/Notification Pattern",id:"alertnotification-pattern",level:2},{value:"Modal Dialog",id:"modal-dialog",level:2},{value:"Tabs",id:"tabs",level:2},{value:"Switch/Toggle",id:"switchtoggle",level:2},{value:"Dropdown/Combobox",id:"dropdowncombobox",level:2},{value:"Menu Button",id:"menu-button",level:2},{value:"Accordion",id:"accordion",level:2},{value:"Key Principles",id:"key-principles",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"web-accessibility-patterns-cheatsheet",children:"Web Accessibility Patterns Cheatsheet"})}),"\n",(0,i.jsx)(e.h2,{id:"alertnotification-pattern",children:"Alert/Notification Pattern"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",children:'\x3c!-- Live Region for Dynamic Content --\x3e\r\n<div \r\n  role="alert" \r\n  aria-live="assertive" \r\n  aria-atomic="true"\r\n>\r\n  Error: Failed to save changes\r\n</div>\r\n\r\n\x3c!-- Status Message (Less Urgent) --\x3e\r\n<div \r\n  role="status" \r\n  aria-live="polite" \r\n  aria-atomic="true"\r\n>\r\n  Changes saved successfully\r\n</div>\n'})}),"\n",(0,i.jsx)(e.h2,{id:"modal-dialog",children:"Modal Dialog"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",children:'<div \r\n  role="dialog" \r\n  aria-labelledby="dialog-title" \r\n  aria-modal="true"\r\n  aria-describedby="dialog-desc"\r\n>\r\n  <h2 id="dialog-title">Confirm Action</h2>\r\n  <p id="dialog-desc">Are you sure you want to proceed?</p>\r\n  \r\n  \x3c!-- Focus trap needed in JS --\x3e\r\n  <button autofocus>Confirm</button>\r\n  <button>Cancel</button>\r\n</div>\r\n\r\n<script>\r\n// Key handling\r\ndocument.addEventListener(\'keydown\', (e) => {\r\n  if (e.key === \'Escape\') closeDialog();\r\n  if (e.key === \'Tab\') manageFocusTrap(e);\r\n});\r\n<\/script>\n'})}),"\n",(0,i.jsx)(e.h2,{id:"tabs",children:"Tabs"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",children:'<div class="tabs">\r\n  <div role="tablist" aria-label="Programming Options">\r\n    <button \r\n      role="tab" \r\n      aria-selected="true" \r\n      aria-controls="panel-1" \r\n      id="tab-1"\r\n      tabindex="0"\r\n    >\r\n      First Tab\r\n    </button>\r\n    <button \r\n      role="tab" \r\n      aria-selected="false" \r\n      aria-controls="panel-2" \r\n      id="tab-2"\r\n      tabindex="-1"\r\n    >\r\n      Second Tab\r\n    </button>\r\n  </div>\r\n\r\n  <div \r\n    role="tabpanel" \r\n    id="panel-1" \r\n    aria-labelledby="tab-1"\r\n    tabindex="0"\r\n  >\r\n    Panel 1 content\r\n  </div>\r\n  <div \r\n    role="tabpanel" \r\n    id="panel-2" \r\n    aria-labelledby="tab-2"\r\n    tabindex="0"\r\n    hidden\r\n  >\r\n    Panel 2 content\r\n  </div>\r\n</div>\r\n\r\n<script>\r\n// Key handling for tabs\r\ndocument.addEventListener(\'keydown\', (e) => {\r\n  switch(e.key) {\r\n    case \'ArrowLeft\': \r\n      // Focus previous tab\r\n      break;\r\n    case \'ArrowRight\':\r\n      // Focus next tab\r\n      break;\r\n    case \'Home\':\r\n      // Focus first tab\r\n      break;\r\n    case \'End\':\r\n      // Focus last tab\r\n      break;\r\n  }\r\n});\r\n<\/script>\n'})}),"\n",(0,i.jsx)(e.h2,{id:"switchtoggle",children:"Switch/Toggle"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",children:"<button \r\n  role=\"switch\" \r\n  aria-checked=\"false\" \r\n  aria-label=\"Dark mode\"\r\n>\r\n  <span class=\"switch-thumb\"></span>\r\n  <span class=\"switch-track\"></span>\r\n</button>\r\n\r\n<script>\r\n// Handle both click and keyboard events\r\nbutton.addEventListener('click', toggle);\r\nbutton.addEventListener('keydown', (e) => {\r\n  if (e.key === ' ' || e.key === 'Enter') toggle();\r\n});\r\n\r\nfunction toggle() {\r\n  const checked = button.getAttribute('aria-checked') === 'true';\r\n  button.setAttribute('aria-checked', !checked);\r\n}\r\n<\/script>\n"})}),"\n",(0,i.jsx)(e.h2,{id:"dropdowncombobox",children:"Dropdown/Combobox"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",children:'<div class="combobox">\r\n  <label id="combo-label">Select an option</label>\r\n  \r\n  <input \r\n    type="text"\r\n    role="combobox"\r\n    aria-expanded="false"\r\n    aria-controls="listbox-1"\r\n    aria-labelledby="combo-label"\r\n    aria-autocomplete="list"\r\n  />\r\n  \r\n  <ul \r\n    id="listbox-1"\r\n    role="listbox"\r\n    aria-labelledby="combo-label"\r\n  >\r\n    <li \r\n      role="option" \r\n      aria-selected="false"\r\n      id="option-1"\r\n    >\r\n      Option 1\r\n    </li>\r\n    \x3c!-- More options --\x3e\r\n  </ul>\r\n</div>\n'})}),"\n",(0,i.jsx)(e.h2,{id:"menu-button",children:"Menu Button"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",children:'<div class="menu">\r\n  <button \r\n    aria-haspopup="true" \r\n    aria-expanded="false"\r\n    aria-controls="menu-items"\r\n  >\r\n    Menu\r\n  </button>\r\n  \r\n  <ul \r\n    id="menu-items" \r\n    role="menu" \r\n    hidden\r\n  >\r\n    <li>\r\n      <button role="menuitem">Option 1</button>\r\n    </li>\r\n    <li>\r\n      <button role="menuitem">Option 2</button>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n<script>\r\n// Key handling\r\ndocument.addEventListener(\'keydown\', (e) => {\r\n  switch(e.key) {\r\n    case \'ArrowDown\':\r\n    case \'ArrowUp\':\r\n      // Navigate menu items\r\n      break;\r\n    case \'Escape\':\r\n      // Close menu\r\n      break;\r\n    case \'Enter\':\r\n    case \' \':\r\n      // Select item\r\n      break;\r\n  }\r\n});\r\n<\/script>\n'})}),"\n",(0,i.jsx)(e.h2,{id:"accordion",children:"Accordion"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",children:'<div class="accordion">\r\n  <h3>\r\n    <button \r\n      aria-expanded="false"\r\n      aria-controls="sect1"\r\n      class="accordion-trigger"\r\n    >\r\n      Section 1\r\n    </button>\r\n  </h3>\r\n  \r\n  <div \r\n    id="sect1" \r\n    role="region" \r\n    aria-labelledby="accordion1"\r\n    hidden\r\n  >\r\n    \x3c!-- Content --\x3e\r\n  </div>\r\n</div>\n'})}),"\n",(0,i.jsx)(e.h2,{id:"key-principles",children:"Key Principles"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Keyboard Navigation:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"All interactive elements must be focusable"}),"\n",(0,i.jsx)(e.li,{children:'Logical tab order (tabindex="0" or natural order)'}),"\n",(0,i.jsx)(e.li,{children:"Visible focus indicators"}),"\n",(0,i.jsx)(e.li,{children:"Handle both mouse and keyboard events"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"ARIA States:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"aria-expanded: For expandable elements"}),"\n",(0,i.jsx)(e.li,{children:"aria-selected: For selected items"}),"\n",(0,i.jsx)(e.li,{children:"aria-checked: For toggles/switches"}),"\n",(0,i.jsx)(e.li,{children:"aria-hidden: To hide decorative elements"}),"\n",(0,i.jsx)(e.li,{children:"aria-pressed: For toggle buttons"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Screen Reader Support:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Meaningful labels (aria-label, aria-labelledby)"}),"\n",(0,i.jsx)(e.li,{children:"Descriptive text (aria-describedby)"}),"\n",(0,i.jsx)(e.li,{children:"Role definitions"}),"\n",(0,i.jsx)(e.li,{children:"Status updates (aria-live)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Focus Management:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Trap focus in modals"}),"\n",(0,i.jsx)(e.li,{children:"Return focus after closing dialogs"}),"\n",(0,i.jsx)(e.li,{children:"Skip links for main content"}),"\n",(0,i.jsxs)(e.li,{children:["Focus visible (",":focus-visible",")"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Common Keyboard Interactions:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Enter/Space: Activate buttons"}),"\n",(0,i.jsx)(e.li,{children:"Escape: Close dialogs/modals"}),"\n",(0,i.jsx)(e.li,{children:"Arrow keys: Navigate menus/lists"}),"\n",(0,i.jsx)(e.li,{children:"Tab: Move between focusable elements"}),"\n",(0,i.jsx)(e.li,{children:"Home/End: Jump to start/end"}),"\n"]}),"\n"]}),"\n"]})]})}function b(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>l,x:()=>s});var i=r(6540);const t={},a=i.createContext(t);function l(n){const e=i.useContext(a);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),i.createElement(a.Provider,{value:e},n.children)}}}]);