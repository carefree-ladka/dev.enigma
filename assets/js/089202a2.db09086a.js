"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[765],{3393:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>a});var i=s(4848),r=s(8453);const l={},t="REST API Design Best Practices",d={id:"Backend System Design/API Design Practices",title:"REST API Design Best Practices",description:"A comprehensive guide to designing production-ready REST APIs.",source:"@site/docs/Backend System Design/API Design Practices.mdx",sourceDirName:"Backend System Design",slug:"/Backend System Design/API Design Practices",permalink:"/js.enigma/docs/Backend System Design/API Design Practices",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/Backend System Design/API Design Practices.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Backend System Design",permalink:"/js.enigma/docs/category/backend-system-design"},next:{title:"Apache Kafka - System Design Interview Guide",permalink:"/js.enigma/docs/Backend System Design/Apache Kafka - System Design Interview Guide"}},c={},a=[{value:"1. Resource Naming &amp; URL Structure",id:"1-resource-naming--url-structure",level:2},{value:"Use Nouns, Not Verbs",id:"use-nouns-not-verbs",level:3},{value:"Use Plural Nouns for Collections",id:"use-plural-nouns-for-collections",level:3},{value:"Hierarchical Relationships",id:"hierarchical-relationships",level:3},{value:"Naming Convention",id:"naming-convention",level:3},{value:"2. HTTP Methods (CRUD Operations)",id:"2-http-methods-crud-operations",level:2},{value:"Examples",id:"examples",level:3},{value:"3. HTTP Status Codes",id:"3-http-status-codes",level:2},{value:"Success Codes",id:"success-codes",level:3},{value:"Client Error Codes",id:"client-error-codes",level:3},{value:"Server Error Codes",id:"server-error-codes",level:3},{value:"4. Query Parameters &amp; Filtering",id:"4-query-parameters--filtering",level:2},{value:"Filtering and Search",id:"filtering-and-search",level:3},{value:"Sorting",id:"sorting",level:3},{value:"Pagination",id:"pagination",level:3},{value:"Combined Example",id:"combined-example",level:3},{value:"5. Request &amp; Response Format",id:"5-request--response-format",level:2},{value:"Use JSON as Default",id:"use-json-as-default",level:3},{value:"Consistent Structure",id:"consistent-structure",level:3},{value:"Naming Convention in JSON",id:"naming-convention-in-json",level:3},{value:"6. API Versioning",id:"6-api-versioning",level:2},{value:"URL Path Versioning (Recommended)",id:"url-path-versioning-recommended",level:3},{value:"Header Versioning (Alternative)",id:"header-versioning-alternative",level:3},{value:"7. Security Best Practices",id:"7-security-best-practices",level:2},{value:"Always Use HTTPS",id:"always-use-https",level:3},{value:"Authentication",id:"authentication",level:3},{value:"Never Expose Sensitive Data in URLs",id:"never-expose-sensitive-data-in-urls",level:3},{value:"8. Error Handling",id:"8-error-handling",level:2},{value:"Structured Error Response",id:"structured-error-response",level:3},{value:"Validation Errors",id:"validation-errors",level:3},{value:"9. HATEOAS (Optional)",id:"9-hateoas-optional",level:2},{value:"Without HATEOAS",id:"without-hateoas",level:3},{value:"With HATEOAS",id:"with-hateoas",level:3},{value:"Real-World Example: GitHub API",id:"real-world-example-github-api",level:3},{value:"When to Use HATEOAS",id:"when-to-use-hateoas",level:3},{value:"10. Documentation &amp; Developer Experience",id:"10-documentation--developer-experience",level:2},{value:"Use OpenAPI/Swagger",id:"use-openapiswagger",level:3},{value:"Provide Examples",id:"provide-examples",level:3},{value:"Tools for Documentation",id:"tools-for-documentation",level:3},{value:"Golden Rules",id:"golden-rules",level:2},{value:"Quick Reference Checklist",id:"quick-reference-checklist",level:2},{value:"Additional Resources",id:"additional-resources",level:2}];function o(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"rest-api-design-best-practices",children:"REST API Design Best Practices"})}),"\n",(0,i.jsx)(n.p,{children:"A comprehensive guide to designing production-ready REST APIs."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"1-resource-naming--url-structure",children:"1. Resource Naming & URL Structure"}),"\n",(0,i.jsx)(n.h3,{id:"use-nouns-not-verbs",children:"Use Nouns, Not Verbs"}),"\n",(0,i.jsx)(n.p,{children:"Resources should be nouns representing entities, not actions."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u2705 Good"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"GET /users/123/orders\nGET /products/456\nPOST /invoices\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u274c Bad"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"GET /getUserOrders\nPOST /createInvoice\nGET /fetchProducts\n"})}),"\n",(0,i.jsx)(n.h3,{id:"use-plural-nouns-for-collections",children:"Use Plural Nouns for Collections"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"GET /users          \u2192 List all users\nGET /users/123      \u2192 Get specific user\nPOST /users         \u2192 Create new user\n"})}),"\n",(0,i.jsx)(n.h3,{id:"hierarchical-relationships",children:"Hierarchical Relationships"}),"\n",(0,i.jsx)(n.p,{children:"Express parent-child relationships in URLs."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"GET /users/{userId}/orders/{orderId}\nGET /companies/{companyId}/employees/{employeeId}\nGET /posts/{postId}/comments\n"})}),"\n",(0,i.jsx)(n.h3,{id:"naming-convention",children:"Naming Convention"}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.strong,{children:"kebab-case"})," or ",(0,i.jsx)(n.strong,{children:"snake_case"})," for URLs (avoid camelCase)."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u2705 Recommended"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"/user-profiles\n/order-items\n/payment-methods\n\nOR\n\n/user_profiles\n/order_items\n/payment_methods\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u274c Avoid"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"/userProfiles\n/orderItems\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"2-http-methods-crud-operations",children:"2. HTTP Methods (CRUD Operations)"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Method"}),(0,i.jsx)(n.th,{children:"Purpose"}),(0,i.jsx)(n.th,{children:"Example"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"GET"})}),(0,i.jsx)(n.td,{children:"Retrieve resources"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"GET /users/123"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"POST"})}),(0,i.jsx)(n.td,{children:"Create new resource"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"POST /users"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"PUT"})}),(0,i.jsx)(n.td,{children:"Replace entire resource"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"PUT /users/123"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"PATCH"})}),(0,i.jsx)(n.td,{children:"Partial update"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"PATCH /users/123"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"DELETE"})}),(0,i.jsx)(n.td,{children:"Remove resource"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"DELETE /users/123"})})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:'POST /users\nBody: { "name": "John", "email": "john@example.com" }\n\u2192 Creates a new user\n\nGET /users/123\n\u2192 Retrieves user with ID 123\n\nPATCH /users/123\nBody: { "email": "newemail@example.com" }\n\u2192 Updates only the email field\n\nDELETE /users/123\n\u2192 Deletes user with ID 123\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"3-http-status-codes",children:"3. HTTP Status Codes"}),"\n",(0,i.jsx)(n.p,{children:"Use standard HTTP status codes consistently."}),"\n",(0,i.jsx)(n.h3,{id:"success-codes",children:"Success Codes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"200 OK"})," - Successful GET, PUT, PATCH, or DELETE"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"201 Created"})," - Resource successfully created (POST)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"204 No Content"})," - Success with no response body (often DELETE)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"client-error-codes",children:"Client Error Codes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"400 Bad Request"})," - Invalid input/validation error"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"401 Unauthorized"})," - Authentication required"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"403 Forbidden"})," - Authenticated but not authorized"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"404 Not Found"})," - Resource doesn't exist"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"409 Conflict"})," - Duplicate resource or conflicting state"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"server-error-codes",children:"Server Error Codes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"500 Internal Server Error"})," - Unexpected server failure"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"503 Service Unavailable"})," - Temporary server issue"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"4-query-parameters--filtering",children:"4. Query Parameters & Filtering"}),"\n",(0,i.jsx)(n.h3,{id:"filtering-and-search",children:"Filtering and Search"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:"GET /products?category=electronics&brand=sony\nGET /users?role=admin&status=active\n"})}),"\n",(0,i.jsx)(n.h3,{id:"sorting",children:"Sorting"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:"GET /products?sort=price          \u2192 Ascending\nGET /products?sort=-price         \u2192 Descending\nGET /products?sort=name,price     \u2192 Multiple fields\n"})}),"\n",(0,i.jsx)(n.h3,{id:"pagination",children:"Pagination"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Option 1: Page-based"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:"GET /products?page=2&limit=20\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Option 2: Offset-based"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:"GET /products?offset=40&limit=20\n"})}),"\n",(0,i.jsx)(n.h3,{id:"combined-example",children:"Combined Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:"GET /products?category=shoes&sort=-price&page=2&limit=20\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"5-request--response-format",children:"5. Request & Response Format"}),"\n",(0,i.jsx)(n.h3,{id:"use-json-as-default",children:"Use JSON as Default"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "id": 123,\n    "name": "Product Name",\n    "price": 99.99\n  },\n  "meta": {\n    "timestamp": "2025-10-02T10:30:00Z"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"consistent-structure",children:"Consistent Structure"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"For Collections"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "data": [\n    { "id": 1, "name": "Item 1" },\n    { "id": 2, "name": "Item 2" }\n  ],\n  "meta": {\n    "page": 1,\n    "limit": 20,\n    "total": 150,\n    "totalPages": 8\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"naming-convention-in-json",children:"Naming Convention in JSON"}),"\n",(0,i.jsxs)(n.p,{children:["Choose ",(0,i.jsx)(n.strong,{children:"camelCase"})," (JavaScript) or ",(0,i.jsx)(n.strong,{children:"snake_case"})," (Python) and be consistent."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"camelCase"})," (common in JS ecosystems)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "userId": 123,\n  "firstName": "John",\n  "createdAt": "2025-10-02"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"snake_case"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "user_id": 123,\n  "first_name": "John",\n  "created_at": "2025-10-02"\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"6-api-versioning",children:"6. API Versioning"}),"\n",(0,i.jsx)(n.p,{children:"Prevent breaking changes by versioning your API."}),"\n",(0,i.jsx)(n.h3,{id:"url-path-versioning-recommended",children:"URL Path Versioning (Recommended)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:"GET /api/v1/users\nGET /api/v2/users\n"})}),"\n",(0,i.jsx)(n.h3,{id:"header-versioning-alternative",children:"Header Versioning (Alternative)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:"GET /api/users\nHeader: Accept: application/vnd.company.v1+json\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Best Practice:"})," Use URL path versioning for simplicity and clarity."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"7-security-best-practices",children:"7. Security Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"always-use-https",children:"Always Use HTTPS"}),"\n",(0,i.jsx)(n.p,{children:"Never transmit sensitive data over HTTP."}),"\n",(0,i.jsx)(n.h3,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"OAuth 2.0 / JWT"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:"GET /api/users\nAuthorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"API Keys"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:"GET /api/users\nX-API-Key: your-api-key-here\n"})}),"\n",(0,i.jsx)(n.h3,{id:"never-expose-sensitive-data-in-urls",children:"Never Expose Sensitive Data in URLs"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u274c Bad"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"GET /login?username=john&password=secret123\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u2705 Good"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'POST /login\nBody: { "username": "john", "password": "secret123" }\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"8-error-handling",children:"8. Error Handling"}),"\n",(0,i.jsx)(n.h3,{id:"structured-error-response",children:"Structured Error Response"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "error": {\n    "code": "USER_NOT_FOUND",\n    "message": "The user with id 123 does not exist",\n    "field": "userId",\n    "details": {}\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"validation-errors",children:"Validation Errors"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "error": {\n    "code": "VALIDATION_ERROR",\n    "message": "Invalid input data",\n    "details": [\n      {\n        "field": "email",\n        "message": "Invalid email format"\n      },\n      {\n        "field": "age",\n        "message": "Must be at least 18"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Avoid generic messages"}),' like "Something went wrong" unless it\'s truly an unexpected error.']}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"9-hateoas-optional",children:"9. HATEOAS (Optional)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"HATEOAS"})," = Hypermedia As The Engine Of Application State"]}),"\n",(0,i.jsx)(n.p,{children:"The server provides links to possible next actions, making the API self-discoverable."}),"\n",(0,i.jsx)(n.h3,{id:"without-hateoas",children:"Without HATEOAS"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": 123,\n  "name": "Nike Shoes",\n  "price": 99.99\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Client must know from documentation:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"/products/123/reviews"})," for reviews"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"/products/123"})," with PATCH to update"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"with-hateoas",children:"With HATEOAS"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": 123,\n  "name": "Nike Shoes",\n  "price": 99.99,\n  "links": {\n    "self": "/products/123",\n    "reviews": "/products/123/reviews",\n    "update": {\n      "href": "/products/123",\n      "method": "PATCH"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"real-world-example-github-api",children:"Real-World Example: GitHub API"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": 1296269,\n  "name": "Hello-World",\n  "url": "https://api.github.com/repos/octocat/Hello-World",\n  "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",\n  "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"when-to-use-hateoas",children:"When to Use HATEOAS"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u2705 Use when:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"APIs have complex, dynamic workflows"}),"\n",(0,i.jsx)(n.li,{children:"You want to decouple clients from hardcoded URLs"}),"\n",(0,i.jsx)(n.li,{children:"Building long-lived, evolving APIs"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u274c Skip when:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Simple CRUD operations"}),"\n",(0,i.jsx)(n.li,{children:"High-performance requirements (extra payload)"}),"\n",(0,i.jsx)(n.li,{children:"Team prefers traditional documentation"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"10-documentation--developer-experience",children:"10. Documentation & Developer Experience"}),"\n",(0,i.jsx)(n.h3,{id:"use-openapiswagger",children:"Use OpenAPI/Swagger"}),"\n",(0,i.jsx)(n.p,{children:"Document your API with OpenAPI specification:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"openapi: 3.0.0\ninfo:\n  title: Products API\n  version: 1.0.0\npaths:\n  /products:\n    get:\n      summary: List all products\n      parameters:\n        - name: category\n          in: query\n          schema:\n            type: string\n"})}),"\n",(0,i.jsx)(n.h3,{id:"provide-examples",children:"Provide Examples"}),"\n",(0,i.jsx)(n.p,{children:"Every endpoint should have:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Request examples"}),"\n",(0,i.jsx)(n.li,{children:"Response examples"}),"\n",(0,i.jsx)(n.li,{children:"Error response examples"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"tools-for-documentation",children:"Tools for Documentation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Swagger UI"})," - Interactive API documentation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Postman Collections"})," - Easy testing and sharing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ReDoc"})," - Clean, customizable docs"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"golden-rules",children:"Golden Rules"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"APIs are contracts"})," \u2014 they must be:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistent"})," in naming, structure, and responses"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Predictable"})," in behavior and error handling"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Versioned"})," to prevent breaking changes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Well-documented"})," for developer experience"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"quick-reference-checklist",children:"Quick Reference Checklist"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Use nouns for resources, plural for collections"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Use kebab-case or snake_case in URLs"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement proper HTTP methods (GET, POST, PUT, PATCH, DELETE)"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Return appropriate HTTP status codes"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Support filtering, sorting, and pagination via query params"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Use JSON for requests/responses"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Version your API (e.g., ",(0,i.jsx)(n.code,{children:"/api/v1/"}),")"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Always use HTTPS"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement proper authentication (OAuth2/JWT)"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Return structured error responses"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Document with OpenAPI/Swagger"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Provide clear examples for all endpoints"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://restfulapi.net/",children:"REST API Tutorial"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://swagger.io/specification/",children:"OpenAPI Specification"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://httpstatuses.com/",children:"HTTP Status Codes"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.github.com/en/rest",children:"GitHub API Documentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://stripe.com/docs/api",children:"Stripe API Documentation"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var i=s(6540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);