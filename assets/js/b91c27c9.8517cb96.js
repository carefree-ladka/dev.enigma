"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7397],{6407:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var t=r(4848),a=r(8453);const s={},l="Web Components",o={id:"WebDev/HTMLDOM/WebComponents",title:"Web Components",description:"Introduction",source:"@site/docs/WebDev/HTMLDOM/WebComponents.mdx",sourceDirName:"WebDev/HTMLDOM",slug:"/WebDev/HTMLDOM/WebComponents",permalink:"/js.enigma/docs/WebDev/HTMLDOM/WebComponents",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/WebDev/HTMLDOM/WebComponents.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DOM Methods & Selectors Cheatsheet",permalink:"/js.enigma/docs/WebDev/HTMLDOM/DOMCheatSheet"},next:{title:"Async Await",permalink:"/js.enigma/docs/WebDev/JavaScript/AsyncAwait"}},i={},d=[{value:"Introduction",id:"introduction",level:2},{value:"1. Custom Elements",id:"1-custom-elements",level:2},{value:"Theory",id:"theory",level:3},{value:"Example",id:"example",level:3},{value:"2. Shadow DOM",id:"2-shadow-dom",level:2},{value:"Theory",id:"theory-1",level:3},{value:"Example",id:"example-1",level:3},{value:"3. HTML Templates",id:"3-html-templates",level:2},{value:"Theory",id:"theory-2",level:3},{value:"Example",id:"example-2",level:3},{value:"Putting It All Together",id:"putting-it-all-together",level:2},{value:"Complete Example",id:"complete-example",level:3},{value:"Custom Box Element using Shadow DOM",id:"custom-box-element-using-shadow-dom",level:2},{value:"Custom Star Rating Component",id:"custom-star-rating-component",level:2},{value:"Best Practices",id:"best-practices",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"web-components",children:"Web Components"})}),"\n",(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.p,{children:"Web Components are a set of web platform APIs that allow you to create reusable custom elements. They're built on three main technologies: Custom Elements, Shadow DOM, and HTML Templates."}),"\n",(0,t.jsx)(n.h2,{id:"1-custom-elements",children:"1. Custom Elements"}),"\n",(0,t.jsx)(n.h3,{id:"theory",children:"Theory"}),"\n",(0,t.jsx)(n.p,{children:"Custom Elements allow you to define your own HTML tags with custom functionality. They must have a hyphen in their name (e.g., 'my-element') to avoid conflicts with standard HTML elements."}),"\n",(0,t.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"class MyElement extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.innerHTML = 'Hello from MyElement!';\r\n  }\r\n  \r\n  // Lifecycle Methods\r\n  connectedCallback() {\r\n    // Called when element is added to document\r\n    console.log('Element added to page');\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    // Called when element is removed from document\r\n    console.log('Element removed from page');\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    // Called when an attribute is changed/added/removed\r\n    console.log(`Attribute ${name} changed from ${oldValue} to ${newValue}`);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    // Specify which attributes to watch for changes\r\n    return ['title', 'content'];\r\n  }\r\n}\r\n\r\n// Register the custom element\r\ncustomElements.define('my-element', MyElement);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"2-shadow-dom",children:"2. Shadow DOM"}),"\n",(0,t.jsx)(n.h3,{id:"theory-1",children:"Theory"}),"\n",(0,t.jsx)(n.p,{children:"Shadow DOM provides encapsulation for DOM and CSS, creating a separate DOM tree that's isolated from the main document's DOM. This prevents style leakage and naming conflicts."}),"\n",(0,t.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"class ShadowElement extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    \r\n    // Create shadow root\r\n    const shadow = this.attachShadow({ mode: 'open' });\r\n    \r\n    // Create element\r\n    const wrapper = document.createElement('div');\r\n    wrapper.textContent = 'This is in Shadow DOM';\r\n    \r\n    // Add styles\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      div {\r\n        padding: 10px;\r\n        background: #f0f0f0;\r\n        border-radius: 5px;\r\n      }\r\n    `;\r\n    \r\n    // Attach to shadow DOM\r\n    shadow.appendChild(style);\r\n    shadow.appendChild(wrapper);\r\n  }\r\n}\r\n\r\ncustomElements.define('shadow-element', ShadowElement);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"3-html-templates",children:"3. HTML Templates"}),"\n",(0,t.jsx)(n.h3,{id:"theory-2",children:"Theory"}),"\n",(0,t.jsxs)(n.p,{children:["HTML Templates (",(0,t.jsx)(n.code,{children:"<template>"})," tag) allow you to define reusable HTML that can be instantiated later. Content inside a template is not rendered until it's cloned and added to the document."]}),"\n",(0,t.jsx)(n.h3,{id:"example-2",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// Define template in HTML\r\n/*\r\n<template id=\"my-template\">\r\n  <style>\r\n    .container {\r\n      border: 1px solid #ccc;\r\n      padding: 15px;\r\n    }\r\n  </style>\r\n  <div class=\"container\">\r\n    <h2><slot name=\"title\">Default Title</slot></h2>\r\n    <div><slot>Default content</slot></div>\r\n  </div>\r\n</template>\r\n*/\r\n\r\nclass TemplateElement extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    \r\n    // Get template content\r\n    const template = document.getElementById('my-template');\r\n    const templateContent = template.content;\r\n    \r\n    // Create shadow root and clone template\r\n    const shadow = this.attachShadow({ mode: 'open' });\r\n    shadow.appendChild(templateContent.cloneNode(true));\r\n  }\r\n}\r\n\r\ncustomElements.define('template-element', TemplateElement);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"putting-it-all-together",children:"Putting It All Together"}),"\n",(0,t.jsx)(n.h3,{id:"complete-example",children:"Complete Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"class CompleteComponent extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    \r\n    // Create shadow root\r\n    const shadow = this.attachShadow({ mode: 'open' });\r\n    \r\n    // Create template\r\n    const template = document.createElement('template');\r\n    template.innerHTML = `\r\n      <style>\r\n        :host {\r\n          display: block;\r\n          padding: 20px;\r\n        }\r\n        .card {\r\n          background: white;\r\n          border-radius: 8px;\r\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n          padding: 15px;\r\n        }\r\n        h2 {\r\n          margin-top: 0;\r\n          color: #333;\r\n        }\r\n      </style>\r\n      <div class=\"card\">\r\n        <h2><slot name=\"title\">Default Title</slot></h2>\r\n        <div><slot>Default content</slot></div>\r\n      </div>\r\n    `;\r\n    \r\n    // Clone and attach template\r\n    shadow.appendChild(template.content.cloneNode(true));\r\n  }\r\n  \r\n  // Lifecycle and attribute handling\r\n  static get observedAttributes() {\r\n    return ['title'];\r\n  }\r\n  \r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    if (name === 'title') {\r\n      const title = this.shadowRoot.querySelector('h2');\r\n      if (title) title.textContent = newValue;\r\n    }\r\n  }\r\n}\r\n\r\ncustomElements.define('complete-component', CompleteComponent);\r\n\r\n// Usage:\r\n/*\r\n<complete-component>\r\n  <span slot=\"title\">My Custom Component</span>\r\n  <p>This is the content of my component</p>\r\n</complete-component>\r\n*/\n"})}),"\n",(0,t.jsx)(n.h2,{id:"custom-box-element-using-shadow-dom",children:"Custom Box Element using Shadow DOM"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-JavaScript",children:"class SquareBox extends HTMLElement {\r\n  constructor() {\r\n    super()\r\n    this.attachShadow({ mode: 'open' })\r\n    this.shadowRoot.innerHTML = `\r\n    <style>\r\n        #box {\r\n             height : 200px;\r\n             width: 200px;\r\n             border: 1px solid #000;\r\n        }\r\n        #inner-box {\r\n                   backgroundColor : red;\r\n        }\r\n\r\n        p {\r\n          color: black;\r\n          font-size: 16px;\r\n\r\n        }\r\n      </style>\r\n      <div id='box'> <div id=\"inner-box\"></div></div>\r\n    `\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    return ['background']\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    if (name === 'background') {\r\n      this.shadowRoot.querySelector('#box').style.backgroundColor = newValue;\r\n    }\r\n  }\r\n}\r\n\r\ncustomElements.define('square-box', SquareBox)\r\n\r\n/* \r\n    <square-box background=\"maroon\"></square-box>\r\n    <square-box background=\"blue\"></square-box>\r\n*/\r\n\r\n\r\nconst boxes = Array.from({ length: 10 }, () => {\r\n  const box = document.createElement('square-box')\r\n  box.setAttribute('background', 'red')\r\n  return box\r\n})\r\n\r\nconst container = document.getElementById('container')\r\n\r\nboxes.forEach(box => container.appendChild(box))\r\n// 10 box created with red background\n"})}),"\n",(0,t.jsx)(n.h2,{id:"custom-star-rating-component",children:"Custom Star Rating Component"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-JavaScript",children:"class StarRating extends HTMLElement {\r\n\r\n  static get observedAttributes() {\r\n    return ['value', 'disabled'];\r\n  }\r\n\r\n  #value = 0;\r\n  #disabled = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n\r\n    // Initialize state\r\n    this.#value = 0;\r\n    this.#disabled = false;\r\n\r\n    // Render initial template\r\n    this.render();\r\n  }\r\n\r\n  // Getters and setters\r\n  get value() {\r\n    return this.#value;\r\n  }\r\n\r\n  set value(newValue) {\r\n    const value = Math.min(Math.max(0, Number(newValue)), 5);\r\n    if (this.#value !== value) {\r\n      this.#value = value;\r\n      this.updateStars();\r\n    }\r\n  }\r\n\r\n  get disabled() {\r\n    return this.#disabled;\r\n  }\r\n\r\n  set disabled(value) {\r\n    this.#disabled = Boolean(value);\r\n    this.shadowRoot.querySelector('.stars').style.cursor =\r\n      this.#disabled ? 'default' : 'pointer';\r\n  }\r\n\r\n  // Lifecycle callbacks\r\n  connectedCallback() {\r\n    this.setupEventListeners();\r\n\r\n    // Set initial value if provided as attribute\r\n    if (this.hasAttribute('value')) {\r\n      this.value = this.getAttribute('value');\r\n    }\r\n\r\n    if (this.hasAttribute('disabled')) {\r\n      this.disabled = true;\r\n    }\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    if (oldValue === newValue) return;\r\n\r\n    switch (name) {\r\n      case 'value':\r\n        this.value = newValue;\r\n        break;\r\n      case 'disabled':\r\n        this.disabled = newValue !== null;\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Private methods\r\n  render() {\r\n    this.shadowRoot.innerHTML = `\r\n      <style>\r\n        :host {\r\n          display: inline-block;\r\n        }\r\n        \r\n        .stars {\r\n          display: inline-flex;\r\n          gap: 4px;\r\n          cursor: pointer;\r\n          user-select: none;\r\n        }\r\n        \r\n        .star {\r\n          font-size: 24px;\r\n          color: #d4d4d4;\r\n          transition: color 0.2s ease-in-out;\r\n        }\r\n        \r\n        :host(:not([disabled])) .star:hover,\r\n        .star.selected {\r\n          color: #ffd700;\r\n        }\r\n        \r\n        :host(:not([disabled])) .star:hover ~ .star {\r\n          color: #d4d4d4 !important;\r\n        }\r\n        \r\n        :host([disabled]) .stars {\r\n          cursor: default;\r\n          opacity: 0.6;\r\n        }\r\n      </style>\r\n      <div class=\"stars\" role=\"radiogroup\" aria-label=\"Rating\">\r\n        ${Array.from({ length: 5 }, (_, i) => `\r\n          <span class=\"star\" \r\n                role=\"radio\"\r\n                aria-checked=\"false\"\r\n                tabindex=\"${i === 0 ? 0 : -1}\"\r\n                data-value=\"${i + 1}\">\r\n            \u2605\r\n          </span>\r\n        `).join('')}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  setupEventListeners() {\r\n    const starsContainer = this.shadowRoot.querySelector('.stars');\r\n\r\n    // Event delegation for better performance\r\n    starsContainer.addEventListener('click', (e) => {\r\n      if (this.disabled) return;\r\n\r\n      const star = e.target.closest('.star');\r\n      if (star) {\r\n        this.selectRating(Number(star.dataset.value));\r\n      }\r\n    });\r\n\r\n    starsContainer.addEventListener('mouseover', (e) => {\r\n      if (this.disabled) return;\r\n\r\n      const star = e.target.closest('.star');\r\n      if (star) {\r\n        this.previewRating(Number(star.dataset.value));\r\n      }\r\n    });\r\n\r\n    starsContainer.addEventListener('mouseleave', () => {\r\n      if (this.disabled) return;\r\n      this.updateStars();\r\n    });\r\n\r\n    // Keyboard navigation\r\n    starsContainer.addEventListener('keydown', (e) => {\r\n      if (this.disabled) return;\r\n\r\n      const target = e.target.closest('.star');\r\n      if (!target) return;\r\n\r\n      const currentValue = Number(target.dataset.value);\r\n\r\n      switch (e.key) {\r\n        case 'ArrowRight':\r\n        case 'ArrowUp':\r\n          e.preventDefault();\r\n          this.selectRating(Math.min(currentValue + 1, 5));\r\n          this.focusStar(currentValue < 5 ? currentValue : 4);\r\n          break;\r\n        case 'ArrowLeft':\r\n        case 'ArrowDown':\r\n          e.preventDefault();\r\n          this.selectRating(Math.max(currentValue - 1, 1));\r\n          this.focusStar(currentValue > 1 ? currentValue - 2 : 0);\r\n          break;\r\n        case ' ':\r\n        case 'Enter':\r\n          e.preventDefault();\r\n          this.selectRating(currentValue);\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  focusStar(index) {\r\n    const stars = this.shadowRoot.querySelectorAll('.star');\r\n    stars.forEach(star => star.setAttribute('tabindex', '-1'));\r\n    stars[index].setAttribute('tabindex', '0');\r\n    stars[index].focus();\r\n  }\r\n\r\n  selectRating(value) {\r\n    if (this.disabled || this.value === value) return;\r\n\r\n    this.value = value;\r\n\r\n    // Dispatch custom event\r\n    this.dispatchEvent(new CustomEvent('rating-change', {\r\n      bubbles: true,\r\n      composed: true,\r\n      detail: { value: this.value }\r\n    }));\r\n  }\r\n\r\n  previewRating(value) {\r\n    if (this.disabled) return;\r\n\r\n    const stars = this.shadowRoot.querySelectorAll('.star');\r\n    stars.forEach((star, index) => {\r\n      star.classList.toggle('selected', index < value);\r\n      star.setAttribute('aria-checked', index < value ? 'true' : 'false');\r\n    });\r\n  }\r\n\r\n  updateStars() {\r\n    const stars = this.shadowRoot.querySelectorAll('.star');\r\n    stars.forEach((star, index) => {\r\n      star.classList.toggle('selected', index < this.value);\r\n      star.setAttribute('aria-checked', index < this.value ? 'true' : 'false');\r\n    });\r\n  }\r\n}\r\n\r\n// Register the custom element\r\ncustomElements.define('star-rating', StarRating);\r\n\r\n// Usage example:\r\n\r\ndocument.querySelector('star-rating').addEventListener('rating-change', (event) => {\r\n  console.log('New rating:', event.detail.value);\r\n});\r\n\r\n/* \r\n    <star-rating value=\"3\"></star-rating>\r\n    <star-rating value=\"5\"></star-rating>\r\n    <star-rating value=\"5\" disabled></star-rating>\r\n*/\n"})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Naming Conventions"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Always use a hyphen in custom element names"}),"\n",(0,t.jsx)(n.li,{children:"Use descriptive, semantic names"}),"\n",(0,t.jsx)(n.li,{children:"Prefix components with project/organization name"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Performance"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use template elements for repeated structures"}),"\n",(0,t.jsx)(n.li,{children:"Minimize shadow DOM operations"}),"\n",(0,t.jsx)(n.li,{children:"Lazy load components when possible"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Accessibility"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Maintain ARIA attributes"}),"\n",(0,t.jsx)(n.li,{children:"Ensure keyboard navigation works"}),"\n",(0,t.jsx)(n.li,{children:"Preserve semantic meaning"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Maintenance"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Document public API and attributes"}),"\n",(0,t.jsx)(n.li,{children:"Keep components focused and single-purpose"}),"\n",(0,t.jsx)(n.li,{children:"Follow the Single Responsibility Principle"}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>o});var t=r(6540);const a={},s=t.createContext(a);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);