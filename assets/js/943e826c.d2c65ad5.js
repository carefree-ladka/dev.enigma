"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[16919],{28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>t});var r=i(96540);const o={},s=r.createContext(o);function a(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},46840:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>c});var r=i(74848),o=i(28453);const s={},a="Apache Maven for Spring Boot Development",t={id:"Java/Apache Maven for Spring Boot Development",title:"Apache Maven for Spring Boot Development",description:"Table of Contents",source:"@site/docs/Java/Apache Maven for Spring Boot Development.mdx",sourceDirName:"Java",slug:"/Java/Apache Maven for Spring Boot Development",permalink:"/docs/Java/Apache Maven for Spring Boot Development",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/Java/Apache Maven for Spring Boot Development.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Java Tutorial",permalink:"/docs/category/java-tutorial"},next:{title:"ArrayDeque in Java",permalink:"/docs/Java/ArrayDeque in Java"}},l={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Maven Overview",id:"maven-overview",level:2},{value:"Key Concepts",id:"key-concepts",level:3},{value:"Maven Coordinates",id:"maven-coordinates",level:3},{value:"Project Structure",id:"project-structure",level:2},{value:"Key Directories",id:"key-directories",level:3},{value:"POM.xml Deep Dive",id:"pomxml-deep-dive",level:2},{value:"Essential Maven Commands",id:"essential-maven-commands",level:2},{value:"Basic Commands",id:"basic-commands",level:3},{value:"Spring Boot Specific Commands",id:"spring-boot-specific-commands",level:3},{value:"Dependency Commands",id:"dependency-commands",level:3},{value:"Information Commands",id:"information-commands",level:3},{value:"Spring Boot Maven Integration",id:"spring-boot-maven-integration",level:2},{value:"Spring Boot Parent POM",id:"spring-boot-parent-pom",level:3},{value:"Spring Boot Maven Plugin",id:"spring-boot-maven-plugin",level:3},{value:"Dependency Management",id:"dependency-management",level:2},{value:"Scopes",id:"scopes",level:3},{value:"Version Management",id:"version-management",level:3},{value:"Maven Profiles",id:"maven-profiles",level:2},{value:"Activating Profiles",id:"activating-profiles",level:3},{value:"Build Lifecycle",id:"build-lifecycle",level:2},{value:"Default Lifecycle (Main Phases)",id:"default-lifecycle-main-phases",level:3},{value:"Clean Lifecycle",id:"clean-lifecycle",level:3},{value:"Site Lifecycle",id:"site-lifecycle",level:3},{value:"Common Plugins",id:"common-plugins",level:2},{value:"Spring Boot Maven Plugin",id:"spring-boot-maven-plugin-1",level:3},{value:"Maven Compiler Plugin",id:"maven-compiler-plugin",level:3},{value:"Maven Surefire Plugin (Unit Tests)",id:"maven-surefire-plugin-unit-tests",level:3},{value:"Maven Failsafe Plugin (Integration Tests)",id:"maven-failsafe-plugin-integration-tests",level:3},{value:"JaCoCo Plugin (Code Coverage)",id:"jacoco-plugin-code-coverage",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Project Structure",id:"1-project-structure",level:3},{value:"2. Dependency Management",id:"2-dependency-management",level:3},{value:"3. Properties Management",id:"3-properties-management",level:3},{value:"4. Build Configuration",id:"4-build-configuration",level:3},{value:"5. Testing",id:"5-testing",level:3},{value:"6. Security",id:"6-security",level:3},{value:"Common Issues and Solutions",id:"common-issues-and-solutions",level:2},{value:"1. Version Conflicts",id:"1-version-conflicts",level:3},{value:"2. Memory Issues",id:"2-memory-issues",level:3},{value:"3. Encoding Issues",id:"3-encoding-issues",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"apache-maven-for-spring-boot-development",children:"Apache Maven for Spring Boot Development"})}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#maven-overview",children:"Maven Overview"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#project-structure",children:"Project Structure"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#pomxml-deep-dive",children:"POM.xml Deep Dive"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#essential-maven-commands",children:"Essential Maven Commands"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#spring-boot-maven-integration",children:"Spring Boot Maven Integration"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#dependency-management",children:"Dependency Management"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#maven-profiles",children:"Maven Profiles"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#build-lifecycle",children:"Build Lifecycle"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#common-plugins",children:"Common Plugins"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#best-practices",children:"Best Practices"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"maven-overview",children:"Maven Overview"}),"\n",(0,r.jsx)(n.p,{children:"Apache Maven is a build automation and project management tool primarily used for Java projects. It uses a declarative approach based on the Project Object Model (POM)."}),"\n",(0,r.jsx)(n.h3,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"POM (Project Object Model)"}),": XML file containing project information and configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Coordinates"}),": Unique identifier for artifacts (groupId, artifactId, version)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Repository"}),": Storage location for project artifacts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dependency"}),": External JAR files required by your project"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Plugin"}),": Tools that perform specific tasks during the build process"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"maven-coordinates",children:"Maven Coordinates"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<groupId>com.company.app</groupId>\n<artifactId>my-spring-app</artifactId>\n<version>1.0.0</version>\n<packaging>jar</packaging>\n"})}),"\n",(0,r.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,r.jsx)(n.p,{children:"Maven follows a standard directory layout:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"my-spring-app/\n\u251c\u2500\u2500 pom.xml\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 main/\n\u2502   \u2502   \u251c\u2500\u2500 java/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 com/company/app/\n\u2502   \u2502   \u2502       \u251c\u2500\u2500 MySpringAppApplication.java\n\u2502   \u2502   \u2502       \u251c\u2500\u2500 controller/\n\u2502   \u2502   \u2502       \u251c\u2500\u2500 service/\n\u2502   \u2502   \u2502       \u251c\u2500\u2500 repository/\n\u2502   \u2502   \u2502       \u2514\u2500\u2500 model/\n\u2502   \u2502   \u2514\u2500\u2500 resources/\n\u2502   \u2502       \u251c\u2500\u2500 application.properties\n\u2502   \u2502       \u251c\u2500\u2500 application.yml\n\u2502   \u2502       \u251c\u2500\u2500 static/\n\u2502   \u2502       \u2514\u2500\u2500 templates/\n\u2502   \u2514\u2500\u2500 test/\n\u2502       \u251c\u2500\u2500 java/\n\u2502       \u2502   \u2514\u2500\u2500 com/company/app/\n\u2502       \u2514\u2500\u2500 resources/\n\u251c\u2500\u2500 target/\n\u2514\u2500\u2500 .mvn/\n"})}),"\n",(0,r.jsx)(n.h3,{id:"key-directories",children:"Key Directories"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"src/main/java"}),": Main application source code"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"src/main/resources"}),": Configuration files, static resources"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"src/test/java"}),": Test source code"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"target/"}),": Compiled classes and built artifacts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:".mvn/"}),": Maven wrapper configuration"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"pomxml-deep-dive",children:"POM.xml Deep Dive"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"pom.xml"})," is the heart of any Maven project. Here's a comprehensive Spring Boot example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0"\n         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0\n         https://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    \x3c!-- Parent POM for Spring Boot --\x3e\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>3.2.0</version>\n        <relativePath/>\n    </parent>\n\n    \x3c!-- Project Coordinates --\x3e\n    <groupId>com.company.app</groupId>\n    <artifactId>my-spring-app</artifactId>\n    <version>1.0.0-SNAPSHOT</version>\n    <packaging>jar</packaging>\n\n    \x3c!-- Project Information --\x3e\n    <name>My Spring Application</name>\n    <description>Demo project for Spring Boot</description>\n\n    \x3c!-- Properties --\x3e\n    <properties>\n        <java.version>17</java.version>\n        <maven.compiler.source>17</maven.compiler.source>\n        <maven.compiler.target>17</maven.compiler.target>\n        <spring-cloud.version>2023.0.0</spring-cloud.version>\n    </properties>\n\n    \x3c!-- Dependencies --\x3e\n    <dependencies>\n        \x3c!-- Spring Boot Starters --\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-data-jpa</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-security</artifactId>\n        </dependency>\n\n        \x3c!-- Database --\x3e\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <scope>runtime</scope>\n        </dependency>\n\n        \x3c!-- Development Tools --\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-devtools</artifactId>\n            <scope>runtime</scope>\n            <optional>true</optional>\n        </dependency>\n\n        \x3c!-- Testing --\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    \x3c!-- Dependency Management --\x3e\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.springframework.cloud</groupId>\n                <artifactId>spring-cloud-dependencies</artifactId>\n                <version>${spring-cloud.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    \x3c!-- Build Configuration --\x3e\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <excludes>\n                        <exclude>\n                            <groupId>org.projectlombok</groupId>\n                            <artifactId>lombok</artifactId>\n                        </exclude>\n                    </excludes>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n    \x3c!-- Profiles --\x3e\n    <profiles>\n        <profile>\n            <id>dev</id>\n            <properties>\n                <spring.profiles.active>dev</spring.profiles.active>\n            </properties>\n        </profile>\n        <profile>\n            <id>prod</id>\n            <properties>\n                <spring.profiles.active>prod</spring.profiles.active>\n            </properties>\n        </profile>\n    </profiles>\n</project>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"essential-maven-commands",children:"Essential Maven Commands"}),"\n",(0,r.jsx)(n.h3,{id:"basic-commands",children:"Basic Commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Clean the project (remove target directory)\nmvn clean\n\n# Compile the project\nmvn compile\n\n# Run tests\nmvn test\n\n# Package the project (create JAR/WAR)\nmvn package\n\n# Install artifact to local repository\nmvn install\n\n# Deploy artifact to remote repository\nmvn deploy\n\n# Clean and package\nmvn clean package\n\n# Skip tests during packaging\nmvn package -DskipTests\n\n# Run specific test class\nmvn test -Dtest=MyTestClass\n\n# Run specific test method\nmvn test -Dtest=MyTestClass#testMethod\n"})}),"\n",(0,r.jsx)(n.h3,{id:"spring-boot-specific-commands",children:"Spring Boot Specific Commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Run Spring Boot application\nmvn spring-boot:run\n\n# Run with specific profile\nmvn spring-boot:run -Dspring-boot.run.profiles=dev\n\n# Run with JVM arguments\nmvn spring-boot:run -Dspring-boot.run.jvmArguments="-Xmx512m"\n\n# Build executable JAR\nmvn clean package spring-boot:repackage\n\n# Generate build info\nmvn spring-boot:build-info\n'})}),"\n",(0,r.jsx)(n.h3,{id:"dependency-commands",children:"Dependency Commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Display dependency tree\nmvn dependency:tree\n\n# Analyze dependencies\nmvn dependency:analyze\n\n# Download sources\nmvn dependency:sources\n\n# Copy dependencies\nmvn dependency:copy-dependencies\n\n# Purge local repository\nmvn dependency:purge-local-repository\n"})}),"\n",(0,r.jsx)(n.h3,{id:"information-commands",children:"Information Commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Display effective POM\nmvn help:effective-pom\n\n# Display effective settings\nmvn help:effective-settings\n\n# List active profiles\nmvn help:active-profiles\n\n# Describe plugin goals\nmvn help:describe -Dplugin=spring-boot\n"})}),"\n",(0,r.jsx)(n.h2,{id:"spring-boot-maven-integration",children:"Spring Boot Maven Integration"}),"\n",(0,r.jsx)(n.h3,{id:"spring-boot-parent-pom",children:"Spring Boot Parent POM"}),"\n",(0,r.jsx)(n.p,{children:"The Spring Boot parent POM provides:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Default configurations for plugins"}),"\n",(0,r.jsx)(n.li,{children:"Dependency version management"}),"\n",(0,r.jsx)(n.li,{children:"Sensible resource filtering"}),"\n",(0,r.jsx)(n.li,{children:"Plugin configuration"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"spring-boot-maven-plugin",children:"Spring Boot Maven Plugin"}),"\n",(0,r.jsx)(n.p,{children:"Key features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Executable JARs"}),": Creates fat JARs with embedded server"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Run Goal"}),": Run application directly from Maven"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Repackage Goal"}),": Repackage existing JAR/WAR as executable"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Build Info"}),": Generate build information"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<plugin>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-maven-plugin</artifactId>\n    <configuration>\n        <mainClass>com.company.app.Application</mainClass>\n        <layout>JAR</layout>\n        <excludeDevtools>false</excludeDevtools>\n    </configuration>\n    <executions>\n        <execution>\n            <goals>\n                <goal>repackage</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n"})}),"\n",(0,r.jsx)(n.h2,{id:"dependency-management",children:"Dependency Management"}),"\n",(0,r.jsx)(n.h3,{id:"scopes",children:"Scopes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"compile"}),": Default scope, available in all phases"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"provided"}),": Available during compilation, not packaged"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"runtime"}),": Not needed for compilation, required for execution"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"test"}),": Only available during test compilation and execution"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"system"}),": Similar to provided, but JAR is explicitly provided"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"import"}),": Only used in dependencyManagement for importing POMs"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependencies>\n    \x3c!-- Compile scope (default) --\x3e\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n\n    \x3c!-- Runtime scope --\x3e\n    <dependency>\n        <groupId>mysql</groupId>\n        <artifactId>mysql-connector-java</artifactId>\n        <scope>runtime</scope>\n    </dependency>\n\n    \x3c!-- Test scope --\x3e\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-test</artifactId>\n        <scope>test</scope>\n    </dependency>\n\n    \x3c!-- Optional dependency --\x3e\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-devtools</artifactId>\n        <optional>true</optional>\n    </dependency>\n</dependencies>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"version-management",children:"Version Management"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<properties>\n    <mysql.version>8.0.33</mysql.version>\n    <jackson.version>2.15.2</jackson.version>\n</properties>\n\n<dependencies>\n    <dependency>\n        <groupId>mysql</groupId>\n        <artifactId>mysql-connector-java</artifactId>\n        <version>${mysql.version}</version>\n    </dependency>\n</dependencies>\n"})}),"\n",(0,r.jsx)(n.h2,{id:"maven-profiles",children:"Maven Profiles"}),"\n",(0,r.jsx)(n.p,{children:"Profiles allow you to customize builds for different environments:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<profiles>\n    \x3c!-- Development Profile --\x3e\n    <profile>\n        <id>dev</id>\n        <activation>\n            <activeByDefault>true</activeByDefault>\n        </activation>\n        <properties>\n            <spring.profiles.active>dev</spring.profiles.active>\n            <database.url>jdbc:h2:mem:devdb</database.url>\n        </properties>\n        <dependencies>\n            <dependency>\n                <groupId>com.h2database</groupId>\n                <artifactId>h2</artifactId>\n                <scope>runtime</scope>\n            </dependency>\n        </dependencies>\n    </profile>\n\n    \x3c!-- Production Profile --\x3e\n    <profile>\n        <id>prod</id>\n        <properties>\n            <spring.profiles.active>prod</spring.profiles.active>\n            <database.url>jdbc:mysql://localhost:3306/proddb</database.url>\n        </properties>\n        <dependencies>\n            <dependency>\n                <groupId>mysql</groupId>\n                <artifactId>mysql-connector-java</artifactId>\n                <scope>runtime</scope>\n            </dependency>\n        </dependencies>\n        <build>\n            <plugins>\n                <plugin>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-maven-plugin</artifactId>\n                    <configuration>\n                        <excludeDevtools>true</excludeDevtools>\n                    </configuration>\n                </plugin>\n            </plugins>\n        </build>\n    </profile>\n</profiles>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"activating-profiles",children:"Activating Profiles"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Activate specific profile\nmvn clean package -Pprod\n\n# Activate multiple profiles\nmvn clean package -Ptest,integration\n\n# List active profiles\nmvn help:active-profiles -Pprod\n"})}),"\n",(0,r.jsx)(n.h2,{id:"build-lifecycle",children:"Build Lifecycle"}),"\n",(0,r.jsx)(n.p,{children:"Maven has three built-in build lifecycles:"}),"\n",(0,r.jsx)(n.h3,{id:"default-lifecycle-main-phases",children:"Default Lifecycle (Main Phases)"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"validate"}),": Validate project structure"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"compile"}),": Compile source code"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"test"}),": Run unit tests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"package"}),": Create JAR/WAR"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"verify"}),": Run integration tests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"install"}),": Install to local repository"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"deploy"}),": Deploy to remote repository"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"clean-lifecycle",children:"Clean Lifecycle"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"pre-clean"}),": Execute processes before cleaning"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"clean"}),": Remove all files generated by the build"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"post-clean"}),": Execute processes after cleaning"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"site-lifecycle",children:"Site Lifecycle"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"pre-site"}),": Execute processes before site generation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"site"}),": Generate project site documentation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"post-site"}),": Execute processes after site generation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"site-deploy"}),": Deploy generated site to web server"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-plugins",children:"Common Plugins"}),"\n",(0,r.jsx)(n.h3,{id:"spring-boot-maven-plugin-1",children:"Spring Boot Maven Plugin"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<plugin>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-maven-plugin</artifactId>\n    <version>3.2.0</version>\n    <configuration>\n        <excludes>\n            <exclude>\n                <groupId>org.projectlombok</groupId>\n                <artifactId>lombok</artifactId>\n            </exclude>\n        </excludes>\n    </configuration>\n</plugin>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"maven-compiler-plugin",children:"Maven Compiler Plugin"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-compiler-plugin</artifactId>\n    <version>3.11.0</version>\n    <configuration>\n        <source>17</source>\n        <target>17</target>\n        <encoding>UTF-8</encoding>\n    </configuration>\n</plugin>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"maven-surefire-plugin-unit-tests",children:"Maven Surefire Plugin (Unit Tests)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-surefire-plugin</artifactId>\n    <version>3.0.0</version>\n    <configuration>\n        <includes>\n            <include>**/*Test.java</include>\n            <include>**/*Tests.java</include>\n        </includes>\n    </configuration>\n</plugin>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"maven-failsafe-plugin-integration-tests",children:"Maven Failsafe Plugin (Integration Tests)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-failsafe-plugin</artifactId>\n    <version>3.0.0</version>\n    <configuration>\n        <includes>\n            <include>**/*IT.java</include>\n            <include>**/*IntegrationTest.java</include>\n        </includes>\n    </configuration>\n    <executions>\n        <execution>\n            <goals>\n                <goal>integration-test</goal>\n                <goal>verify</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"jacoco-plugin-code-coverage",children:"JaCoCo Plugin (Code Coverage)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<plugin>\n    <groupId>org.jacoco</groupId>\n    <artifactId>jacoco-maven-plugin</artifactId>\n    <version>0.8.8</version>\n    <executions>\n        <execution>\n            <goals>\n                <goal>prepare-agent</goal>\n            </goals>\n        </execution>\n        <execution>\n            <id>report</id>\n            <phase>test</phase>\n            <goals>\n                <goal>report</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"1-project-structure",children:"1. Project Structure"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Follow Maven's standard directory layout"}),"\n",(0,r.jsx)(n.li,{children:"Keep source code organized in logical packages"}),"\n",(0,r.jsx)(n.li,{children:"Separate test code from main code"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-dependency-management",children:"2. Dependency Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use Spring Boot's dependency management"}),"\n",(0,r.jsx)(n.li,{children:"Avoid version conflicts by using BOMs"}),"\n",(0,r.jsx)(n.li,{children:"Regularly update dependencies for security patches"}),"\n",(0,r.jsx)(n.li,{children:"Use appropriate scopes for dependencies"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"\x3c!-- Good: Using managed version --\x3e\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-web</artifactId>\n</dependency>\n\n\x3c!-- Avoid: Hardcoding versions when parent manages them --\x3e\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-web</artifactId>\n    <version>3.2.0</version>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-properties-management",children:"3. Properties Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use properties for version management"}),"\n",(0,r.jsx)(n.li,{children:"Keep environment-specific configurations in profiles"}),"\n",(0,r.jsx)(n.li,{children:"Use meaningful property names"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"4-build-configuration",children:"4. Build Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Configure plugins explicitly with versions"}),"\n",(0,r.jsx)(n.li,{children:"Use profiles for environment-specific builds"}),"\n",(0,r.jsx)(n.li,{children:"Keep build configuration minimal and focused"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"5-testing",children:"5. Testing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Separate unit tests from integration tests"}),"\n",(0,r.jsx)(n.li,{children:"Use appropriate test scopes"}),"\n",(0,r.jsx)(n.li,{children:"Configure test plugins properly"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"6-security",children:"6. Security"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Regularly scan for vulnerabilities"}),"\n",(0,r.jsx)(n.li,{children:"Use HTTPS for repository connections"}),"\n",(0,r.jsx)(n.li,{children:"Avoid storing credentials in POM files"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-issues-and-solutions",children:"Common Issues and Solutions"}),"\n",(0,r.jsx)(n.h3,{id:"1-version-conflicts",children:"1. Version Conflicts"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check for conflicts\nmvn dependency:tree -Dverbose\n\n# Exclude transitive dependencies\n<dependency>\n    <groupId>some.group</groupId>\n    <artifactId>some-artifact</artifactId>\n    <exclusions>\n        <exclusion>\n            <groupId>conflicting.group</groupId>\n            <artifactId>conflicting-artifact</artifactId>\n        </exclusion>\n    </exclusions>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-memory-issues",children:"2. Memory Issues"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Set Maven memory options\nexport MAVEN_OPTS="-Xmx2048m -XX:MaxPermSize=256m"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-encoding-issues",children:"3. Encoding Issues"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n</properties>\n"})}),"\n",(0,r.jsx)(n.p,{children:"This guide covers the essential Maven concepts and practices for Spring Boot development. Remember to keep your Maven knowledge updated as new versions introduce new features and improvements."})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);