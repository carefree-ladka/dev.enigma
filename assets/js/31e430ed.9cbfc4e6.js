"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[32910],{7657:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>o,frontMatter:()=>l,metadata:()=>c,toc:()=>a});var s=i(74848),r=i(28453);const l={},t="Top 50 Java Interview Questions",c={id:"Java Interview Guide/Top 50 Java Interview Questions",title:"Top 50 Java Interview Questions",description:"Beginner Level (Questions 1-20)",source:"@site/docs/Java Interview Guide/Top 50 Java Interview Questions.mdx",sourceDirName:"Java Interview Guide",slug:"/Java Interview Guide/Top 50 Java Interview Questions",permalink:"/docs/Java Interview Guide/Top 50 Java Interview Questions",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/Java Interview Guide/Top 50 Java Interview Questions.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Threads and Multitasking: OS vs Application Level",permalink:"/docs/Java Interview Guide/Threads and Multitasking: OS vs Application Level"},next:{title:"Redis",permalink:"/docs/category/redis"}},d={},a=[{value:"<strong>Beginner Level (Questions 1-20)</strong>",id:"beginner-level-questions-1-20",level:2},{value:"Basic Java Concepts",id:"basic-java-concepts",level:3},{value:"Object-Oriented Programming",id:"object-oriented-programming",level:3},{value:"Control Structures and Exception Handling",id:"control-structures-and-exception-handling",level:3},{value:"<strong>Intermediate Level (Questions 21-35)</strong>",id:"intermediate-level-questions-21-35",level:2},{value:"Collections Framework",id:"collections-framework",level:3},{value:"Multithreading",id:"multithreading",level:3},{value:"Memory Management",id:"memory-management",level:3},{value:"<strong>Advanced Level (Questions 36-50)</strong>",id:"advanced-level-questions-36-50",level:2},{value:"Advanced Java Features",id:"advanced-java-features",level:3},{value:"Design Patterns and Architecture",id:"design-patterns-and-architecture",level:3},{value:"Performance and Advanced Topics",id:"performance-and-advanced-topics",level:3},{value:"<strong>Study Tips for Each Level:</strong>",id:"study-tips-for-each-level",level:2},{value:"<strong>Beginner Level Focus:</strong>",id:"beginner-level-focus",level:3},{value:"<strong>Intermediate Level Focus:</strong>",id:"intermediate-level-focus",level:3},{value:"<strong>Advanced Level Focus:</strong>",id:"advanced-level-focus",level:3},{value:"<strong>Recommended Practice Approach:</strong>",id:"recommended-practice-approach",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"top-50-java-interview-questions",children:"Top 50 Java Interview Questions"})}),"\n",(0,s.jsx)(n.h2,{id:"beginner-level-questions-1-20",children:(0,s.jsx)(n.strong,{children:"Beginner Level (Questions 1-20)"})}),"\n",(0,s.jsx)(n.h3,{id:"basic-java-concepts",children:"Basic Java Concepts"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is Java and what are its main features?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Platform independence, object-oriented, secure, robust, multithreaded"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is JVM, JRE, and JDK?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"JVM: Java Virtual Machine, JRE: Java Runtime Environment, JDK: Java Development Kit"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is the difference between JIT compiler and interpreter?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"JIT compiles bytecode to native machine code at runtime"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What are the primitive data types in Java?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"byte, short, int, long, float, double, boolean, char"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["What is the difference between ",(0,s.jsx)(n.code,{children:"=="})," and ",(0,s.jsx)(n.code,{children:"equals()"})," method?"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"=="})," compares references, ",(0,s.jsx)(n.code,{children:"equals()"})," compares content"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is method overloading?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Same method name with different parameters in the same class"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is method overriding?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Child class provides specific implementation of parent class method"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["What is the difference between ",(0,s.jsx)(n.code,{children:"String"}),", ",(0,s.jsx)(n.code,{children:"StringBuffer"}),", and ",(0,s.jsx)(n.code,{children:"StringBuilder"}),"?"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"String is immutable, StringBuffer is synchronized, StringBuilder is not synchronized"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What are access modifiers in Java?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"public, private, protected, default (package-private)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is the difference between instance and static variables?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Instance variables belong to objects, static variables belong to class"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"object-oriented-programming",children:"Object-Oriented Programming"}),"\n",(0,s.jsxs)(n.ol,{start:"11",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What are the four pillars of OOP?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Encapsulation, Inheritance, Polymorphism, Abstraction"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is inheritance and what are its types?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Single, multilevel, hierarchical inheritance (multiple inheritance through interfaces)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is the difference between abstract class and interface?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Abstract class can have concrete methods, interface has only abstract methods (before Java 8)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is encapsulation?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Bundling data and methods together and hiding internal implementation"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is polymorphism? Explain with example."})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"One interface, multiple implementations (compile-time and runtime polymorphism)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"control-structures-and-exception-handling",children:"Control Structures and Exception Handling"}),"\n",(0,s.jsxs)(n.ol,{start:"16",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["What is the difference between ",(0,s.jsx)(n.code,{children:"final"}),", ",(0,s.jsx)(n.code,{children:"finally"}),", and ",(0,s.jsx)(n.code,{children:"finalize"}),"?"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"final"}),": keyword, ",(0,s.jsx)(n.code,{children:"finally"}),": block, ",(0,s.jsx)(n.code,{children:"finalize"}),": method"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is exception handling and its hierarchy?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Throwable \u2192 Error/Exception \u2192 RuntimeException/Checked exceptions"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is the difference between checked and unchecked exceptions?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Checked: compile-time verification, Unchecked: runtime exceptions"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is try-with-resources?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Automatic resource management introduced in Java 7"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What are the different types of loops in Java?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"for, while, do-while, enhanced for loop"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"intermediate-level-questions-21-35",children:(0,s.jsx)(n.strong,{children:"Intermediate Level (Questions 21-35)"})}),"\n",(0,s.jsx)(n.h3,{id:"collections-framework",children:"Collections Framework"}),"\n",(0,s.jsxs)(n.ol,{start:"21",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is the Java Collections Framework?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Unified architecture for representing and manipulating collections"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is the difference between ArrayList and LinkedList?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"ArrayList: dynamic array, LinkedList: doubly linked list"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is the difference between HashMap and Hashtable?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"HashMap is not synchronized, allows null values; Hashtable is synchronized"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is the difference between Set and List?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Set doesn't allow duplicates, List allows duplicates and maintains order"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is Iterator and how is it different from Enumeration?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Iterator is fail-fast and allows removal, Enumeration is fail-safe"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is the difference between Comparable and Comparator?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Comparable: natural ordering, Comparator: custom ordering"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is ConcurrentHashMap?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Thread-safe version of HashMap without synchronizing entire map"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"multithreading",children:"Multithreading"}),"\n",(0,s.jsxs)(n.ol,{start:"28",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is multithreading and its benefits?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Concurrent execution of threads for better performance and resource utilization"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is the difference between Thread class and Runnable interface?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Thread class vs implementing Runnable interface approach"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is synchronization and why is it needed?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Controlling access to shared resources by multiple threads"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["What is the difference between ",(0,s.jsx)(n.code,{children:"wait()"})," and ",(0,s.jsx)(n.code,{children:"sleep()"}),"?"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"wait() releases lock, sleep() doesn't release lock"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is deadlock and how to prevent it?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Circular dependency of threads waiting for resources"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"memory-management",children:"Memory Management"}),"\n",(0,s.jsxs)(n.ol,{start:"33",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is garbage collection in Java?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Automatic memory management to reclaim unused objects"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What are different types of garbage collectors?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Serial, Parallel, G1, ZGC, etc."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is memory leak and how to prevent it?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Objects not being garbage collected due to unintended references"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"advanced-level-questions-36-50",children:(0,s.jsx)(n.strong,{children:"Advanced Level (Questions 36-50)"})}),"\n",(0,s.jsx)(n.h3,{id:"advanced-java-features",children:"Advanced Java Features"}),"\n",(0,s.jsxs)(n.ol,{start:"36",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What are generics and type erasure?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type safety at compile time, type information erased at runtime"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is reflection in Java?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Examining and manipulating classes, methods, fields at runtime"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What are annotations and how do they work?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Metadata that provides information about code"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is lambda expression and functional interfaces?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Anonymous functions and interfaces with single abstract method"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is Stream API?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Functional-style operations on collections of objects"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"design-patterns-and-architecture",children:"Design Patterns and Architecture"}),"\n",(0,s.jsxs)(n.ol,{start:"41",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is Singleton design pattern and its implementation?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ensures only one instance of a class exists"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is Factory design pattern?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Creates objects without specifying exact class to create"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is Observer design pattern?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"One-to-many dependency between objects"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is MVC architecture?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Model-View-Controller separation of concerns"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is dependency injection?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Providing dependencies from external source rather than creating them"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"performance-and-advanced-topics",children:"Performance and Advanced Topics"}),"\n",(0,s.jsxs)(n.ol,{start:"46",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is JVM memory structure?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Heap, Stack, Method Area, PC Register, Native Method Stack"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is the difference between heap and stack memory?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Heap: objects storage, Stack: method calls and local variables"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is classloader and its types?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Bootstrap, Extension, Application classloaders"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What is serialization and deserialization?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Converting objects to byte stream and vice versa"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"What are the latest features in Java 8, 11, 17, and 21?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Lambda expressions, Streams, Modules, Records, Pattern Matching, etc."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"study-tips-for-each-level",children:(0,s.jsx)(n.strong,{children:"Study Tips for Each Level:"})}),"\n",(0,s.jsx)(n.h3,{id:"beginner-level-focus",children:(0,s.jsx)(n.strong,{children:"Beginner Level Focus:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Master basic syntax and OOP concepts"}),"\n",(0,s.jsx)(n.li,{children:"Practice writing simple programs"}),"\n",(0,s.jsx)(n.li,{children:"Understand data types and control structures"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"intermediate-level-focus",children:(0,s.jsx)(n.strong,{children:"Intermediate Level Focus:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Deep dive into Collections Framework"}),"\n",(0,s.jsx)(n.li,{children:"Learn multithreading basics"}),"\n",(0,s.jsx)(n.li,{children:"Understand exception handling thoroughly"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"advanced-level-focus",children:(0,s.jsx)(n.strong,{children:"Advanced Level Focus:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Study design patterns"}),"\n",(0,s.jsx)(n.li,{children:"Learn about JVM internals"}),"\n",(0,s.jsx)(n.li,{children:"Explore modern Java features"}),"\n",(0,s.jsx)(n.li,{children:"Practice system design problems"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"recommended-practice-approach",children:(0,s.jsx)(n.strong,{children:"Recommended Practice Approach:"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Start with basics"})," - Ensure you understand fundamental concepts"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Code examples"})," - Write code for each concept"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Progress gradually"})," - Don't jump to advanced topics too quickly"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Practice coding"})," - Use platforms like LeetCode, HackerRank"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Build projects"})," - Apply concepts in real-world scenarios"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Remember: Focus on understanding concepts rather than memorizing answers. Interviewers often ask follow-up questions to test your depth of knowledge!"})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var s=i(96540);const r={},l=s.createContext(r);function t(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);