"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[7466],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var a=t(96540);const i={},s=a.createContext(i);function c(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),a.createElement(s.Provider,{value:n},e.children)}},88358:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>o});var a=t(74848),i=t(28453);const s={title:"Euclidean and Manhattan Distance"},c=void 0,r={id:"DSA/DSA with JavaScript/DistancesFormula",title:"Euclidean and Manhattan Distance",description:"Euclidean Distance",source:"@site/docs/DSA/DSA with JavaScript/DistancesFormula.mdx",sourceDirName:"DSA/DSA with JavaScript",slug:"/DSA/DSA with JavaScript/DistancesFormula",permalink:"/docs/DSA/DSA with JavaScript/DistancesFormula",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/DSA/DSA with JavaScript/DistancesFormula.mdx",tags:[],version:"current",frontMatter:{title:"Euclidean and Manhattan Distance"},sidebar:"tutorialSidebar",previous:{title:"Dijkstra's Algorithm",permalink:"/docs/DSA/DSA with JavaScript/Dijkstra"},next:{title:"Divide and Conquer Technique",permalink:"/docs/DSA/DSA with JavaScript/DivideAndConquer"}},l={},o=[{value:"Euclidean Distance",id:"euclidean-distance",level:2},{value:"JavaScript Implementation",id:"javascript-implementation",level:3},{value:"Manhattan Distance",id:"manhattan-distance",level:2},{value:"JavaScript Implementation",id:"javascript-implementation-1",level:3},{value:"Use Cases",id:"use-cases",level:2}];function d(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"euclidean-distance",children:"Euclidean Distance"}),"\n",(0,a.jsx)(n.p,{children:"Euclidean distance is the straight-line distance between two points in Euclidean space. For two points (x1, y1) and (x2, y2), the Euclidean distance is given by the formula:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-JavaScript",children:"Euclidean Distance = sqrt{(x2 - x1)^2 + (y2 - y1)^2}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"javascript-implementation",children:"JavaScript Implementation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-JavaScript",children:"function euclideanDistance(x1, y1, x2, y2) {\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n}\n\nconsole.log(euclideanDistance(1, 2, 4, 6)); // Output: 5\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"manhattan-distance",children:"Manhattan Distance"}),"\n",(0,a.jsx)(n.p,{children:'Manhattan distance, also known as "taxicab" or "city block" distance, is the distance between two points measured along the axes at right angles. For two points ( (x_1, y_1) ) and ( (x_2, y_2) ), the Manhattan distance is given by:'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-JavaScript",children:"Manhattan Distance = |x2 - x1| + |y2 - y1|\n"})}),"\n",(0,a.jsx)(n.h3,{id:"javascript-implementation-1",children:"JavaScript Implementation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-JavaScript",children:"function manhattanDistance(x1, y1, x2, y2) {\n  return Math.abs(x2 - x1) + Math.abs(y2 - y1);\n}\n\nconsole.log(manhattanDistance(1, 2, 4, 6)); // Output: 7\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Euclidean Distance"})," is often used in geometric problems, clustering algorithms (like k-means), and when calculating the shortest distance between two points."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Manhattan Distance"})," is useful when movement is restricted to horizontal and vertical directions, such as grid-based systems or city road networks."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);