"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5402],{6515:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>o,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var t=r(4848),i=r(8453);const s={},l="Linked List",d={id:"DSA/LinkedList",title:"Linked List",description:"Basic Structure",source:"@site/docs/DSA/LinkedList.mdx",sourceDirName:"DSA",slug:"/DSA/LinkedList",permalink:"/js.enigma/docs/DSA/LinkedList",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/DSA/LinkedList.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Line Sweep Algorithm",permalink:"/js.enigma/docs/DSA/LineSweep"},next:{title:"Median of Two Sorted Arrays",permalink:"/js.enigma/docs/DSA/MedianOfTwoSortedArrays"}},a={},c=[{value:"Basic Structure",id:"basic-structure",level:2},{value:"Core Methods",id:"core-methods",level:2},{value:"1. Insert at Beginning",id:"1-insert-at-beginning",level:3},{value:"2. Insert at End",id:"2-insert-at-end",level:3},{value:"3. Delete from Beginning",id:"3-delete-from-beginning",level:3},{value:"4. Delete from End",id:"4-delete-from-end",level:3},{value:"5. Search for Element",id:"5-search-for-element",level:3},{value:"Advanced Operations",id:"advanced-operations",level:2},{value:"1. Reverse List",id:"1-reverse-list",level:3},{value:"2. Detect Cycle",id:"2-detect-cycle",level:3},{value:"3. Find Middle Node",id:"3-find-middle-node",level:3},{value:"4. Remove Duplicates (Sorted List)",id:"4-remove-duplicates-sorted-list",level:3},{value:"Utility Methods",id:"utility-methods",level:2},{value:"1. Print List",id:"1-print-list",level:3},{value:"2. Get Size",id:"2-get-size",level:3},{value:"3. Is Empty",id:"3-is-empty",level:3},{value:"Common Interview Questions",id:"common-interview-questions",level:2},{value:"1. Merge Two Sorted Lists",id:"1-merge-two-sorted-lists",level:3},{value:"2. Find Nth Node from End",id:"2-find-nth-node-from-end",level:3},{value:"Time Complexity Summary",id:"time-complexity-summary",level:2},{value:"Usage Example",id:"usage-example",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"linked-list",children:"Linked List"})}),"\n",(0,t.jsx)(n.h2,{id:"basic-structure",children:"Basic Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"class Node {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.next = null;\r\n    }\r\n}\r\n\r\nclass LinkedList {\r\n    constructor() {\r\n        this.head = null;\r\n        this.size = 0;\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"core-methods",children:"Core Methods"}),"\n",(0,t.jsx)(n.h3,{id:"1-insert-at-beginning",children:"1. Insert at Beginning"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"insertAtBeginning(data) {\r\n    const newNode = new Node(data);\r\n    newNode.next = this.head;\r\n    this.head = newNode;\r\n    this.size++;\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Time Complexity: O(1)"}),"\n",(0,t.jsx)(n.h3,{id:"2-insert-at-end",children:"2. Insert at End"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"insertAtEnd(data) {\r\n    const newNode = new Node(data);\r\n    \r\n    if (!this.head) {\r\n        this.head = newNode;\r\n        this.size++;\r\n        return;\r\n    }\r\n    \r\n    let current = this.head;\r\n    while (current.next) {\r\n        current = current.next;\r\n    }\r\n    current.next = newNode;\r\n    this.size++;\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Time Complexity: O(n)"}),"\n",(0,t.jsx)(n.h3,{id:"3-delete-from-beginning",children:"3. Delete from Beginning"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"deleteFromBeginning() {\r\n    if (!this.head) {\r\n        return null;\r\n    }\r\n    \r\n    const removedData = this.head.data;\r\n    this.head = this.head.next;\r\n    this.size--;\r\n    return removedData;\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Time Complexity: O(1)"}),"\n",(0,t.jsx)(n.h3,{id:"4-delete-from-end",children:"4. Delete from End"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"deleteFromEnd() {\r\n    if (!this.head) {\r\n        return null;\r\n    }\r\n    \r\n    if (!this.head.next) {\r\n        const removedData = this.head.data;\r\n        this.head = null;\r\n        this.size--;\r\n        return removedData;\r\n    }\r\n    \r\n    let current = this.head;\r\n    while (current.next.next) {\r\n        current = current.next;\r\n    }\r\n    \r\n    const removedData = current.next.data;\r\n    current.next = null;\r\n    this.size--;\r\n    return removedData;\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Time Complexity: O(n)"}),"\n",(0,t.jsx)(n.h3,{id:"5-search-for-element",children:"5. Search for Element"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"search(data) {\r\n    let current = this.head;\r\n    let position = 0;\r\n    \r\n    while (current) {\r\n        if (current.data === data) {\r\n            return position;\r\n        }\r\n        current = current.next;\r\n        position++;\r\n    }\r\n    \r\n    return -1;\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Time Complexity: O(n)"}),"\n",(0,t.jsx)(n.h2,{id:"advanced-operations",children:"Advanced Operations"}),"\n",(0,t.jsx)(n.h3,{id:"1-reverse-list",children:"1. Reverse List"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"reverse() {\r\n    let prev = null;\r\n    let current = this.head;\r\n    \r\n    while (current) {\r\n        const next = current.next;\r\n        current.next = prev;\r\n        prev = current;\r\n        current = next;\r\n    }\r\n    \r\n    this.head = prev;\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Time Complexity: O(n)"}),"\n",(0,t.jsx)(n.h3,{id:"2-detect-cycle",children:"2. Detect Cycle"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"hasCycle() {\r\n    if (!this.head) return false;\r\n    \r\n    let slow = this.head;\r\n    let fast = this.head;\r\n    \r\n    while (fast && fast.next) {\r\n        slow = slow.next;\r\n        fast = fast.next.next;\r\n        \r\n        if (slow === fast) {\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    return false;\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Time Complexity: O(n)"}),"\n",(0,t.jsx)(n.h3,{id:"3-find-middle-node",children:"3. Find Middle Node"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"findMiddle() {\r\n    if (!this.head) return null;\r\n    \r\n    let slow = this.head;\r\n    let fast = this.head;\r\n    \r\n    while (fast && fast.next) {\r\n        slow = slow.next;\r\n        fast = fast.next.next;\r\n    }\r\n    \r\n    return slow.data;\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Time Complexity: O(n)"}),"\n",(0,t.jsx)(n.h3,{id:"4-remove-duplicates-sorted-list",children:"4. Remove Duplicates (Sorted List)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"removeDuplicates() {\r\n    let current = this.head;\r\n    \r\n    while (current && current.next) {\r\n        if (current.data === current.next.data) {\r\n            current.next = current.next.next;\r\n            this.size--;\r\n        } else {\r\n            current = current.next;\r\n        }\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Time Complexity: O(n)"}),"\n",(0,t.jsx)(n.h2,{id:"utility-methods",children:"Utility Methods"}),"\n",(0,t.jsx)(n.h3,{id:"1-print-list",children:"1. Print List"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"print() {\r\n    let current = this.head;\r\n    const elements = [];\r\n    \r\n    while (current) {\r\n        elements.push(current.data);\r\n        current = current.next;\r\n    }\r\n    \r\n    return elements.join(' -> ');\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-get-size",children:"2. Get Size"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"getSize() {\r\n    return this.size;\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-is-empty",children:"3. Is Empty"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"isEmpty() {\r\n    return this.size === 0;\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"common-interview-questions",children:"Common Interview Questions"}),"\n",(0,t.jsx)(n.h3,{id:"1-merge-two-sorted-lists",children:"1. Merge Two Sorted Lists"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"mergeSortedLists(list1, list2) {\r\n    const dummy = new Node(0);\r\n    let current = dummy;\r\n    \r\n    while (list1 && list2) {\r\n        if (list1.data <= list2.data) {\r\n            current.next = list1;\r\n            list1 = list1.next;\r\n        } else {\r\n            current.next = list2;\r\n            list2 = list2.next;\r\n        }\r\n        current = current.next;\r\n    }\r\n    \r\n    current.next = list1 || list2;\r\n    return dummy.next;\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-find-nth-node-from-end",children:"2. Find Nth Node from End"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"findNthFromEnd(n) {\r\n    if (!this.head) return null;\r\n    \r\n    let fast = this.head;\r\n    let slow = this.head;\r\n    \r\n    // Move fast n nodes ahead\r\n    for (let i = 0; i < n; i++) {\r\n        if (!fast) return null;\r\n        fast = fast.next;\r\n    }\r\n    \r\n    // Move both pointers until fast reaches end\r\n    while (fast) {\r\n        slow = slow.next;\r\n        fast = fast.next;\r\n    }\r\n    \r\n    return slow.data;\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"time-complexity-summary",children:"Time Complexity Summary"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Operation"}),(0,t.jsx)(n.th,{children:"Time Complexity"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Insert at Beginning"}),(0,t.jsx)(n.td,{children:"O(1)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Insert at End"}),(0,t.jsx)(n.td,{children:"O(n)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Delete from Beginning"}),(0,t.jsx)(n.td,{children:"O(1)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Delete from End"}),(0,t.jsx)(n.td,{children:"O(n)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Search"}),(0,t.jsx)(n.td,{children:"O(n)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Reverse"}),(0,t.jsx)(n.td,{children:"O(n)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Detect Cycle"}),(0,t.jsx)(n.td,{children:"O(n)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Find Middle"}),(0,t.jsx)(n.td,{children:"O(n)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Remove Duplicates"}),(0,t.jsx)(n.td,{children:"O(n)"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const list = new LinkedList();\r\n\r\n// Insert elements\r\nlist.insertAtBeginning(3);\r\nlist.insertAtEnd(7);\r\nlist.insertAtBeginning(1);\r\n\r\n// Print list: 1 -> 3 -> 7\r\nconsole.log(list.print());\r\n\r\n// Find element\r\nconsole.log(list.search(3)); // Output: 1\r\n\r\n// Reverse list\r\nlist.reverse();\r\n// Print list: 7 -> 3 -> 1\r\nconsole.log(list.print());\n"})})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>d});var t=r(6540);const i={},s=t.createContext(i);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);