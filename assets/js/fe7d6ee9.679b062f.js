"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5596],{7204:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>v,frontMatter:()=>c,metadata:()=>i,toc:()=>o});var r=t(4848),a=t(8453);const c={},s="Event Emitter",i={id:"WebDev/JavaScript/EventEmitter",title:"Event Emitter",description:"",source:"@site/docs/WebDev/JavaScript/EventEmitter.mdx",sourceDirName:"WebDev/JavaScript",slug:"/WebDev/JavaScript/EventEmitter",permalink:"/js.enigma/docs/WebDev/JavaScript/EventEmitter",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/WebDev/JavaScript/EventEmitter.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Design Patterns",permalink:"/js.enigma/docs/WebDev/JavaScript/DesignPatterns"},next:{title:"Event Loop",permalink:"/js.enigma/docs/WebDev/JavaScript/EventLoop"}},l={},o=[];function b(e){const n={code:"code",h1:"h1",header:"header",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"event-emitter",children:"Event Emitter"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-JavaScript",children:"class Emitter {\r\n  constructor() {\r\n    this.events = {}; // Store event name and their corresponding callbacks\r\n  }\r\n\r\n  // Subscribe to an event with a callback\r\n  subscribe(eventName, callback) {\r\n    if (!this.events[eventName]) {\r\n      this.events[eventName] = []; // If no callbacks for this event, initialize an array\r\n    }\r\n\r\n    // Add the callback to the event's array of listeners\r\n    this.events[eventName].push(callback);\r\n\r\n    // Return an object that allows unsubscribing\r\n    return {\r\n      release: () => {\r\n        this.events[eventName] = this.events[eventName].filter(\r\n          (cb) => cb !== callback\r\n        );\r\n      },\r\n    };\r\n  }\r\n\r\n  // Emit an event, calling all the callbacks with the passed arguments\r\n  emit(eventName, ...args) {\r\n    if (this.events[eventName]) {\r\n      this.events[eventName].forEach((callback) => {\r\n        callback(...args); // Call each subscribed callback with the arguments\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n// Example usage:\r\nconst emitter = new Emitter();\r\n\r\n// Subscribing to events\r\nconst callback1 = (a, b) => console.log('callback1', a, b);\r\nconst callback2 = (a, b) => console.log('callback2', a, b);\r\n\r\nconst sub1 = emitter.subscribe('event1', callback1);\r\nconst sub2 = emitter.subscribe('event2', callback2);\r\nconst sub3 = emitter.subscribe('event1', callback1); // Same callback1 again for event1\r\n\r\n// Emitting events\r\nemitter.emit('event1', 1, 2);  // callback1 will be called twice\r\nemitter.emit('event2', 3, 4);  // callback2 will be called once\r\n\r\n// Unsubscribing\r\nsub1.release(); // Unsubscribe callback1 from event1\r\nsub3.release(); // Unsubscribe callback1 from event1 again\r\n\r\n// Emitting event1 again (callback1 should not be called anymore)\r\nemitter.emit('event1', 5, 6);  // callback1 will not be called anymore\r\n/*\r\ncallback1 1 2\r\ncallback1 1 2\r\ncallback2 3 4 \r\n */\n"})})]})}function v(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(b,{...e})}):b(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var r=t(6540);const a={},c=r.createContext(a);function s(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);