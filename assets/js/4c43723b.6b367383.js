"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[3167],{28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var r=i(96540);const s={},l=r.createContext(s);function t(e){const n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(l.Provider,{value:n},e.children)}},30419:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=i(74848),s=i(28453);const l={},t="Production-Level Spring Boot Folder Structure",o={id:"Spring Boot/Production-Level Spring Boot Folder Structure",title:"Production-Level Spring Boot Folder Structure",description:"Complete Project Structure",source:"@site/docs/Spring Boot/Production-Level Spring Boot Folder Structure.mdx",sourceDirName:"Spring Boot",slug:"/Spring Boot/Production-Level Spring Boot Folder Structure",permalink:"/docs/Spring Boot/Production-Level Spring Boot Folder Structure",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/Spring Boot/Production-Level Spring Boot Folder Structure.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MockMvc Spring Boot Testing Guide",permalink:"/docs/Spring Boot/MockMvc Spring Boot Testing Guide"},next:{title:"ResponseEntity in Spring Boot",permalink:"/docs/Spring Boot/ResponseEntity in Spring Boot"}},a={},c=[{value:"Complete Project Structure",id:"complete-project-structure",level:2},{value:"Detailed Layer Breakdown",id:"detailed-layer-breakdown",level:2},{value:"1. Controller Layer (<code>controller/</code>)",id:"1-controller-layer-controller",level:3},{value:"2. Service Layer (<code>service/</code>)",id:"2-service-layer-service",level:3},{value:"3. Repository Layer (<code>repository/</code>)",id:"3-repository-layer-repository",level:3},{value:"4. Model/Entity Layer (<code>model/</code> or <code>entity/</code>)",id:"4-modelentity-layer-model-or-entity",level:3},{value:"5. DTO Layer (<code>dto/</code>)",id:"5-dto-layer-dto",level:3},{value:"6. Mapper Layer (<code>mapper/</code>)",id:"6-mapper-layer-mapper",level:3},{value:"7. Configuration Layer (<code>config/</code>)",id:"7-configuration-layer-config",level:3},{value:"8. Exception Layer (<code>exception/</code>)",id:"8-exception-layer-exception",level:3},{value:"9. Security Layer (<code>security/</code>)",id:"9-security-layer-security",level:3},{value:"10. Util Layer (<code>util/</code>)",id:"10-util-layer-util",level:3},{value:"11. Validator Layer (<code>validator/</code>)",id:"11-validator-layer-validator",level:3},{value:"12. Aspect Layer (<code>aspect/</code>)",id:"12-aspect-layer-aspect",level:3},{value:"13. Event Layer (<code>event/</code>)",id:"13-event-layer-event",level:3},{value:"14. Constant Layer (<code>constant/</code>)",id:"14-constant-layer-constant",level:3},{value:"Resources Directory Structure",id:"resources-directory-structure",level:2},{value:"Application Properties",id:"application-properties",level:3},{value:"Database Migrations (<code>db/migration/</code>)",id:"database-migrations-dbmigration",level:3},{value:"Testing Structure",id:"testing-structure",level:2},{value:"Unit Tests",id:"unit-tests",level:3},{value:"Integration Tests",id:"integration-tests",level:3},{value:"Docker Configuration",id:"docker-configuration",level:2},{value:"Dockerfile",id:"dockerfile",level:3},{value:"docker-compose.yml",id:"docker-composeyml",level:3},{value:"Best Practices Summary",id:"best-practices-summary",level:2},{value:"Package Organization",id:"package-organization",level:3},{value:"Naming Conventions",id:"naming-conventions",level:3},{value:"Security",id:"security",level:3},{value:"Performance",id:"performance",level:3},{value:"Monitoring",id:"monitoring",level:3},{value:"Documentation",id:"documentation",level:3},{value:"Additional Production Considerations",id:"additional-production-considerations",level:2},{value:"CI/CD Pipeline",id:"cicd-pipeline",level:3},{value:"Monitoring &amp; Logging",id:"monitoring--logging",level:3},{value:"Database Management",id:"database-management",level:3},{value:"API Versioning",id:"api-versioning",level:3},{value:"Rate Limiting &amp; Throttling",id:"rate-limiting--throttling",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"production-level-spring-boot-folder-structure",children:"Production-Level Spring Boot Folder Structure"})}),"\n",(0,r.jsx)(n.h2,{id:"complete-project-structure",children:"Complete Project Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"project-root/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 main/\n\u2502   \u2502   \u251c\u2500\u2500 java/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 com/\n\u2502   \u2502   \u2502       \u2514\u2500\u2500 company/\n\u2502   \u2502   \u2502           \u2514\u2500\u2500 project/\n\u2502   \u2502   \u2502               \u251c\u2500\u2500 ProjectApplication.java\n\u2502   \u2502   \u2502               \u251c\u2500\u2500 config/\n\u2502   \u2502   \u2502               \u251c\u2500\u2500 controller/\n\u2502   \u2502   \u2502               \u251c\u2500\u2500 service/\n\u2502   \u2502   \u2502               \u251c\u2500\u2500 repository/\n\u2502   \u2502   \u2502               \u251c\u2500\u2500 model/\n\u2502   \u2502   \u2502               \u251c\u2500\u2500 dto/\n\u2502   \u2502   \u2502               \u251c\u2500\u2500 mapper/\n\u2502   \u2502   \u2502               \u251c\u2500\u2500 exception/\n\u2502   \u2502   \u2502               \u251c\u2500\u2500 security/\n\u2502   \u2502   \u2502               \u251c\u2500\u2500 util/\n\u2502   \u2502   \u2502               \u251c\u2500\u2500 validator/\n\u2502   \u2502   \u2502               \u251c\u2500\u2500 aspect/\n\u2502   \u2502   \u2502               \u251c\u2500\u2500 event/\n\u2502   \u2502   \u2502               \u2514\u2500\u2500 constant/\n\u2502   \u2502   \u2514\u2500\u2500 resources/\n\u2502   \u2502       \u251c\u2500\u2500 application.yml\n\u2502   \u2502       \u251c\u2500\u2500 application-dev.yml\n\u2502   \u2502       \u251c\u2500\u2500 application-prod.yml\n\u2502   \u2502       \u251c\u2500\u2500 application-test.yml\n\u2502   \u2502       \u251c\u2500\u2500 db/\n\u2502   \u2502       \u2502   \u2514\u2500\u2500 migration/\n\u2502   \u2502       \u251c\u2500\u2500 static/\n\u2502   \u2502       \u251c\u2500\u2500 templates/\n\u2502   \u2502       \u251c\u2500\u2500 i18n/\n\u2502   \u2502       \u2514\u2500\u2500 logback-spring.xml\n\u2502   \u2514\u2500\u2500 test/\n\u2502       \u251c\u2500\u2500 java/\n\u2502       \u2502   \u2514\u2500\u2500 com/\n\u2502       \u2502       \u2514\u2500\u2500 company/\n\u2502       \u2502           \u2514\u2500\u2500 project/\n\u2502       \u2502               \u251c\u2500\u2500 controller/\n\u2502       \u2502               \u251c\u2500\u2500 service/\n\u2502       \u2502               \u251c\u2500\u2500 repository/\n\u2502       \u2502               \u251c\u2500\u2500 integration/\n\u2502       \u2502               \u2514\u2500\u2500 unit/\n\u2502       \u2514\u2500\u2500 resources/\n\u2502           \u2514\u2500\u2500 application-test.yml\n\u251c\u2500\u2500 docker/\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u251c\u2500\u2500 docker-compose.yml\n\u2502   \u2514\u2500\u2500 docker-compose.dev.yml\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 API.md\n\u2502   \u251c\u2500\u2500 DEPLOYMENT.md\n\u2502   \u2514\u2500\u2500 ARCHITECTURE.md\n\u251c\u2500\u2500 scripts/\n\u2502   \u251c\u2500\u2500 deploy.sh\n\u2502   \u251c\u2500\u2500 backup.sh\n\u2502   \u2514\u2500\u2500 healthcheck.sh\n\u251c\u2500\u2500 .github/\n\u2502   \u2514\u2500\u2500 workflows/\n\u2502       \u251c\u2500\u2500 ci.yml\n\u2502       \u2514\u2500\u2500 cd.yml\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 pom.xml (or build.gradle)\n\u251c\u2500\u2500 Dockerfile\n\u2514\u2500\u2500 docker-compose.yml\n"})}),"\n",(0,r.jsx)(n.h2,{id:"detailed-layer-breakdown",children:"Detailed Layer Breakdown"}),"\n",(0,r.jsxs)(n.h3,{id:"1-controller-layer-controller",children:["1. Controller Layer (",(0,r.jsx)(n.code,{children:"controller/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Handles HTTP requests and responses. Should be thin and delegate business logic to services."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// UserController.java\n@RestController\n@RequestMapping("/api/v1/users")\n@Validated\npublic class UserController {\n    // REST endpoints\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Responsibilities:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Request/response handling"}),"\n",(0,r.jsx)(n.li,{children:"Input validation"}),"\n",(0,r.jsx)(n.li,{children:"HTTP status codes"}),"\n",(0,r.jsx)(n.li,{children:"Delegating to service layer"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Naming Convention:"})," ",(0,r.jsx)(n.code,{children:"{Entity}Controller.java"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"2-service-layer-service",children:["2. Service Layer (",(0,r.jsx)(n.code,{children:"service/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Contains business logic and orchestrates operations."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"service/\n\u251c\u2500\u2500 UserService.java (interface)\n\u251c\u2500\u2500 impl/\n\u2502   \u2514\u2500\u2500 UserServiceImpl.java\n\u251c\u2500\u2500 AuthenticationService.java\n\u2514\u2500\u2500 EmailService.java\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Responsibilities:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Business logic implementation"}),"\n",(0,r.jsx)(n.li,{children:"Transaction management"}),"\n",(0,r.jsx)(n.li,{children:"Service orchestration"}),"\n",(0,r.jsx)(n.li,{children:"Calling multiple repositories"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Best Practices:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use interfaces for service contracts"}),"\n",(0,r.jsxs)(n.li,{children:["Keep implementations in ",(0,r.jsx)(n.code,{children:"impl/"})," subdirectory"]}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"@Transactional"})," annotations appropriately"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"3-repository-layer-repository",children:["3. Repository Layer (",(0,r.jsx)(n.code,{children:"repository/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Data access layer using Spring Data JPA or other persistence mechanisms."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"// UserRepository.java\n@Repository\npublic interface UserRepository extends JpaRepository<User, Long> {\n    Optional<User> findByEmail(String email);\n    List<User> findByStatus(UserStatus status);\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Responsibilities:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Database operations"}),"\n",(0,r.jsx)(n.li,{children:"Custom queries"}),"\n",(0,r.jsx)(n.li,{children:"Data persistence"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Types:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"JPA Repositories"}),"\n",(0,r.jsx)(n.li,{children:"Custom Repository implementations"}),"\n",(0,r.jsx)(n.li,{children:"Query methods"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"4-modelentity-layer-model-or-entity",children:["4. Model/Entity Layer (",(0,r.jsx)(n.code,{children:"model/"})," or ",(0,r.jsx)(n.code,{children:"entity/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"JPA entities representing database tables."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// User.java\n@Entity\n@Table(name = "users")\npublic class User {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Column(nullable = false, unique = true)\n    private String email;\n\n    // getters, setters, builders\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Annotations Used:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@Entity"}),", ",(0,r.jsx)(n.code,{children:"@Table"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@Id"}),", ",(0,r.jsx)(n.code,{children:"@GeneratedValue"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@OneToMany"}),", ",(0,r.jsx)(n.code,{children:"@ManyToOne"}),", etc."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@Column"}),", ",(0,r.jsx)(n.code,{children:"@JoinColumn"})]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"5-dto-layer-dto",children:["5. DTO Layer (",(0,r.jsx)(n.code,{children:"dto/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Data Transfer Objects for API requests and responses."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"dto/\n\u251c\u2500\u2500 request/\n\u2502   \u251c\u2500\u2500 CreateUserRequest.java\n\u2502   \u2514\u2500\u2500 UpdateUserRequest.java\n\u2514\u2500\u2500 response/\n    \u251c\u2500\u2500 UserResponse.java\n    \u2514\u2500\u2500 ApiResponse.java\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Purpose:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Decouple API contract from domain models"}),"\n",(0,r.jsx)(n.li,{children:"Validation annotations"}),"\n",(0,r.jsx)(n.li,{children:"Version control of APIs"}),"\n",(0,r.jsx)(n.li,{children:"Hide sensitive entity data"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"// CreateUserRequest.java\npublic class CreateUserRequest {\n    @NotBlank\n    @Email\n    private String email;\n\n    @Size(min = 8)\n    private String password;\n}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"6-mapper-layer-mapper",children:["6. Mapper Layer (",(0,r.jsx)(n.code,{children:"mapper/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Converts between entities and DTOs."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// UserMapper.java\n@Mapper(componentModel = "spring")\npublic interface UserMapper {\n    UserResponse toResponse(User user);\n    User toEntity(CreateUserRequest request);\n    List<UserResponse> toResponseList(List<User> users);\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"MapStruct (recommended for production)"}),"\n",(0,r.jsx)(n.li,{children:"Manual mapping"}),"\n",(0,r.jsx)(n.li,{children:"ModelMapper library"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"7-configuration-layer-config",children:["7. Configuration Layer (",(0,r.jsx)(n.code,{children:"config/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Application configuration classes."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"config/\n\u251c\u2500\u2500 SecurityConfig.java\n\u251c\u2500\u2500 DatabaseConfig.java\n\u251c\u2500\u2500 CacheConfig.java\n\u251c\u2500\u2500 AsyncConfig.java\n\u251c\u2500\u2500 SwaggerConfig.java\n\u2514\u2500\u2500 RestTemplateConfig.java\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Common Configurations:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Security (Spring Security)"}),"\n",(0,r.jsx)(n.li,{children:"Database (DataSource, JPA)"}),"\n",(0,r.jsx)(n.li,{children:"Caching (Redis, Caffeine)"}),"\n",(0,r.jsx)(n.li,{children:"Async processing"}),"\n",(0,r.jsx)(n.li,{children:"API documentation (Swagger/OpenAPI)"}),"\n",(0,r.jsx)(n.li,{children:"CORS settings"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"8-exception-layer-exception",children:["8. Exception Layer (",(0,r.jsx)(n.code,{children:"exception/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Custom exceptions and global exception handling."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"exception/\n\u251c\u2500\u2500 BusinessException.java\n\u251c\u2500\u2500 ResourceNotFoundException.java\n\u251c\u2500\u2500 ValidationException.java\n\u251c\u2500\u2500 UnauthorizedException.java\n\u2514\u2500\u2500 GlobalExceptionHandler.java\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"// GlobalExceptionHandler.java\n@RestControllerAdvice\npublic class GlobalExceptionHandler {\n\n    @ExceptionHandler(ResourceNotFoundException.class)\n    public ResponseEntity<ErrorResponse> handleNotFound(\n        ResourceNotFoundException ex) {\n        return ResponseEntity.status(HttpStatus.NOT_FOUND)\n            .body(new ErrorResponse(ex.getMessage()));\n    }\n}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"9-security-layer-security",children:["9. Security Layer (",(0,r.jsx)(n.code,{children:"security/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Authentication and authorization components."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"security/\n\u251c\u2500\u2500 JwtTokenProvider.java\n\u251c\u2500\u2500 JwtAuthenticationFilter.java\n\u251c\u2500\u2500 CustomUserDetailsService.java\n\u251c\u2500\u2500 SecurityUtils.java\n\u2514\u2500\u2500 PasswordEncoderConfig.java\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Components:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"JWT token handling"}),"\n",(0,r.jsx)(n.li,{children:"Custom authentication filters"}),"\n",(0,r.jsx)(n.li,{children:"User details service"}),"\n",(0,r.jsx)(n.li,{children:"Security utilities"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"10-util-layer-util",children:["10. Util Layer (",(0,r.jsx)(n.code,{children:"util/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Utility and helper classes."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"util/\n\u251c\u2500\u2500 DateUtils.java\n\u251c\u2500\u2500 StringUtils.java\n\u251c\u2500\u2500 ValidationUtils.java\n\u2514\u2500\u2500 ResponseBuilder.java\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Guidelines:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Static utility methods"}),"\n",(0,r.jsx)(n.li,{children:"No business logic"}),"\n",(0,r.jsx)(n.li,{children:"Reusable across layers"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"11-validator-layer-validator",children:["11. Validator Layer (",(0,r.jsx)(n.code,{children:"validator/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Custom validation logic."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"validator/\n\u251c\u2500\u2500 EmailValidator.java\n\u251c\u2500\u2500 PhoneNumberValidator.java\n\u2514\u2500\u2500 annotation/\n    \u251c\u2500\u2500 ValidEmail.java\n    \u2514\u2500\u2500 ValidPhone.java\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"12-aspect-layer-aspect",children:["12. Aspect Layer (",(0,r.jsx)(n.code,{children:"aspect/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Cross-cutting concerns using AOP."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"aspect/\n\u251c\u2500\u2500 LoggingAspect.java\n\u251c\u2500\u2500 PerformanceAspect.java\n\u2514\u2500\u2500 SecurityAspect.java\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Logging"}),"\n",(0,r.jsx)(n.li,{children:"Performance monitoring"}),"\n",(0,r.jsx)(n.li,{children:"Transaction management"}),"\n",(0,r.jsx)(n.li,{children:"Security checks"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"13-event-layer-event",children:["13. Event Layer (",(0,r.jsx)(n.code,{children:"event/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Event-driven architecture components."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"event/\n\u251c\u2500\u2500 UserCreatedEvent.java\n\u251c\u2500\u2500 OrderPlacedEvent.java\n\u251c\u2500\u2500 listener/\n\u2502   \u251c\u2500\u2500 UserEventListener.java\n\u2502   \u2514\u2500\u2500 OrderEventListener.java\n\u2514\u2500\u2500 publisher/\n    \u2514\u2500\u2500 EventPublisher.java\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"14-constant-layer-constant",children:["14. Constant Layer (",(0,r.jsx)(n.code,{children:"constant/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Application constants and enums."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"constant/\n\u251c\u2500\u2500 AppConstants.java\n\u251c\u2500\u2500 ErrorMessages.java\n\u251c\u2500\u2500 ApiEndpoints.java\n\u2514\u2500\u2500 enums/\n    \u251c\u2500\u2500 UserStatus.java\n    \u251c\u2500\u2500 OrderStatus.java\n    \u2514\u2500\u2500 Role.java\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"resources-directory-structure",children:"Resources Directory Structure"}),"\n",(0,r.jsx)(n.h3,{id:"application-properties",children:"Application Properties"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# application.yml (base configuration)\nspring:\n  application:\n    name: project-name\n  profiles:\n    active: ${ACTIVE_PROFILE:dev}\n\n# application-dev.yml (development)\nspring:\n  datasource:\n    url: jdbc:postgresql://localhost:5432/devdb\n\n# application-prod.yml (production)\nspring:\n  datasource:\n    url: ${DB_URL}\n    username: ${DB_USERNAME}\n    password: ${DB_PASSWORD}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"database-migrations-dbmigration",children:["Database Migrations (",(0,r.jsx)(n.code,{children:"db/migration/"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Using Flyway or Liquibase:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"db/\n\u2514\u2500\u2500 migration/\n    \u251c\u2500\u2500 V1__create_users_table.sql\n    \u251c\u2500\u2500 V2__create_orders_table.sql\n    \u2514\u2500\u2500 V3__add_user_status_column.sql\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"testing-structure",children:"Testing Structure"}),"\n",(0,r.jsx)(n.h3,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"test/\n\u2514\u2500\u2500 java/\n    \u2514\u2500\u2500 com/company/project/\n        \u251c\u2500\u2500 service/\n        \u2502   \u2514\u2500\u2500 UserServiceTest.java\n        \u2514\u2500\u2500 util/\n            \u2514\u2500\u2500 DateUtilsTest.java\n"})}),"\n",(0,r.jsx)(n.h3,{id:"integration-tests",children:"Integration Tests"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"integration/\n\u251c\u2500\u2500 UserIntegrationTest.java\n\u251c\u2500\u2500 OrderFlowIntegrationTest.java\n\u2514\u2500\u2500 config/\n    \u2514\u2500\u2500 TestConfig.java\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"docker-configuration",children:"Docker Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"dockerfile",children:"Dockerfile"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dockerfile",children:'FROM eclipse-temurin:17-jdk-alpine AS build\nWORKDIR /workspace/app\nCOPY mvnw .\nCOPY .mvn .mvn\nCOPY pom.xml .\nCOPY src src\nRUN ./mvnw install -DskipTests\n\nFROM eclipse-temurin:17-jre-alpine\nVOLUME /tmp\nARG DEPENDENCY=/workspace/app/target/dependency\nCOPY --from=build ${DEPENDENCY}/BOOT-INF/lib /app/lib\nCOPY --from=build ${DEPENDENCY}/META-INF /app/META-INF\nCOPY --from=build ${DEPENDENCY}/BOOT-INF/classes /app\nENTRYPOINT ["java","-cp","app:app/lib/*","com.company.project.ProjectApplication"]\n'})}),"\n",(0,r.jsx)(n.h3,{id:"docker-composeyml",children:"docker-compose.yml"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'version: \'3.8\'\nservices:\n  app:\n    build: .\n    ports:\n      - "8080:8080"\n    environment:\n      - SPRING_PROFILES_ACTIVE=prod\n    depends_on:\n      - postgres\n      - redis\n\n  postgres:\n    image: postgres:15\n    environment:\n      POSTGRES_DB: appdb\n      POSTGRES_USER: user\n      POSTGRES_PASSWORD: password\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n\n  redis:\n    image: redis:7-alpine\n    ports:\n      - "6379:6379"\n\nvolumes:\n  postgres_data:\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"best-practices-summary",children:"Best Practices Summary"}),"\n",(0,r.jsx)(n.h3,{id:"package-organization",children:"Package Organization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use feature-based or layer-based organization consistently"}),"\n",(0,r.jsx)(n.li,{children:"Keep packages cohesive and loosely coupled"}),"\n",(0,r.jsx)(n.li,{children:"Avoid circular dependencies"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"naming-conventions",children:"Naming Conventions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Controllers: ",(0,r.jsx)(n.code,{children:"{Entity}Controller"})]}),"\n",(0,r.jsxs)(n.li,{children:["Services: ",(0,r.jsx)(n.code,{children:"{Entity}Service"})," and ",(0,r.jsx)(n.code,{children:"{Entity}ServiceImpl"})]}),"\n",(0,r.jsxs)(n.li,{children:["Repositories: ",(0,r.jsx)(n.code,{children:"{Entity}Repository"})]}),"\n",(0,r.jsxs)(n.li,{children:["DTOs: ",(0,r.jsx)(n.code,{children:"{Purpose}{Entity}Request/Response"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Never commit secrets to version control"}),"\n",(0,r.jsx)(n.li,{children:"Use environment variables for sensitive data"}),"\n",(0,r.jsx)(n.li,{children:"Implement proper authentication and authorization"}),"\n",(0,r.jsx)(n.li,{children:"Use HTTPS in production"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"performance",children:"Performance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Implement caching strategically"}),"\n",(0,r.jsx)(n.li,{children:"Use connection pooling"}),"\n",(0,r.jsx)(n.li,{children:"Optimize database queries"}),"\n",(0,r.jsx)(n.li,{children:"Use async processing for long-running tasks"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"monitoring",children:"Monitoring"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Implement health checks"}),"\n",(0,r.jsx)(n.li,{children:"Add application metrics (Micrometer/Prometheus)"}),"\n",(0,r.jsx)(n.li,{children:"Use structured logging"}),"\n",(0,r.jsx)(n.li,{children:"Set up alerting"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"documentation",children:"Documentation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Maintain updated README"}),"\n",(0,r.jsx)(n.li,{children:"Document API using OpenAPI/Swagger"}),"\n",(0,r.jsx)(n.li,{children:"Keep architecture documentation current"}),"\n",(0,r.jsx)(n.li,{children:"Add inline comments for complex logic"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"additional-production-considerations",children:"Additional Production Considerations"}),"\n",(0,r.jsx)(n.h3,{id:"cicd-pipeline",children:"CI/CD Pipeline"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Automated testing"}),"\n",(0,r.jsx)(n.li,{children:"Code quality checks (SonarQube)"}),"\n",(0,r.jsx)(n.li,{children:"Security scanning"}),"\n",(0,r.jsx)(n.li,{children:"Automated deployment"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"monitoring--logging",children:"Monitoring & Logging"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Centralized logging (ELK stack)"}),"\n",(0,r.jsx)(n.li,{children:"APM tools (New Relic, Datadog)"}),"\n",(0,r.jsx)(n.li,{children:"Health check endpoints"}),"\n",(0,r.jsx)(n.li,{children:"Custom metrics"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"database-management",children:"Database Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Migration scripts (Flyway/Liquibase)"}),"\n",(0,r.jsx)(n.li,{children:"Backup strategies"}),"\n",(0,r.jsx)(n.li,{children:"Read replicas for scaling"}),"\n",(0,r.jsx)(n.li,{children:"Connection pooling (HikariCP)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"api-versioning",children:"API Versioning"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"/api/v1/users\n/api/v2/users\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rate-limiting--throttling",children:"Rate Limiting & Throttling"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Implement request rate limiting"}),"\n",(0,r.jsx)(n.li,{children:"Use API gateway when scaling"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This structure provides a solid foundation for building production-ready Spring Boot applications that are maintainable, scalable, and follow industry best practices."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);