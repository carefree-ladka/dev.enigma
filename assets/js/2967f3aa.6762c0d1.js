"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[61422],{22596:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>t,metadata:()=>o,toc:()=>h});var n=i(74848),r=i(28453);const t={},l="Graph Problems - Comprehensive Guide",o={id:"DSA/DSA Problems/Graph Problems - Comprehensive Guide",title:"Graph Problems - Comprehensive Guide",description:"DFS | BFS | Union Find | Dijkstra | Topological Sort | Advanced Algorithms",source:"@site/docs/DSA/DSA Problems/Graph Problems - Comprehensive Guide.mdx",sourceDirName:"DSA/DSA Problems",slug:"/DSA/DSA Problems/Graph Problems - Comprehensive Guide",permalink:"/docs/DSA/DSA Problems/Graph Problems - Comprehensive Guide",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/DSA/DSA Problems/Graph Problems - Comprehensive Guide.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Dynamic Programming Problems - Comprehensive Guide",permalink:"/docs/DSA/DSA Problems/Dynamic Programming Problems - Comprehensive Guide"},next:{title:"Heap Problems - Comprehensive Guide",permalink:"/docs/DSA/DSA Problems/Heap Problems - Comprehensive Guide"}},c={},h=[{value:"DFS | BFS | Union Find | Dijkstra | Topological Sort | Advanced Algorithms",id:"dfs--bfs--union-find--dijkstra--topological-sort--advanced-algorithms",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"1. Graph Basics &amp; Representation",id:"1-graph-basics--representation",level:2},{value:"Fundamental Concepts",id:"fundamental-concepts",level:3},{value:"2. Depth First Search (DFS)",id:"2-depth-first-search-dfs",level:2},{value:"Basic DFS",id:"basic-dfs",level:3},{value:"DFS with Backtracking",id:"dfs-with-backtracking",level:3},{value:"DFS for Cycle Detection",id:"dfs-for-cycle-detection",level:3},{value:"Advanced DFS",id:"advanced-dfs",level:3},{value:"3. Breadth First Search (BFS)",id:"3-breadth-first-search-bfs",level:2},{value:"Basic BFS",id:"basic-bfs",level:3},{value:"BFS for Shortest Path",id:"bfs-for-shortest-path",level:3},{value:"BFS State Space Search",id:"bfs-state-space-search",level:3},{value:"Advanced BFS",id:"advanced-bfs",level:3},{value:"4. Union Find (Disjoint Set)",id:"4-union-find-disjoint-set",level:2},{value:"Basic Union Find",id:"basic-union-find",level:3},{value:"Union Find with Ranking",id:"union-find-with-ranking",level:3},{value:"Advanced Union Find",id:"advanced-union-find",level:3},{value:"5. Topological Sort",id:"5-topological-sort",level:2},{value:"Kahn&#39;s Algorithm (BFS)",id:"kahns-algorithm-bfs",level:3},{value:"DFS-based Topological Sort",id:"dfs-based-topological-sort",level:3},{value:"Applications",id:"applications",level:3},{value:"6. Shortest Path - Dijkstra",id:"6-shortest-path---dijkstra",level:2},{value:"Basic Dijkstra",id:"basic-dijkstra",level:3},{value:"Modified Dijkstra",id:"modified-dijkstra",level:3},{value:"Advanced Applications",id:"advanced-applications",level:3},{value:"7. Shortest Path - Bellman Ford",id:"7-shortest-path---bellman-ford",level:2},{value:"Basic Bellman Ford",id:"basic-bellman-ford",level:3},{value:"Negative Cycle Detection",id:"negative-cycle-detection",level:3},{value:"8. 0/1 BFS",id:"8-01-bfs",level:2},{value:"Basic 0/1 BFS",id:"basic-01-bfs",level:3},{value:"Applications",id:"applications-1",level:3},{value:"9. Multi-Source BFS",id:"9-multi-source-bfs",level:2},{value:"Basic Multi-Source BFS",id:"basic-multi-source-bfs",level:3},{value:"Advanced Applications",id:"advanced-applications-1",level:3},{value:"10. Minimum Spanning Tree",id:"10-minimum-spanning-tree",level:2},{value:"Kruskal&#39;s Algorithm (Union Find)",id:"kruskals-algorithm-union-find",level:3},{value:"Prim&#39;s Algorithm",id:"prims-algorithm",level:3},{value:"11. Cycle Detection",id:"11-cycle-detection",level:2},{value:"Undirected Graph",id:"undirected-graph",level:3},{value:"Directed Graph",id:"directed-graph",level:3},{value:"Advanced",id:"advanced",level:3},{value:"12. Bipartite Graphs",id:"12-bipartite-graphs",level:2},{value:"Basic Bipartite Check",id:"basic-bipartite-check",level:3},{value:"Applications",id:"applications-2",level:3},{value:"13. Strongly Connected Components",id:"13-strongly-connected-components",level:2},{value:"Kosaraju&#39;s Algorithm",id:"kosarajus-algorithm",level:3},{value:"Tarjan&#39;s Algorithm",id:"tarjans-algorithm",level:3},{value:"14. Graph Coloring",id:"14-graph-coloring",level:2},{value:"Basic Coloring",id:"basic-coloring",level:3},{value:"Advanced",id:"advanced-1",level:3},{value:"15. Floyd-Warshall (All Pairs Shortest Path)",id:"15-floyd-warshall-all-pairs-shortest-path",level:2},{value:"16. Advanced Graph Problems",id:"16-advanced-graph-problems",level:2},{value:"Eulerian Path/Circuit",id:"eulerian-pathcircuit",level:3},{value:"Graph Matching",id:"graph-matching",level:3},{value:"Complex Graph Problems",id:"complex-graph-problems",level:3}];function d(e){const s={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"graph-problems---comprehensive-guide",children:"Graph Problems - Comprehensive Guide"})}),"\n",(0,n.jsx)(s.h2,{id:"dfs--bfs--union-find--dijkstra--topological-sort--advanced-algorithms",children:"DFS | BFS | Union Find | Dijkstra | Topological Sort | Advanced Algorithms"}),"\n",(0,n.jsx)(s.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#1-graph-basics--representation",children:"Graph Basics & Representation"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#2-depth-first-search-dfs",children:"Depth First Search (DFS)"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#3-breadth-first-search-bfs",children:"Breadth First Search (BFS)"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#4-union-find-disjoint-set",children:"Union Find (Disjoint Set)"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#5-topological-sort",children:"Topological Sort"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#6-shortest-path---dijkstra",children:"Shortest Path - Dijkstra"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#7-shortest-path---bellman-ford",children:"Shortest Path - Bellman Ford"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#8-01-bfs",children:"0/1 BFS"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#9-multi-source-bfs",children:"Multi-Source BFS"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#10-minimum-spanning-tree",children:"Minimum Spanning Tree"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#11-cycle-detection",children:"Cycle Detection"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#12-bipartite-graphs",children:"Bipartite Graphs"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#13-strongly-connected-components",children:"Strongly Connected Components"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#14-graph-coloring",children:"Graph Coloring"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#15-floyd-warshall-all-pairs-shortest-path",children:"Floyd-Warshall (All Pairs Shortest Path)"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#16-advanced-graph-problems",children:"Advanced Graph Problems"})}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"1-graph-basics--representation",children:"1. Graph Basics & Representation"}),"\n",(0,n.jsx)(s.h3,{id:"fundamental-concepts",children:"Fundamental Concepts"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/find-the-town-judge/",children:"Find the Town Judge"})})," - Basic graph property (in-degree, out-degree)"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/find-center-of-star-graph/",children:"Find Center of Star Graph"})})," - Identify central node"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/find-if-path-exists-in-graph/",children:"Find if Path Exists in Graph"})})," - Basic connectivity check"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/build-a-matrix-with-conditions/",children:"Build a Matrix With Conditions"})})," - Graph constraints"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/clone-graph/",children:"Clone Graph"})})," - Deep copy of graph"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/all-paths-from-source-to-target/",children:"All Paths From Source to Target"})})," - Find all paths (DAG)"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"2-depth-first-search-dfs",children:"2. Depth First Search (DFS)"}),"\n",(0,n.jsx)(s.h3,{id:"basic-dfs",children:"Basic DFS"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/number-of-islands/",children:"Number of Islands"})})," - Classic DFS on grid"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/max-area-of-island/",children:"Max Area of Island"})})," - Find largest connected component"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/flood-fill/",children:"Flood Fill"})})," - Color connected region"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/number-of-provinces/",children:"Number of Provinces"})})," - Count connected components"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/find-all-groups-of-farmland/",children:"Find All Groups of Farmland"})})," - Identify rectangular regions"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/keys-and-rooms/",children:"Keys and Rooms"})})," - Reachability problem"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"dfs-with-backtracking",children:"DFS with Backtracking"}),"\n",(0,n.jsxs)(s.ol,{start:"7",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/all-paths-from-source-to-target/",children:"All Paths From Source to Target"})})," - Find all paths"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/path-with-maximum-gold/",children:"Path With Maximum Gold"})})," - Find optimal path with backtracking"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/word-search/",children:"Word Search"})})," - Search word in grid"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/word-search-ii/",children:"Word Search II"})})," - Multiple words search (DFS + Trie)"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/combination-sum/",children:"Combination Sum"})})," - DFS with combinations"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/palindrome-partitioning/",children:"Palindrome Partitioning"})})," - Partition with backtracking"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"dfs-for-cycle-detection",children:"DFS for Cycle Detection"}),"\n",(0,n.jsxs)(s.ol,{start:"13",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/course-schedule/",children:"Course Schedule"})})," - Detect cycle in directed graph"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/course-schedule-ii/",children:"Course Schedule II"})})," - Topological sort with DFS"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/graph-valid-tree/",children:"Graph Valid Tree"})})," - Check if graph is tree"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/redundant-connection/",children:"Redundant Connection"})})," - Find edge creating cycle"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"advanced-dfs",children:"Advanced DFS"}),"\n",(0,n.jsxs)(s.ol,{start:"17",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/number-of-enclaves/",children:"Number of Enclaves"})})," - Count unreachable cells"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/surrounded-regions/",children:"Surrounded Regions"})})," - Capture regions"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/number-of-closed-islands/",children:"Number of Closed Islands"})})," - Islands not touching boundary"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/count-sub-islands/",children:"Count Sub Islands"})})," - Islands subset problem"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/pacific-atlantic-water-flow/",children:"Pacific Atlantic Water Flow"})})," - Reverse DFS from boundaries"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix/",children:"Longest Increasing Path in a Matrix"})})," - DFS with memoization"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"3-breadth-first-search-bfs",children:"3. Breadth First Search (BFS)"}),"\n",(0,n.jsx)(s.h3,{id:"basic-bfs",children:"Basic BFS"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/binary-tree-level-order-traversal/",children:"Binary Tree Level Order Traversal"})})," - Level by level traversal"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/minimum-depth-of-binary-tree/",children:"Minimum Depth of Binary Tree"})})," - Shortest path to leaf"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/shortest-path-in-binary-matrix/",children:"Shortest Path in Binary Matrix"})})," - 8-directional shortest path"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/shortest-bridge/",children:"Shortest Bridge"})})," - Connect two islands"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/nearest-exit-from-entrance-in-maze/",children:"Nearest Exit from Entrance in Maze"})})," - Find nearest exit"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/jump-game-iii/",children:"Jump Game III"})})," - Reach zero using BFS"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"bfs-for-shortest-path",children:"BFS for Shortest Path"}),"\n",(0,n.jsxs)(s.ol,{start:"7",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/01-matrix/",children:"01 Matrix"})})," - Distance to nearest 0"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/as-far-from-land-as-possible/",children:"As Far from Land as Possible"})})," - Furthest from land"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/walls-and-gates/",children:"Walls and Gates"})})," - Distance to gate"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/rotting-oranges/",children:"Rotting Oranges"})})," - Multi-source BFS"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/shortest-path-to-get-food/",children:"Shortest Path to Get Food"})})," - Grid shortest path"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/snakes-and-ladders/",children:"Snakes and Ladders"})})," - Board game shortest path"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"bfs-state-space-search",children:"BFS State Space Search"}),"\n",(0,n.jsxs)(s.ol,{start:"13",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/open-the-lock/",children:"Open the Lock"})})," - State space BFS"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/minimum-genetic-mutation/",children:"Minimum Genetic Mutation"})})," - String transformation"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/word-ladder/",children:"Word Ladder"})})," - Word transformation chain"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/word-ladder-ii/",children:"Word Ladder II"})})," - All shortest transformation sequences"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/sliding-puzzle/",children:"Sliding Puzzle"})})," - Puzzle solving with BFS"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/minimum-knight-moves/",children:"Minimum Knight Moves"})})," - Chess knight movement"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"advanced-bfs",children:"Advanced BFS"}),"\n",(0,n.jsxs)(s.ol,{start:"19",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/cut-off-trees-for-golf-event/",children:"Cut Off Trees for Golf Event"})})," - Multiple BFS searches"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/minimum-moves-to-reach-target-with-rotations/",children:"Minimum Moves to Reach Target with Rotations"})})," - Complex state BFS"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/bus-routes/",children:"Bus Routes"})})," - Graph of routes"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/shortest-path-visiting-all-nodes/",children:"Shortest Path Visiting All Nodes"})})," - BFS with bitmask"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"4-union-find-disjoint-set",children:"4. Union Find (Disjoint Set)"}),"\n",(0,n.jsx)(s.h3,{id:"basic-union-find",children:"Basic Union Find"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/number-of-provinces/",children:"Number of Provinces"})})," - Connected components"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/",children:"Number of Connected Components in an Undirected Graph"})})," - Count components"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/graph-valid-tree/",children:"Graph Valid Tree"})})," - Validate tree using union find"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/redundant-connection/",children:"Redundant Connection"})})," - Find redundant edge"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/redundant-connection-ii/",children:"Redundant Connection II"})})," - Directed graph variant"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/most-stones-removed-with-same-row-or-column/",children:"Most Stones Removed with Same Row or Column"})})," - Union by row/column"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"union-find-with-ranking",children:"Union Find with Ranking"}),"\n",(0,n.jsxs)(s.ol,{start:"7",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/accounts-merge/",children:"Accounts Merge"})})," - Merge by common emails"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/smallest-string-with-swaps/",children:"Smallest String With Swaps"})})," - Character swapping"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/satisfiability-of-equality-equations/",children:"Satisfiability of Equality Equations"})})," - Equation validation"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/evaluate-division/",children:"Evaluate Division"})})," - Union find with weights"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/sentence-similarity-ii/",children:"Sentence Similarity II"})})," - Transitive similarity"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"advanced-union-find",children:"Advanced Union Find"}),"\n",(0,n.jsxs)(s.ol,{start:"12",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/number-of-islands-ii/",children:"Number of Islands II"})})," - Dynamic connectivity"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/swim-in-rising-water/",children:"Swim in Rising Water"})})," - Binary search + union find"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/minimize-malware-spread/",children:"Minimize Malware Spread"})})," - Component analysis"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/minimize-malware-spread-ii/",children:"Minimize Malware Spread II"})})," - Advanced variant"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths/",children:"Checking Existence of Edge Length Limited Paths"})})," - Offline queries"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/number-of-good-paths/",children:"Number of Good Paths"})})," - Union find with sorting"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/largest-component-size-by-common-factor/",children:"Largest Component Size by Common Factor"})})," - Prime factorization + UF"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"5-topological-sort",children:"5. Topological Sort"}),"\n",(0,n.jsx)(s.h3,{id:"kahns-algorithm-bfs",children:"Kahn's Algorithm (BFS)"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/course-schedule/",children:"Course Schedule"})})," - Detect cycle"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/course-schedule-ii/",children:"Course Schedule II"})})," - Return topological order"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/minimum-height-trees/",children:"Minimum Height Trees"})})," - Find tree centers"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/alien-dictionary/",children:"Alien Dictionary"})})," - Derive character order"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/sequence-reconstruction/",children:"Sequence Reconstruction"})})," - Validate unique order"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies/",children:"Sort Items by Groups Respecting Dependencies"})})," - Nested topological sort"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"dfs-based-topological-sort",children:"DFS-based Topological Sort"}),"\n",(0,n.jsxs)(s.ol,{start:"7",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/course-schedule-iv/",children:"Course Schedule IV"})})," - Prerequisite queries"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/parallel-courses/",children:"Parallel Courses"})})," - Minimum semesters"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/parallel-courses-ii/",children:"Parallel Courses II"})})," - Limited courses per semester"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/find-all-possible-recipes-from-given-supplies/",children:"Find All Possible Recipes from Given Supplies"})})," - Recipe dependencies"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"applications",children:"Applications"}),"\n",(0,n.jsxs)(s.ol,{start:"11",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://practice.geeksforgeeks.org/problems/longest-path-in-a-directed-acyclic-graph/",children:"Longest Path in a Directed Acyclic Graph"})})," - DP on DAG"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph/",children:"All Ancestors of a Node in a Directed Acyclic Graph"})})," - Find ancestors"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/build-a-matrix-with-conditions/",children:"Build a Matrix With Conditions"})})," - 2D topological constraints"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"6-shortest-path---dijkstra",children:"6. Shortest Path - Dijkstra"}),"\n",(0,n.jsx)(s.h3,{id:"basic-dijkstra",children:"Basic Dijkstra"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/network-delay-time/",children:"Network Delay Time"})})," - Single source shortest path"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/path-with-maximum-probability/",children:"Path with Maximum Probability"})})," - Maximum product path"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/cheapest-flights-within-k-stops/",children:"Cheapest Flights Within K Stops"})})," - Shortest path with constraints"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/path-with-minimum-effort/",children:"Path With Minimum Effort"})})," - Minimize maximum effort"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/swim-in-rising-water/",children:"Swim in Rising Water"})})," - Minimize maximum elevation"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid/",children:"Minimum Cost to Make at Least One Valid Path in a Grid"})})," - Grid modification cost"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"modified-dijkstra",children:"Modified Dijkstra"}),"\n",(0,n.jsxs)(s.ol,{start:"7",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/the-maze-ii/",children:"The Maze II"})})," - Shortest distance with rolling ball"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/reachable-nodes-in-subdivided-graph/",children:"Reachable Nodes In Subdivided Graph"})})," - Modified edges"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/find-the-shortest-superstring/",children:"Find the Shortest Superstring"})})," - TSP variant"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/minimum-weighted-subgraph-with-the-required-paths/",children:"Minimum Weighted Subgraph With the Required Paths"})})," - Multiple sources/destinations"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"advanced-applications",children:"Advanced Applications"}),"\n",(0,n.jsxs)(s.ol,{start:"11",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/design-graph-with-shortest-path-calculator/",children:"Design Graph With Shortest Path Calculator"})})," - Design with Dijkstra"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/",children:"Find the City With the Smallest Number of Neighbors at a Threshold Distance"})})," - Distance threshold"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/shortest-path-with-alternating-colors/",children:"Shortest Path with Alternating Colors"})})," - Color constraints"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"7-shortest-path---bellman-ford",children:"7. Shortest Path - Bellman Ford"}),"\n",(0,n.jsx)(s.h3,{id:"basic-bellman-ford",children:"Basic Bellman Ford"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/network-delay-time/",children:"Network Delay Time"})})," - Can use Bellman Ford"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/cheapest-flights-within-k-stops/",children:"Cheapest Flights Within K Stops"})})," - Limited iterations"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/find-the-safest-path-in-a-grid/",children:"Find the Safest Path in a Grid"})})," - Safety distance optimization"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"negative-cycle-detection",children:"Negative Cycle Detection"}),"\n",(0,n.jsxs)(s.ol,{start:"4",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid/",children:"Check if There is a Valid Path in a Grid"})})," - Path validation"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/minimum-cost-to-reach-destination-in-time/",children:"Minimum Cost to Reach Destination in Time"})})," - Time and cost constraints"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"8-01-bfs",children:"8. 0/1 BFS"}),"\n",(0,n.jsx)(s.h3,{id:"basic-01-bfs",children:"Basic 0/1 BFS"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid/",children:"Minimum Cost to Make at Least One Valid Path in a Grid"})})," - 0 cost for correct direction, 1 otherwise"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/shortest-path-in-a-grid-with-obstacles-elimination/",children:"Shortest Path in a Grid with Obstacles Elimination"})})," - Can eliminate K obstacles"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner/",children:"Minimum Obstacle Removal to Reach Corner"})})," - Remove obstacles optimally"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"applications-1",children:"Applications"}),"\n",(0,n.jsxs)(s.ol,{start:"4",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/cut-off-trees-for-golf-event/",children:"Cut Off Trees for Golf Event"})})," - Modified BFS"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/escape-the-spreading-fire/",children:"Escape the Spreading Fire"})})," - Time-based 0/1 BFS"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"9-multi-source-bfs",children:"9. Multi-Source BFS"}),"\n",(0,n.jsx)(s.h3,{id:"basic-multi-source-bfs",children:"Basic Multi-Source BFS"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/rotting-oranges/",children:"Rotting Oranges"})})," - Multiple starting points"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/walls-and-gates/",children:"Walls and Gates"})})," - Distance from multiple gates"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/01-matrix/",children:"01 Matrix"})})," - Distance to nearest 0"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/as-far-from-land-as-possible/",children:"As Far from Land as Possible"})})," - Maximum distance from land"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/shortest-bridge/",children:"Shortest Bridge"})})," - Expand from one island to reach another"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"advanced-applications-1",children:"Advanced Applications"}),"\n",(0,n.jsxs)(s.ol,{start:"6",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/shortest-path-in-a-grid-with-obstacles-elimination/",children:"Shortest Path in a Grid with Obstacles Elimination"})})," - State-based multi-source"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/map-of-highest-peak/",children:"Map of Highest Peak"})})," - Assign heights from water cells"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/detonate-the-maximum-bombs/",children:"Detonate the Maximum Bombs"})})," - Chain reaction simulation"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/shortest-distance-after-road-addition-queries-i/",children:"Shortest Distance After Road Addition Queries I"})})," - Dynamic shortest path"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"10-minimum-spanning-tree",children:"10. Minimum Spanning Tree"}),"\n",(0,n.jsx)(s.h3,{id:"kruskals-algorithm-union-find",children:"Kruskal's Algorithm (Union Find)"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/min-cost-to-connect-all-points/",children:"Min Cost to Connect All Points"})})," - Manhattan distance MST"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree/",children:"Find Critical and Pseudo-Critical Edges in MST"})})," - Edge classification"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/optimize-water-distribution-in-a-village/",children:"Optimize Water Distribution in a Village"})})," - Virtual node MST"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"prims-algorithm",children:"Prim's Algorithm"}),"\n",(0,n.jsxs)(s.ol,{start:"4",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/min-cost-to-connect-all-points/",children:"Min Cost to Connect All Points"})})," - Can use Prim's"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/connecting-cities-with-minimum-cost/",children:"Connecting Cities With Minimum Cost"})})," - Standard MST"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"11-cycle-detection",children:"11. Cycle Detection"}),"\n",(0,n.jsx)(s.h3,{id:"undirected-graph",children:"Undirected Graph"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/redundant-connection/",children:"Redundant Connection"})})," - Find edge creating cycle"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/graph-valid-tree/",children:"Graph Valid Tree"})})," - No cycles + connected"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/find-eventual-safe-states/",children:"Find Eventual Safe States"})})," - Nodes not in cycle"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"directed-graph",children:"Directed Graph"}),"\n",(0,n.jsxs)(s.ol,{start:"4",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/course-schedule/",children:"Course Schedule"})})," - Cycle detection in DAG"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/redundant-connection-ii/",children:"Redundant Connection II"})})," - Directed graph cycle"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://practice.geeksforgeeks.org/problems/detect-cycle-in-a-directed-graph/",children:"Detect Cycle in a Directed Graph"})})," - Classic problem"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"advanced",children:"Advanced"}),"\n",(0,n.jsxs)(s.ol,{start:"7",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/loud-and-rich/",children:"Loud and Rich"})})," - DFS with memoization"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting/",children:"Maximum Employees to Be Invited to a Meeting"})})," - Complex cycle analysis"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"12-bipartite-graphs",children:"12. Bipartite Graphs"}),"\n",(0,n.jsx)(s.h3,{id:"basic-bipartite-check",children:"Basic Bipartite Check"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/is-graph-bipartite/",children:"Is Graph Bipartite?"})})," - 2-coloring check"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/possible-bipartition/",children:"Possible Bipartition"})})," - Partition into two groups"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/divide-nodes-into-the-maximum-number-of-groups/",children:"Divide Nodes Into the Maximum Number of Groups"})})," - Multi-level bipartite"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"applications-2",children:"Applications"}),"\n",(0,n.jsxs)(s.ol,{start:"4",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/minimum-height-trees/",children:"Minimum Height Trees"})})," - Related to bipartite properties"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/flower-planting-with-no-adjacent/",children:"Flower Planting With No Adjacent"})})," - Graph coloring variant"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"13-strongly-connected-components",children:"13. Strongly Connected Components"}),"\n",(0,n.jsx)(s.h3,{id:"kosarajus-algorithm",children:"Kosaraju's Algorithm"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting/",children:"Maximum Employees to Be Invited to a Meeting"})})," - SCC analysis"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/reachable-nodes-with-restrictions/",children:"Reachable Nodes With Restrictions"})})," - Connectivity with constraints"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"tarjans-algorithm",children:"Tarjan's Algorithm"}),"\n",(0,n.jsxs)(s.ol,{start:"3",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/critical-connections-in-a-network/",children:"Critical Connections in a Network"})})," - Find bridges"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/find-eventual-safe-states/",children:"Find Eventual Safe States"})})," - Terminal nodes"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"14-graph-coloring",children:"14. Graph Coloring"}),"\n",(0,n.jsx)(s.h3,{id:"basic-coloring",children:"Basic Coloring"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/flower-planting-with-no-adjacent/",children:"Flower Planting With No Adjacent"})})," - 4-coloring"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/coloring-a-border/",children:"Coloring A Border"})})," - Color border cells"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/possible-bipartition/",children:"Possible Bipartition"})})," - 2-coloring"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"advanced-1",children:"Advanced"}),"\n",(0,n.jsxs)(s.ol,{start:"4",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/shortest-path-with-alternating-colors/",children:"Shortest Path with Alternating Colors"})})," - Color-constrained paths"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/divide-nodes-into-the-maximum-number-of-groups/",children:"Divide Nodes Into the Maximum Number of Groups"})})," - Maximum chromatic number"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"15-floyd-warshall-all-pairs-shortest-path",children:"15. Floyd-Warshall (All Pairs Shortest Path)"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/",children:"Find the City With the Smallest Number of Neighbors at a Threshold Distance"})})," - All pairs shortest path"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/network-delay-time/",children:"Network Delay Time"})})," - Can use Floyd-Warshall"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/evaluate-division/",children:"Evaluate Division"})})," - Transitive closure"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/shortest-path-visiting-all-nodes/",children:"Shortest Path Visiting All Nodes"})})," - Precompute distances"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/count-pairs-of-nodes/",children:"Count Pairs Of Nodes"})})," - Query after preprocessing"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"16-advanced-graph-problems",children:"16. Advanced Graph Problems"}),"\n",(0,n.jsx)(s.h3,{id:"eulerian-pathcircuit",children:"Eulerian Path/Circuit"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/reconstruct-itinerary/",children:"Reconstruct Itinerary"})})," - Eulerian path"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/valid-arrangement-of-pairs/",children:"Valid Arrangement of Pairs"})})," - Eulerian path in directed graph"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/cracking-the-safe/",children:"Cracking the Safe"})})," - De Bruijn sequence"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"graph-matching",children:"Graph Matching"}),"\n",(0,n.jsxs)(s.ol,{start:"4",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/maximum-matching-of-players-with-trainers/",children:"Maximum Matching of Players With Trainers"})})," - Bipartite matching"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/maximum-students-taking-exam/",children:"Maximum Students Taking Exam"})})," - Maximum independent set"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"complex-graph-problems",children:"Complex Graph Problems"}),"\n",(0,n.jsxs)(s.ol,{start:"6",children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/shortest-path-to-get-all-keys/",children:"Shortest Path to Get All Keys"})})," - BFS with state bitmask"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/find-the-shortest-superstring/",children:"Find the Shortest Superstring"})})," - Traveling salesman variant"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/campus-bikes-ii/",children:"Campus Bikes II"})})," - Assignment problem"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/frog-position-after-t-seconds/",children:"Frog Position After T Seconds"})})," - Probability on tree"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination/",children:"Number of Ways to Arrive at Destination"})})," - Count shortest paths"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/second-minimum-time-to-reach-destination/",children:"Second Minimum Time to Reach Destination"})})," - Second shortest path"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/minimum-reverse-operations/",children:"Minimum Reverse Operations"})})," - Array reversal graph"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/minimum-degree-of-a-connected-trio-in-a-graph/",children:"Minimum Degree of a Connected Trio in a Graph"})})," - Triangle enumeration"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island/",children:"Minimum Number of Days to Disconnect Island"})})," - Graph connectivity"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node/",children:"Number of Restricted Paths From First to Last Node"})})," - Dijkstra + DP"]}),"\n"]})]})}function a(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,s,i)=>{i.d(s,{R:()=>l,x:()=>o});var n=i(96540);const r={},t=n.createContext(r);function l(e){const s=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);