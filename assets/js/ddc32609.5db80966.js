"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8948],{162:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var t=n(4848),s=n(8453);const i={},a="10. Regular Expression Matching",c={id:"DSA/RegexMatching",title:"10. Regular Expression Matching",description:"https://leetcode.com/problems/regular-expression-matching/description/",source:"@site/docs/DSA/RegexMatching.mdx",sourceDirName:"DSA",slug:"/DSA/RegexMatching",permalink:"/js.enigma/docs/DSA/RegexMatching",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/DSA/RegexMatching.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Recursion Patterns Cheatsheet",permalink:"/js.enigma/docs/DSA/Recursion"},next:{title:"Reservoir Sampling",permalink:"/js.enigma/docs/DSA/ReservoirSampling"}},o={},p=[];function d(e){const r={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"10-regular-expression-matching",children:"10. Regular Expression Matching"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://leetcode.com/problems/regular-expression-matching/description/",children:"https://leetcode.com/problems/regular-expression-matching/description/"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-JavaScript",children:"/**\r\n * @param {string} s\r\n * @param {string} p\r\n * @return {boolean}\r\n */\r\nfunction isMatch(s, p) {\r\n  const m = s.length;\r\n  const n = p.length;\r\n\r\n  // dp[i][j] represents if s[0...i-1] matches p[0...j-1]\r\n  const dp = Array(m + 1).fill().map(() => Array(n + 1).fill(false));\r\n\r\n  // Empty pattern matches empty string\r\n  dp[0][0] = true;\r\n\r\n  // Handle patterns with *\r\n  for (let j = 1; j <= n; j++) {\r\n    if (p[j - 1] === '*') {\r\n      dp[0][j] = dp[0][j - 2];\r\n    }\r\n  }\r\n\r\n  // Fill the dp table\r\n  for (let i = 1; i <= m; i++) {\r\n    for (let j = 1; j <= n; j++) {\r\n      if (p[j - 1] === '*') {\r\n        // Two cases for '*':\r\n        // 1. Don't use the '*' and its preceding char (use zero times)\r\n        // 2. Use the '*' by matching the preceding char with current char in s\r\n        dp[i][j] = dp[i][j - 2] || // Case 1: Skip both * and its preceding char\r\n          (dp[i - 1][j] && // Case 2: Use * to match current char\r\n            (p[j - 2] === '.' || p[j - 2] === s[i - 1]));\r\n      } else {\r\n        // For non-'*' characters, check if current characters match\r\n        // and if previous characters matched\r\n        dp[i][j] = dp[i - 1][j - 1] &&\r\n          (p[j - 1] === '.' || p[j - 1] === s[i - 1]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return dp[m][n];\r\n}\n"})})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>c});var t=n(6540);const s={},i=t.createContext(s);function a(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);