"use strict";(self.webpackChunkdev_enigma=self.webpackChunkdev_enigma||[]).push([[9738],{26991:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>a});var o=t(74848),i=t(28453);const s={},l="Styled Components",r={id:"WebDev/CSS3/StyledComponents",title:"Styled Components",description:"1. Introduction to Styled Components",source:"@site/docs/WebDev/CSS3/StyledComponents.mdx",sourceDirName:"WebDev/CSS3",slug:"/WebDev/CSS3/StyledComponents",permalink:"/docs/WebDev/CSS3/StyledComponents",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/WebDev/CSS3/StyledComponents.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CSS Grid and Flexbox Cheatsheet",permalink:"/docs/WebDev/CSS3/GRIDFLEX"},next:{title:"Tailwind CSS Cheatsheet",permalink:"/docs/WebDev/CSS3/TailwindCSS"}},d={},a=[{value:"1. Introduction to Styled Components",id:"1-introduction-to-styled-components",level:2},{value:"What are Styled Components?",id:"what-are-styled-components",level:3},{value:"Key Benefits",id:"key-benefits",level:3},{value:"2. Basic Syntax",id:"2-basic-syntax",level:2},{value:"Creating a Styled Component",id:"creating-a-styled-component",level:3},{value:"3. Dynamic Styling",id:"3-dynamic-styling",level:2},{value:"Prop-Based Styling",id:"prop-based-styling",level:3},{value:"4. Extending Styles",id:"4-extending-styles",level:2},{value:"Extending Existing Components",id:"extending-existing-components",level:3},{value:"5. Adapting Based on Props",id:"5-adapting-based-on-props",level:2},{value:"Conditional Styling",id:"conditional-styling",level:3},{value:"6. Pseudo Selectors &amp; Nested Styles",id:"6-pseudo-selectors--nested-styles",level:2},{value:"Complex Selectors",id:"complex-selectors",level:3},{value:"7. Theming",id:"7-theming",level:2},{value:"Creating a Theme Provider",id:"creating-a-theme-provider",level:3},{value:"8. Global Styles",id:"8-global-styles",level:2},{value:"Creating Global Styles",id:"creating-global-styles",level:3},{value:"9. Advanced Techniques",id:"9-advanced-techniques",level:2},{value:"Animations",id:"animations",level:3},{value:"Media Queries",id:"media-queries",level:3},{value:"10. Performance Considerations",id:"10-performance-considerations",level:2},{value:"11. Common Pitfalls",id:"11-common-pitfalls",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"Quick Reference",id:"quick-reference",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"styled-components",children:"Styled Components"})}),"\n",(0,o.jsx)(n.h2,{id:"1-introduction-to-styled-components",children:"1. Introduction to Styled Components"}),"\n",(0,o.jsx)(n.h3,{id:"what-are-styled-components",children:"What are Styled Components?"}),"\n",(0,o.jsx)(n.p,{children:"Styled Components is a popular CSS-in-JS library that allows you to write actual CSS code to style your React components. It combines the best parts of ES6 and CSS to provide a powerful styling solution."}),"\n",(0,o.jsx)(n.h3,{id:"key-benefits",children:"Key Benefits"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Component-level styles"}),"\n",(0,o.jsx)(n.li,{children:"Dynamic styling based on props"}),"\n",(0,o.jsx)(n.li,{children:"Automatic vendor prefixing"}),"\n",(0,o.jsx)(n.li,{children:"Easy theming"}),"\n",(0,o.jsx)(n.li,{children:"No class name bugs"}),"\n",(0,o.jsx)(n.li,{children:"Simple dynamic styling"}),"\n",(0,o.jsx)(n.li,{children:"Painless maintenance"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"2-basic-syntax",children:"2. Basic Syntax"}),"\n",(0,o.jsx)(n.h3,{id:"creating-a-styled-component",children:"Creating a Styled Component"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import styled from 'styled-components';\n\n// Basic styled component\nconst Button = styled.button`\n  background-color: #3498db;\n  color: white;\n  padding: 10px 15px;\n  border-radius: 5px;\n`;\n\n// Usage in a component\nfunction App() {\n  return <Button>Click me</Button>;\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"3-dynamic-styling",children:"3. Dynamic Styling"}),"\n",(0,o.jsx)(n.h3,{id:"prop-based-styling",children:"Prop-Based Styling"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"const Button = styled.button`\n  background-color: ${props =>\n    props.primary ? '#3498db' : '#2ecc71'};\n  color: white;\n  padding: 10px 15px;\n  opacity: ${props => props.disabled ? 0.5 : 1};\n`;\n\n// Usage\n<Button primary>Primary Button</Button>\n<Button disabled>Disabled Button</Button>\n"})}),"\n",(0,o.jsx)(n.h2,{id:"4-extending-styles",children:"4. Extending Styles"}),"\n",(0,o.jsx)(n.h3,{id:"extending-existing-components",children:"Extending Existing Components"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"// Base Button\nconst Button = styled.button`\n  color: palevioletred;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`;\n\n// Extended Button\nconst TomatoButton = styled(Button)`\n  color: tomato;\n  border-color: tomato;\n`;\n"})}),"\n",(0,o.jsx)(n.h2,{id:"5-adapting-based-on-props",children:"5. Adapting Based on Props"}),"\n",(0,o.jsx)(n.h3,{id:"conditional-styling",children:"Conditional Styling"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"const Input = styled.input`\n  background: ${props => props.error ? 'red' : 'white'};\n  border: 2px solid ${props => props.error ? 'red' : 'gray'};\n\n  ${props => props.size === 'large' && `\n    font-size: 20px;\n    padding: 15px;\n  `}\n`;\n\n// Usage\n<Input error />\n<Input size=\"large\" />\n"})}),"\n",(0,o.jsx)(n.h2,{id:"6-pseudo-selectors--nested-styles",children:"6. Pseudo Selectors & Nested Styles"}),"\n",(0,o.jsx)(n.h3,{id:"complex-selectors",children:"Complex Selectors"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"const Card = styled.div`\n  background: white;\n\n  &:hover {\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n  }\n\n  & > h2 {\n    color: #333;\n  }\n\n  &::before {\n    content: '';\n    display: block;\n  }\n`;\n"})}),"\n",(0,o.jsx)(n.h2,{id:"7-theming",children:"7. Theming"}),"\n",(0,o.jsx)(n.h3,{id:"creating-a-theme-provider",children:"Creating a Theme Provider"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { ThemeProvider } from 'styled-components';\n\nconst theme = {\n  colors: {\n    primary: '#3498db',\n    secondary: '#2ecc71',\n    text: '#333',\n  },\n  fonts: {\n    main: 'Roboto, sans-serif',\n  },\n};\n\nconst ThemedButton = styled.button`\n  background-color: ${props => props.theme.colors.primary};\n  font-family: ${props => props.theme.fonts.main};\n`;\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <ThemedButton>Themed Button</ThemedButton>\n    </ThemeProvider>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"8-global-styles",children:"8. Global Styles"}),"\n",(0,o.jsx)(n.h3,{id:"creating-global-styles",children:"Creating Global Styles"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      {/* Rest of your app */}\n    </>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"9-advanced-techniques",children:"9. Advanced Techniques"}),"\n",(0,o.jsx)(n.h3,{id:"animations",children:"Animations"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import styled, { keyframes } from 'styled-components';\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst RotatingDiv = styled.div`\n  animation: ${rotate} 2s linear infinite;\n`;\n"})}),"\n",(0,o.jsx)(n.h3,{id:"media-queries",children:"Media Queries"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"const ResponsiveDiv = styled.div`\n  width: 100%;\n\n  @media (min-width: 768px) {\n    width: 50%;\n  }\n\n  @media (min-width: 1024px) {\n    width: 33.33%;\n  }\n`;\n"})}),"\n",(0,o.jsx)(n.h2,{id:"10-performance-considerations",children:"10. Performance Considerations"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Use ",(0,o.jsx)(n.code,{children:"memo"})," to prevent unnecessary re-renders"]}),"\n",(0,o.jsx)(n.li,{children:"Avoid creating styled components inside render methods"}),"\n",(0,o.jsxs)(n.li,{children:["Use the ",(0,o.jsx)(n.code,{children:"attrs"})," method for static props"]}),"\n",(0,o.jsx)(n.li,{children:"Minimize the use of interpolations"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"11-common-pitfalls",children:"11. Common Pitfalls"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Don't overuse dynamic styling"}),"\n",(0,o.jsx)(n.li,{children:"Be cautious with complex prop-based styles"}),"\n",(0,o.jsx)(n.li,{children:"Remember that styled-components can impact performance"}),"\n",(0,o.jsx)(n.li,{children:"Use code splitting for large applications"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,o.jsx)(n.p,{children:"Styled Components provide a powerful and flexible way to style React applications, combining the power of CSS with the dynamism of JavaScript."}),"\n",(0,o.jsx)(n.h3,{id:"quick-reference",children:"Quick Reference"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"\u2705 Component-level styling"}),"\n",(0,o.jsx)(n.li,{children:"\u2705 Dynamic props"}),"\n",(0,o.jsx)(n.li,{children:"\u2705 Easy theming"}),"\n",(0,o.jsx)(n.li,{children:"\u2705 No class name conflicts"}),"\n",(0,o.jsx)(n.li,{children:"\u2757 Potential performance overhead with complex styles"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Pro Tip"}),": Always profile your application and use styled-components judiciously!"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var o=t(96540);const i={},s=o.createContext(i);function l(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);