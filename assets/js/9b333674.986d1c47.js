"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9738],{6991:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>a});var t=r(4848),o=r(8453);const i={},s="Styled Components",l={id:"WebDev/CSS3/StyledComponents",title:"Styled Components",description:"1. Introduction to Styled Components",source:"@site/docs/WebDev/CSS3/StyledComponents.mdx",sourceDirName:"WebDev/CSS3",slug:"/WebDev/CSS3/StyledComponents",permalink:"/js.enigma/docs/WebDev/CSS3/StyledComponents",draft:!1,unlisted:!1,editUrl:"https://github.com/carefree-ladka/docs/WebDev/CSS3/StyledComponents.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CSS Grid and Flexbox Cheatsheet",permalink:"/js.enigma/docs/WebDev/CSS3/GRIDFLEX"},next:{title:"Tailwind CSS Cheatsheet",permalink:"/js.enigma/docs/WebDev/CSS3/TailwindCSS"}},d={},a=[{value:"1. Introduction to Styled Components",id:"1-introduction-to-styled-components",level:2},{value:"What are Styled Components?",id:"what-are-styled-components",level:3},{value:"Key Benefits",id:"key-benefits",level:3},{value:"2. Basic Syntax",id:"2-basic-syntax",level:2},{value:"Creating a Styled Component",id:"creating-a-styled-component",level:3},{value:"3. Dynamic Styling",id:"3-dynamic-styling",level:2},{value:"Prop-Based Styling",id:"prop-based-styling",level:3},{value:"4. Extending Styles",id:"4-extending-styles",level:2},{value:"Extending Existing Components",id:"extending-existing-components",level:3},{value:"5. Adapting Based on Props",id:"5-adapting-based-on-props",level:2},{value:"Conditional Styling",id:"conditional-styling",level:3},{value:"6. Pseudo Selectors &amp; Nested Styles",id:"6-pseudo-selectors--nested-styles",level:2},{value:"Complex Selectors",id:"complex-selectors",level:3},{value:"7. Theming",id:"7-theming",level:2},{value:"Creating a Theme Provider",id:"creating-a-theme-provider",level:3},{value:"8. Global Styles",id:"8-global-styles",level:2},{value:"Creating Global Styles",id:"creating-global-styles",level:3},{value:"9. Advanced Techniques",id:"9-advanced-techniques",level:2},{value:"Animations",id:"animations",level:3},{value:"Media Queries",id:"media-queries",level:3},{value:"10. Performance Considerations",id:"10-performance-considerations",level:2},{value:"11. Common Pitfalls",id:"11-common-pitfalls",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"Quick Reference",id:"quick-reference",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"styled-components",children:"Styled Components"})}),"\n",(0,t.jsx)(n.h2,{id:"1-introduction-to-styled-components",children:"1. Introduction to Styled Components"}),"\n",(0,t.jsx)(n.h3,{id:"what-are-styled-components",children:"What are Styled Components?"}),"\n",(0,t.jsx)(n.p,{children:"Styled Components is a popular CSS-in-JS library that allows you to write actual CSS code to style your React components. It combines the best parts of ES6 and CSS to provide a powerful styling solution."}),"\n",(0,t.jsx)(n.h3,{id:"key-benefits",children:"Key Benefits"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Component-level styles"}),"\n",(0,t.jsx)(n.li,{children:"Dynamic styling based on props"}),"\n",(0,t.jsx)(n.li,{children:"Automatic vendor prefixing"}),"\n",(0,t.jsx)(n.li,{children:"Easy theming"}),"\n",(0,t.jsx)(n.li,{children:"No class name bugs"}),"\n",(0,t.jsx)(n.li,{children:"Simple dynamic styling"}),"\n",(0,t.jsx)(n.li,{children:"Painless maintenance"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"2-basic-syntax",children:"2. Basic Syntax"}),"\n",(0,t.jsx)(n.h3,{id:"creating-a-styled-component",children:"Creating a Styled Component"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"import styled from 'styled-components';\r\n\r\n// Basic styled component\r\nconst Button = styled.button`\r\n  background-color: #3498db;\r\n  color: white;\r\n  padding: 10px 15px;\r\n  border-radius: 5px;\r\n`;\r\n\r\n// Usage in a component\r\nfunction App() {\r\n  return <Button>Click me</Button>;\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"3-dynamic-styling",children:"3. Dynamic Styling"}),"\n",(0,t.jsx)(n.h3,{id:"prop-based-styling",children:"Prop-Based Styling"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"const Button = styled.button`\r\n  background-color: ${props => \r\n    props.primary ? '#3498db' : '#2ecc71'};\r\n  color: white;\r\n  padding: 10px 15px;\r\n  opacity: ${props => props.disabled ? 0.5 : 1};\r\n`;\r\n\r\n// Usage\r\n<Button primary>Primary Button</Button>\r\n<Button disabled>Disabled Button</Button>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"4-extending-styles",children:"4. Extending Styles"}),"\n",(0,t.jsx)(n.h3,{id:"extending-existing-components",children:"Extending Existing Components"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"// Base Button\r\nconst Button = styled.button`\r\n  color: palevioletred;\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid palevioletred;\r\n  border-radius: 3px;\r\n`;\r\n\r\n// Extended Button\r\nconst TomatoButton = styled(Button)`\r\n  color: tomato;\r\n  border-color: tomato;\r\n`;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"5-adapting-based-on-props",children:"5. Adapting Based on Props"}),"\n",(0,t.jsx)(n.h3,{id:"conditional-styling",children:"Conditional Styling"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"const Input = styled.input`\r\n  background: ${props => props.error ? 'red' : 'white'};\r\n  border: 2px solid ${props => props.error ? 'red' : 'gray'};\r\n  \r\n  ${props => props.size === 'large' && `\r\n    font-size: 20px;\r\n    padding: 15px;\r\n  `}\r\n`;\r\n\r\n// Usage\r\n<Input error />\r\n<Input size=\"large\" />\n"})}),"\n",(0,t.jsx)(n.h2,{id:"6-pseudo-selectors--nested-styles",children:"6. Pseudo Selectors & Nested Styles"}),"\n",(0,t.jsx)(n.h3,{id:"complex-selectors",children:"Complex Selectors"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"const Card = styled.div`\r\n  background: white;\r\n  \r\n  &:hover {\r\n    box-shadow: 0 5px 15px rgba(0,0,0,0.1);\r\n  }\r\n  \r\n  & > h2 {\r\n    color: #333;\r\n  }\r\n  \r\n  &::before {\r\n    content: '';\r\n    display: block;\r\n  }\r\n`;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"7-theming",children:"7. Theming"}),"\n",(0,t.jsx)(n.h3,{id:"creating-a-theme-provider",children:"Creating a Theme Provider"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"import { ThemeProvider } from 'styled-components';\r\n\r\nconst theme = {\r\n  colors: {\r\n    primary: '#3498db',\r\n    secondary: '#2ecc71',\r\n    text: '#333'\r\n  },\r\n  fonts: {\r\n    main: 'Roboto, sans-serif'\r\n  }\r\n};\r\n\r\nconst ThemedButton = styled.button`\r\n  background-color: ${props => props.theme.colors.primary};\r\n  font-family: ${props => props.theme.fonts.main};\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ThemedButton>Themed Button</ThemedButton>\r\n    </ThemeProvider>\r\n  );\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"8-global-styles",children:"8. Global Styles"}),"\n",(0,t.jsx)(n.h3,{id:"creating-global-styles",children:"Creating Global Styles"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      {/* Rest of your app */}\r\n    </>\r\n  );\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"9-advanced-techniques",children:"9. Advanced Techniques"}),"\n",(0,t.jsx)(n.h3,{id:"animations",children:"Animations"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"import styled, { keyframes } from 'styled-components';\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst RotatingDiv = styled.div`\r\n  animation: ${rotate} 2s linear infinite;\r\n`;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"media-queries",children:"Media Queries"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"const ResponsiveDiv = styled.div`\r\n  width: 100%;\r\n  \r\n  @media (min-width: 768px) {\r\n    width: 50%;\r\n  }\r\n  \r\n  @media (min-width: 1024px) {\r\n    width: 33.33%;\r\n  }\r\n`;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"10-performance-considerations",children:"10. Performance Considerations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"memo"})," to prevent unnecessary re-renders"]}),"\n",(0,t.jsx)(n.li,{children:"Avoid creating styled components inside render methods"}),"\n",(0,t.jsxs)(n.li,{children:["Use the ",(0,t.jsx)(n.code,{children:"attrs"})," method for static props"]}),"\n",(0,t.jsx)(n.li,{children:"Minimize the use of interpolations"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"11-common-pitfalls",children:"11. Common Pitfalls"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Don't overuse dynamic styling"}),"\n",(0,t.jsx)(n.li,{children:"Be cautious with complex prop-based styles"}),"\n",(0,t.jsx)(n.li,{children:"Remember that styled-components can impact performance"}),"\n",(0,t.jsx)(n.li,{children:"Use code splitting for large applications"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(n.p,{children:"Styled Components provide a powerful and flexible way to style React applications, combining the power of CSS with the dynamism of JavaScript."}),"\n",(0,t.jsx)(n.h3,{id:"quick-reference",children:"Quick Reference"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Component-level styling"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Dynamic props"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Easy theming"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 No class name conflicts"}),"\n",(0,t.jsx)(n.li,{children:"\u2757 Potential performance overhead with complex styles"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Pro Tip"}),": Always profile your application and use styled-components judiciously!"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var t=r(6540);const o={},i=t.createContext(o);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);